{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VDatePicker/VDatePicker.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Fragment as _Fragment, mergeProps as _mergeProps, resolveDirective as _resolveDirective, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VDatePicker.css\";\n\n// Components\nimport { makeVDatePickerControlsProps, VDatePickerControls } from \"./VDatePickerControls.mjs\";\nimport { VDatePickerHeader } from \"./VDatePickerHeader.mjs\";\nimport { makeVDatePickerMonthProps, VDatePickerMonth } from \"./VDatePickerMonth.mjs\";\nimport { makeVDatePickerMonthsProps, VDatePickerMonths } from \"./VDatePickerMonths.mjs\";\nimport { makeVDatePickerYearsProps, VDatePickerYears } from \"./VDatePickerYears.mjs\";\nimport { VFadeTransition } from \"../transitions/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { makeVPickerProps, VPicker } from \"../../labs/VPicker/VPicker.mjs\"; // Composables\nimport { useDate } from \"../../composables/date/index.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, ref, shallowRef, watch } from 'vue';\nimport { genericComponent, omit, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\n// Types\nexport const makeVDatePickerProps = propsFactory({\n  // TODO: implement in v3.5\n  // calendarIcon: {\n  //   type: String,\n  //   default: '$calendar',\n  // },\n  // keyboardIcon: {\n  //   type: String,\n  //   default: '$edit',\n  // },\n  // inputMode: {\n  //   type: String as PropType<'calendar' | 'keyboard'>,\n  //   default: 'calendar',\n  // },\n  // inputText: {\n  //   type: String,\n  //   default: '$vuetify.datePicker.input.placeholder',\n  // },\n  // inputPlaceholder: {\n  //   type: String,\n  //   default: 'dd/mm/yyyy',\n  // },\n  header: {\n    type: String,\n    default: '$vuetify.datePicker.header'\n  },\n  ...makeVDatePickerControlsProps(),\n  ...makeVDatePickerMonthProps(),\n  ...omit(makeVDatePickerMonthsProps(), ['modelValue']),\n  ...omit(makeVDatePickerYearsProps(), ['modelValue']),\n  ...makeVPickerProps({\n    title: '$vuetify.datePicker.title'\n  }),\n  modelValue: null\n}, 'VDatePicker');\nexport const VDatePicker = genericComponent()({\n  name: 'VDatePicker',\n  props: makeVDatePickerProps(),\n  emits: {\n    'update:modelValue': date => true,\n    'update:month': date => true,\n    'update:year': date => true,\n    // 'update:inputMode': (date: any) => true,\n    'update:viewMode': date => true\n  },\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const adapter = useDate();\n    const {\n      t\n    } = useLocale();\n    const model = useProxiedModel(props, 'modelValue', undefined, v => wrapInArray(v), v => props.multiple ? v : v[0]);\n    const viewMode = useProxiedModel(props, 'viewMode');\n    // const inputMode = useProxiedModel(props, 'inputMode')\n    const internal = computed(() => {\n      const value = adapter.date(model.value?.[0]);\n      return value && adapter.isValid(value) ? value : adapter.date();\n    });\n    const month = ref(Number(props.month ?? adapter.getMonth(adapter.startOfMonth(internal.value))));\n    const year = ref(Number(props.year ?? adapter.getYear(adapter.startOfYear(adapter.setMonth(internal.value, month.value)))));\n    const isReversing = shallowRef(false);\n    const header = computed(() => {\n      return props.multiple && model.value.length > 1 ? t('$vuetify.datePicker.itemsSelected', model.value.length) : model.value[0] && adapter.isValid(model.value[0]) ? adapter.format(model.value[0], 'normalDateWithWeekday') : t(props.header);\n    });\n    const text = computed(() => {\n      return adapter.format(adapter.date(new Date(year.value, month.value, 1)), 'monthAndYear');\n    });\n    // const headerIcon = computed(() => props.inputMode === 'calendar' ? props.keyboardIcon : props.calendarIcon)\n    const headerTransition = computed(() => `date-picker-header${isReversing.value ? '-reverse' : ''}-transition`);\n    const minDate = computed(() => {\n      const date = adapter.date(props.min);\n      return props.min && adapter.isValid(date) ? date : null;\n    });\n    const maxDate = computed(() => {\n      const date = adapter.date(props.max);\n      return props.max && adapter.isValid(date) ? date : null;\n    });\n    const disabled = computed(() => {\n      if (props.disabled) return true;\n      const targets = [];\n      if (viewMode.value !== 'month') {\n        targets.push(...['prev', 'next']);\n      } else {\n        let _date = adapter.date();\n        _date = adapter.setYear(_date, year.value);\n        _date = adapter.setMonth(_date, month.value);\n        if (minDate.value) {\n          const date = adapter.addDays(adapter.startOfMonth(_date), -1);\n          adapter.isAfter(minDate.value, date) && targets.push('prev');\n        }\n        if (maxDate.value) {\n          const date = adapter.addDays(adapter.endOfMonth(_date), 1);\n          adapter.isAfter(date, maxDate.value) && targets.push('next');\n        }\n      }\n      return targets;\n    });\n\n    // function onClickAppend () {\n    //   inputMode.value = inputMode.value === 'calendar' ? 'keyboard' : 'calendar'\n    // }\n\n    function onClickNext() {\n      if (month.value < 11) {\n        month.value++;\n      } else {\n        year.value++;\n        month.value = 0;\n        onUpdateYear(year.value);\n      }\n      onUpdateMonth(month.value);\n    }\n    function onClickPrev() {\n      if (month.value > 0) {\n        month.value--;\n      } else {\n        year.value--;\n        month.value = 11;\n        onUpdateYear(year.value);\n      }\n      onUpdateMonth(month.value);\n    }\n    function onClickDate() {\n      viewMode.value = 'month';\n    }\n    function onClickMonth() {\n      viewMode.value = viewMode.value === 'months' ? 'month' : 'months';\n    }\n    function onClickYear() {\n      viewMode.value = viewMode.value === 'year' ? 'month' : 'year';\n    }\n    function onUpdateMonth(value) {\n      if (viewMode.value === 'months') onClickMonth();\n      emit('update:month', value);\n    }\n    function onUpdateYear(value) {\n      if (viewMode.value === 'year') onClickYear();\n      emit('update:year', value);\n    }\n    watch(model, (val, oldVal) => {\n      const before = adapter.date(wrapInArray(val)[0]);\n      const after = adapter.date(wrapInArray(oldVal)[0]);\n      isReversing.value = adapter.isBefore(before, after);\n    });\n    useRender(() => {\n      const pickerProps = VPicker.filterProps(props);\n      const datePickerControlsProps = VDatePickerControls.filterProps(props);\n      const datePickerHeaderProps = VDatePickerHeader.filterProps(props);\n      const datePickerMonthProps = VDatePickerMonth.filterProps(props);\n      const datePickerMonthsProps = omit(VDatePickerMonths.filterProps(props), ['modelValue']);\n      const datePickerYearsProps = omit(VDatePickerYears.filterProps(props), ['modelValue']);\n      const headerProps = {\n        header: header.value,\n        transition: headerTransition.value\n      };\n      return _createVNode(VPicker, _mergeProps(pickerProps, {\n        \"class\": ['v-date-picker', `v-date-picker--${viewMode.value}`, {\n          'v-date-picker--show-week': props.showWeek\n        }, props.class],\n        \"style\": props.style\n      }), {\n        title: () => slots.title?.() ?? _createVNode(\"div\", {\n          \"class\": \"v-date-picker__title\"\n        }, [t(props.title)]),\n        header: () => slots.header ? _createVNode(VDefaultsProvider, {\n          \"defaults\": {\n            VDatePickerHeader: {\n              ...headerProps\n            }\n          }\n        }, {\n          default: () => [slots.header?.(headerProps)]\n        }) : _createVNode(VDatePickerHeader, _mergeProps({\n          \"key\": \"header\"\n        }, datePickerHeaderProps, headerProps, {\n          \"onClick\": viewMode.value !== 'month' ? onClickDate : undefined\n        }), {\n          ...slots,\n          default: undefined\n        }),\n        default: () => _createVNode(_Fragment, null, [_createVNode(VDatePickerControls, _mergeProps(datePickerControlsProps, {\n          \"disabled\": disabled.value,\n          \"text\": text.value,\n          \"onClick:next\": onClickNext,\n          \"onClick:prev\": onClickPrev,\n          \"onClick:month\": onClickMonth,\n          \"onClick:year\": onClickYear\n        }), null), _createVNode(VFadeTransition, {\n          \"hideOnLeave\": true\n        }, {\n          default: () => [viewMode.value === 'months' ? _createVNode(VDatePickerMonths, _mergeProps({\n            \"key\": \"date-picker-months\"\n          }, datePickerMonthsProps, {\n            \"modelValue\": month.value,\n            \"onUpdate:modelValue\": [$event => month.value = $event, onUpdateMonth],\n            \"min\": minDate.value,\n            \"max\": maxDate.value\n          }), null) : viewMode.value === 'year' ? _createVNode(VDatePickerYears, _mergeProps({\n            \"key\": \"date-picker-years\"\n          }, datePickerYearsProps, {\n            \"modelValue\": year.value,\n            \"onUpdate:modelValue\": [$event => year.value = $event, onUpdateYear],\n            \"min\": minDate.value,\n            \"max\": maxDate.value\n          }), null) : _createVNode(VDatePickerMonth, _mergeProps({\n            \"key\": \"date-picker-month\"\n          }, datePickerMonthProps, {\n            \"modelValue\": model.value,\n            \"onUpdate:modelValue\": $event => model.value = $event,\n            \"month\": month.value,\n            \"onUpdate:month\": [$event => month.value = $event, onUpdateMonth],\n            \"year\": year.value,\n            \"onUpdate:year\": [$event => year.value = $event, onUpdateYear],\n            \"min\": minDate.value,\n            \"max\": maxDate.value\n          }), null)]\n        })]),\n        actions: slots.actions\n      });\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VDatePicker.mjs.map",
      "start": 1731941018346,
      "end": 1731941018586,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941018586,
      "end": 1731941018586,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941018586,
      "end": 1731941018586,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941018586,
      "end": 1731941018586,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941018587,
      "end": 1731941018587,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941018587,
      "end": 1731941018587,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941018587,
      "end": 1731941018587,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941018587,
      "end": 1731941018587,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941018587,
      "end": 1731941018587,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941018587,
      "end": 1731941018587,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941018587,
      "end": 1731941018587,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941018587,
      "end": 1731941018587,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941018587,
      "end": 1731941018587,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1731941018587,
      "end": 1731941018587,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941018587,
      "end": 1731941018588,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941018588,
      "end": 1731941018588,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941018588,
      "end": 1731941018588,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1731941018588,
      "end": 1731941018588,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1731941018588,
      "end": 1731941018588,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941018588,
      "end": 1731941018588,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941018588,
      "end": 1731941018588,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941018588,
      "end": 1731941018588,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941018588,
      "end": 1731941018588,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941018588,
      "end": 1731941018588,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941018588,
      "end": 1731941018588,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941018588,
      "end": 1731941018589,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941018589,
      "end": 1731941018589,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941018589,
      "end": 1731941018589,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941018589,
      "end": 1731941018589,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941018589,
      "end": 1731941018589,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941018589,
      "end": 1731941018589,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941018589,
      "end": 1731941018589,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941018589,
      "end": 1731941018589,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1731941018589,
      "end": 1731941018589,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1731941018589,
      "end": 1731941018589,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941018589,
      "end": 1731941018589,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941018590,
      "end": 1731941018590,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941018590,
      "end": 1731941018590,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941018590,
      "end": 1731941018590,
      "order": "normal"
    }
  ]
}
