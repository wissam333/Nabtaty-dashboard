{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/primevue/fileupload/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { addClass, removeClass } from '@primeuix/utils/dom';\nimport PlusIcon from '@primevue/icons/plus';\nimport TimesIcon from '@primevue/icons/times';\nimport UploadIcon from '@primevue/icons/upload';\nimport Button from 'primevue/button';\nimport Message from 'primevue/message';\nimport ProgressBar from 'primevue/progressbar';\nimport Ripple from 'primevue/ripple';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport FileUploadStyle from 'primevue/fileupload/style';\nimport Badge from 'primevue/badge';\nimport { resolveComponent, openBlock, createElementBlock, Fragment, renderList, mergeProps, createElementVNode, toDisplayString, createVNode, normalizeClass, withCtx, createBlock, resolveDynamicComponent, renderSlot, withKeys, createCommentVNode, createTextVNode, normalizeProps } from 'vue';\n\nvar script$2 = {\n  name: 'BaseFileUpload',\n  \"extends\": BaseComponent,\n  props: {\n    name: {\n      type: String,\n      \"default\": null\n    },\n    url: {\n      type: String,\n      \"default\": null\n    },\n    mode: {\n      type: String,\n      \"default\": 'advanced'\n    },\n    multiple: {\n      type: Boolean,\n      \"default\": false\n    },\n    accept: {\n      type: String,\n      \"default\": null\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    auto: {\n      type: Boolean,\n      \"default\": false\n    },\n    maxFileSize: {\n      type: Number,\n      \"default\": null\n    },\n    invalidFileSizeMessage: {\n      type: String,\n      \"default\": '{0}: Invalid file size, file size should be smaller than {1}.'\n    },\n    invalidFileTypeMessage: {\n      type: String,\n      \"default\": '{0}: Invalid file type, allowed file types: {1}.'\n    },\n    fileLimit: {\n      type: Number,\n      \"default\": null\n    },\n    invalidFileLimitMessage: {\n      type: String,\n      \"default\": 'Maximum number of files exceeded, limit is {0} at most.'\n    },\n    withCredentials: {\n      type: Boolean,\n      \"default\": false\n    },\n    previewWidth: {\n      type: Number,\n      \"default\": 50\n    },\n    chooseLabel: {\n      type: String,\n      \"default\": null\n    },\n    uploadLabel: {\n      type: String,\n      \"default\": null\n    },\n    cancelLabel: {\n      type: String,\n      \"default\": null\n    },\n    customUpload: {\n      type: Boolean,\n      \"default\": false\n    },\n    showUploadButton: {\n      type: Boolean,\n      \"default\": true\n    },\n    showCancelButton: {\n      type: Boolean,\n      \"default\": true\n    },\n    chooseIcon: {\n      type: String,\n      \"default\": undefined\n    },\n    uploadIcon: {\n      type: String,\n      \"default\": undefined\n    },\n    cancelIcon: {\n      type: String,\n      \"default\": undefined\n    },\n    style: null,\n    \"class\": null,\n    chooseButtonProps: {\n      type: null,\n      \"default\": null\n    },\n    uploadButtonProps: {\n      type: Object,\n      \"default\": function _default() {\n        return {\n          severity: 'secondary'\n        };\n      }\n    },\n    cancelButtonProps: {\n      type: Object,\n      \"default\": function _default() {\n        return {\n          severity: 'secondary'\n        };\n      }\n    }\n  },\n  style: FileUploadStyle,\n  provide: function provide() {\n    return {\n      $pcFileUpload: this,\n      $parentInstance: this\n    };\n  }\n};\n\nvar script$1 = {\n  name: 'FileContent',\n  hostName: 'FileUpload',\n  \"extends\": BaseComponent,\n  emits: ['remove'],\n  props: {\n    files: {\n      type: Array,\n      \"default\": function _default() {\n        return [];\n      }\n    },\n    badgeSeverity: {\n      type: String,\n      \"default\": 'warn'\n    },\n    badgeValue: {\n      type: String,\n      \"default\": null\n    },\n    previewWidth: {\n      type: Number,\n      \"default\": 50\n    },\n    templates: {\n      type: null,\n      \"default\": null\n    }\n  },\n  methods: {\n    formatSize: function formatSize(bytes) {\n      var _this$$primevue$confi;\n      var k = 1024;\n      var dm = 3;\n      var sizes = ((_this$$primevue$confi = this.$primevue.config.locale) === null || _this$$primevue$confi === void 0 ? void 0 : _this$$primevue$confi.fileSizeTypes) || ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n      if (bytes === 0) {\n        return \"0 \".concat(sizes[0]);\n      }\n      var i = Math.floor(Math.log(bytes) / Math.log(k));\n      var formattedSize = parseFloat((bytes / Math.pow(k, i)).toFixed(dm));\n      return \"\".concat(formattedSize, \" \").concat(sizes[i]);\n    }\n  },\n  components: {\n    Button: Button,\n    Badge: Badge,\n    TimesIcon: TimesIcon\n  }\n};\n\nvar _hoisted_1$1 = [\"alt\", \"src\", \"width\"];\nfunction render$1(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Badge = resolveComponent(\"Badge\");\n  var _component_TimesIcon = resolveComponent(\"TimesIcon\");\n  var _component_Button = resolveComponent(\"Button\");\n  return openBlock(true), createElementBlock(Fragment, null, renderList($props.files, function (file, index) {\n    return openBlock(), createElementBlock(\"div\", mergeProps({\n      key: file.name + file.type + file.size,\n      \"class\": _ctx.cx('file'),\n      ref_for: true\n    }, _ctx.ptm('file')), [createElementVNode(\"img\", mergeProps({\n      role: \"presentation\",\n      \"class\": _ctx.cx('fileThumbnail'),\n      alt: file.name,\n      src: file.objectURL,\n      width: $props.previewWidth,\n      ref_for: true\n    }, _ctx.ptm('fileThumbnail')), null, 16, _hoisted_1$1), createElementVNode(\"div\", mergeProps({\n      \"class\": _ctx.cx('fileInfo'),\n      ref_for: true\n    }, _ctx.ptm('fileInfo')), [createElementVNode(\"div\", mergeProps({\n      \"class\": _ctx.cx('fileName'),\n      ref_for: true\n    }, _ctx.ptm('fileName')), toDisplayString(file.name), 17), createElementVNode(\"span\", mergeProps({\n      \"class\": _ctx.cx('fileSize'),\n      ref_for: true\n    }, _ctx.ptm('fileSize')), toDisplayString($options.formatSize(file.size)), 17)], 16), createVNode(_component_Badge, {\n      value: $props.badgeValue,\n      \"class\": normalizeClass(_ctx.cx('pcFileBadge')),\n      severity: $props.badgeSeverity,\n      unstyled: _ctx.unstyled,\n      pt: _ctx.ptm('pcFileBadge')\n    }, null, 8, [\"value\", \"class\", \"severity\", \"unstyled\", \"pt\"]), createElementVNode(\"div\", mergeProps({\n      \"class\": _ctx.cx('fileActions'),\n      ref_for: true\n    }, _ctx.ptm('fileActions')), [createVNode(_component_Button, {\n      onClick: function onClick($event) {\n        return _ctx.$emit('remove', index);\n      },\n      text: \"\",\n      rounded: \"\",\n      severity: \"danger\",\n      \"class\": normalizeClass(_ctx.cx('pcFileRemoveButton')),\n      unstyled: _ctx.unstyled,\n      pt: _ctx.ptm('pcFileRemoveButton')\n    }, {\n      icon: withCtx(function (iconProps) {\n        return [$props.templates.fileremoveicon ? (openBlock(), createBlock(resolveDynamicComponent($props.templates.fileremoveicon), {\n          key: 0,\n          \"class\": normalizeClass(iconProps[\"class\"]),\n          file: file,\n          index: index\n        }, null, 8, [\"class\", \"file\", \"index\"])) : (openBlock(), createBlock(_component_TimesIcon, mergeProps({\n          key: 1,\n          \"class\": iconProps[\"class\"],\n          \"aria-hidden\": \"true\",\n          ref_for: true\n        }, _ctx.ptm('pcFileRemoveButton')['icon']), null, 16, [\"class\"]))];\n      }),\n      _: 2\n    }, 1032, [\"onClick\", \"class\", \"unstyled\", \"pt\"])], 16)], 16);\n  }), 128);\n}\n\nscript$1.render = render$1;\n\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _createForOfIteratorHelper(r, e) { var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t[\"return\"] || t[\"return\"](); } finally { if (u) throw o; } } }; }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nvar script = {\n  name: 'FileUpload',\n  \"extends\": script$2,\n  inheritAttrs: false,\n  emits: ['select', 'uploader', 'before-upload', 'progress', 'upload', 'error', 'before-send', 'clear', 'remove', 'remove-uploaded-file'],\n  duplicateIEEvent: false,\n  data: function data() {\n    return {\n      uploadedFileCount: 0,\n      files: [],\n      messages: [],\n      focused: false,\n      progress: null,\n      uploadedFiles: []\n    };\n  },\n  methods: {\n    upload: function upload() {\n      if (this.hasFiles) this.uploader();\n    },\n    onBasicUploaderClick: function onBasicUploaderClick(event) {\n      if (event.button === 0 && !this.hasFiles) this.$refs.fileInput.click();\n    },\n    onFileSelect: function onFileSelect(event) {\n      if (event.type !== 'drop' && this.isIE11() && this.duplicateIEEvent) {\n        this.duplicateIEEvent = false;\n        return;\n      }\n      this.messages = [];\n      this.files = this.files || [];\n      var files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n      var _iterator = _createForOfIteratorHelper(files),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var file = _step.value;\n          if (!this.isFileSelected(file)) {\n            if (this.validate(file)) {\n              if (this.isImage(file)) {\n                file.objectURL = window.URL.createObjectURL(file);\n              }\n              this.files.push(file);\n            }\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this.$emit('select', {\n        originalEvent: event,\n        files: this.files\n      });\n      if (this.fileLimit) {\n        this.checkFileLimit();\n      }\n      if (this.auto && this.hasFiles && !this.isFileLimitExceeded()) {\n        this.uploader();\n      }\n      if (event.type !== 'drop' && this.isIE11()) {\n        this.clearIEInput();\n      } else {\n        this.clearInputElement();\n      }\n    },\n    choose: function choose() {\n      this.$refs.fileInput.click();\n    },\n    uploader: function uploader() {\n      var _this = this;\n      if (this.customUpload) {\n        if (this.fileLimit) {\n          this.uploadedFileCount += this.files.length;\n        }\n        this.$emit('uploader', {\n          files: this.files\n        });\n        this.clear();\n      } else {\n        var xhr = new XMLHttpRequest();\n        var formData = new FormData();\n        this.$emit('before-upload', {\n          xhr: xhr,\n          formData: formData\n        });\n        var _iterator2 = _createForOfIteratorHelper(this.files),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var file = _step2.value;\n            formData.append(this.name, file, file.name);\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        xhr.upload.addEventListener('progress', function (event) {\n          if (event.lengthComputable) {\n            _this.progress = Math.round(event.loaded * 100 / event.total);\n          }\n          _this.$emit('progress', {\n            originalEvent: event,\n            progress: _this.progress\n          });\n        });\n        xhr.onreadystatechange = function () {\n          if (xhr.readyState === 4) {\n            var _this$uploadedFiles;\n            _this.progress = 0;\n            if (xhr.status >= 200 && xhr.status < 300) {\n              if (_this.fileLimit) {\n                _this.uploadedFileCount += _this.files.length;\n              }\n              _this.$emit('upload', {\n                xhr: xhr,\n                files: _this.files\n              });\n            } else {\n              _this.$emit('error', {\n                xhr: xhr,\n                files: _this.files\n              });\n            }\n            (_this$uploadedFiles = _this.uploadedFiles).push.apply(_this$uploadedFiles, _toConsumableArray(_this.files));\n            _this.clear();\n          }\n        };\n        xhr.open('POST', this.url, true);\n        this.$emit('before-send', {\n          xhr: xhr,\n          formData: formData\n        });\n        xhr.withCredentials = this.withCredentials;\n        xhr.send(formData);\n      }\n    },\n    clear: function clear() {\n      this.files = [];\n      this.messages = null;\n      this.$emit('clear');\n      if (this.isAdvanced) {\n        this.clearInputElement();\n      }\n    },\n    onFocus: function onFocus() {\n      this.focused = true;\n    },\n    onBlur: function onBlur() {\n      this.focused = false;\n    },\n    isFileSelected: function isFileSelected(file) {\n      if (this.files && this.files.length) {\n        var _iterator3 = _createForOfIteratorHelper(this.files),\n          _step3;\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var sFile = _step3.value;\n            if (sFile.name + sFile.type + sFile.size === file.name + file.type + file.size) return true;\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n      return false;\n    },\n    isIE11: function isIE11() {\n      return !!window['MSInputMethodContext'] && !!document['documentMode'];\n    },\n    validate: function validate(file) {\n      if (this.accept && !this.isFileTypeValid(file)) {\n        this.messages.push(this.invalidFileTypeMessage.replace('{0}', file.name).replace('{1}', this.accept));\n        return false;\n      }\n      if (this.maxFileSize && file.size > this.maxFileSize) {\n        this.messages.push(this.invalidFileSizeMessage.replace('{0}', file.name).replace('{1}', this.formatSize(this.maxFileSize)));\n        return false;\n      }\n      return true;\n    },\n    isFileTypeValid: function isFileTypeValid(file) {\n      var acceptableTypes = this.accept.split(',').map(function (type) {\n        return type.trim();\n      });\n      var _iterator4 = _createForOfIteratorHelper(acceptableTypes),\n        _step4;\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var type = _step4.value;\n          var acceptable = this.isWildcard(type) ? this.getTypeClass(file.type) === this.getTypeClass(type) : file.type == type || this.getFileExtension(file).toLowerCase() === type.toLowerCase();\n          if (acceptable) {\n            return true;\n          }\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n      return false;\n    },\n    getTypeClass: function getTypeClass(fileType) {\n      return fileType.substring(0, fileType.indexOf('/'));\n    },\n    isWildcard: function isWildcard(fileType) {\n      return fileType.indexOf('*') !== -1;\n    },\n    getFileExtension: function getFileExtension(file) {\n      return '.' + file.name.split('.').pop();\n    },\n    isImage: function isImage(file) {\n      return /^image\\//.test(file.type);\n    },\n    onDragEnter: function onDragEnter(event) {\n      if (!this.disabled) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n    onDragOver: function onDragOver(event) {\n      if (!this.disabled) {\n        !this.isUnstyled && addClass(this.$refs.content, 'p-fileupload-highlight');\n        this.$refs.content.setAttribute('data-p-highlight', true);\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n    onDragLeave: function onDragLeave() {\n      if (!this.disabled) {\n        !this.isUnstyled && removeClass(this.$refs.content, 'p-fileupload-highlight');\n        this.$refs.content.setAttribute('data-p-highlight', false);\n      }\n    },\n    onDrop: function onDrop(event) {\n      if (!this.disabled) {\n        !this.isUnstyled && removeClass(this.$refs.content, 'p-fileupload-highlight');\n        this.$refs.content.setAttribute('data-p-highlight', false);\n        event.stopPropagation();\n        event.preventDefault();\n        var files = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n        var allowDrop = this.multiple || files && files.length === 1;\n        if (allowDrop) {\n          this.onFileSelect(event);\n        }\n      }\n    },\n    remove: function remove(index) {\n      this.clearInputElement();\n      var removedFile = this.files.splice(index, 1)[0];\n      this.files = _toConsumableArray(this.files);\n      this.$emit('remove', {\n        file: removedFile,\n        files: this.files\n      });\n    },\n    removeUploadedFile: function removeUploadedFile(index) {\n      var removedFile = this.uploadedFiles.splice(index, 1)[0];\n      this.uploadedFiles = _toConsumableArray(this.uploadedFiles);\n      this.$emit('remove-uploaded-file', {\n        file: removedFile,\n        files: this.uploadedFiles\n      });\n    },\n    clearInputElement: function clearInputElement() {\n      this.$refs.fileInput.value = '';\n    },\n    clearIEInput: function clearIEInput() {\n      if (this.$refs.fileInput) {\n        this.duplicateIEEvent = true; //IE11 fix to prevent onFileChange trigger again\n        this.$refs.fileInput.value = '';\n      }\n    },\n    formatSize: function formatSize(bytes) {\n      var _this$$primevue$confi;\n      var k = 1024;\n      var dm = 3;\n      var sizes = ((_this$$primevue$confi = this.$primevue.config.locale) === null || _this$$primevue$confi === void 0 ? void 0 : _this$$primevue$confi.fileSizeTypes) || ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n      if (bytes === 0) {\n        return \"0 \".concat(sizes[0]);\n      }\n      var i = Math.floor(Math.log(bytes) / Math.log(k));\n      var formattedSize = parseFloat((bytes / Math.pow(k, i)).toFixed(dm));\n      return \"\".concat(formattedSize, \" \").concat(sizes[i]);\n    },\n    isFileLimitExceeded: function isFileLimitExceeded() {\n      if (this.fileLimit && this.fileLimit <= this.files.length + this.uploadedFileCount && this.focused) {\n        this.focused = false;\n      }\n      return this.fileLimit && this.fileLimit < this.files.length + this.uploadedFileCount;\n    },\n    checkFileLimit: function checkFileLimit() {\n      if (this.isFileLimitExceeded()) {\n        this.messages.push(this.invalidFileLimitMessage.replace('{0}', this.fileLimit.toString()));\n      }\n    },\n    onMessageClose: function onMessageClose() {\n      this.messages = null;\n    }\n  },\n  computed: {\n    isAdvanced: function isAdvanced() {\n      return this.mode === 'advanced';\n    },\n    isBasic: function isBasic() {\n      return this.mode === 'basic';\n    },\n    chooseButtonClass: function chooseButtonClass() {\n      return [this.cx('pcChooseButton'), this[\"class\"]];\n    },\n    basicFileChosenLabel: function basicFileChosenLabel() {\n      var _this$$primevue$confi3;\n      if (this.auto) return this.chooseButtonLabel;else if (this.hasFiles) {\n        var _this$$primevue$confi2;\n        if (this.files && this.files.length === 1) return this.files[0].name;\n        return (_this$$primevue$confi2 = this.$primevue.config.locale) === null || _this$$primevue$confi2 === void 0 || (_this$$primevue$confi2 = _this$$primevue$confi2.fileChosenMessage) === null || _this$$primevue$confi2 === void 0 ? void 0 : _this$$primevue$confi2.replace('{0}', this.files.length);\n      }\n      return ((_this$$primevue$confi3 = this.$primevue.config.locale) === null || _this$$primevue$confi3 === void 0 ? void 0 : _this$$primevue$confi3.noFileChosenMessage) || '';\n    },\n    hasFiles: function hasFiles() {\n      return this.files && this.files.length > 0;\n    },\n    hasUploadedFiles: function hasUploadedFiles() {\n      return this.uploadedFiles && this.uploadedFiles.length > 0;\n    },\n    chooseDisabled: function chooseDisabled() {\n      return this.disabled || this.fileLimit && this.fileLimit <= this.files.length + this.uploadedFileCount;\n    },\n    uploadDisabled: function uploadDisabled() {\n      return this.disabled || !this.hasFiles || this.fileLimit && this.fileLimit < this.files.length;\n    },\n    cancelDisabled: function cancelDisabled() {\n      return this.disabled || !this.hasFiles;\n    },\n    chooseButtonLabel: function chooseButtonLabel() {\n      return this.chooseLabel || this.$primevue.config.locale.choose;\n    },\n    uploadButtonLabel: function uploadButtonLabel() {\n      return this.uploadLabel || this.$primevue.config.locale.upload;\n    },\n    cancelButtonLabel: function cancelButtonLabel() {\n      return this.cancelLabel || this.$primevue.config.locale.cancel;\n    },\n    completedLabel: function completedLabel() {\n      return this.$primevue.config.locale.completed;\n    },\n    pendingLabel: function pendingLabel() {\n      return this.$primevue.config.locale.pending;\n    }\n  },\n  components: {\n    Button: Button,\n    ProgressBar: ProgressBar,\n    Message: Message,\n    FileContent: script$1,\n    PlusIcon: PlusIcon,\n    UploadIcon: UploadIcon,\n    TimesIcon: TimesIcon\n  },\n  directives: {\n    ripple: Ripple\n  }\n};\n\nvar _hoisted_1 = [\"multiple\", \"accept\", \"disabled\"];\nvar _hoisted_2 = [\"files\"];\nvar _hoisted_3 = [\"accept\", \"disabled\", \"multiple\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_Button = resolveComponent(\"Button\");\n  var _component_ProgressBar = resolveComponent(\"ProgressBar\");\n  var _component_Message = resolveComponent(\"Message\");\n  var _component_FileContent = resolveComponent(\"FileContent\");\n  return $options.isAdvanced ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [createElementVNode(\"input\", mergeProps({\n    ref: \"fileInput\",\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = function () {\n      return $options.onFileSelect && $options.onFileSelect.apply($options, arguments);\n    }),\n    multiple: _ctx.multiple,\n    accept: _ctx.accept,\n    disabled: $options.chooseDisabled\n  }, _ctx.ptm('input')), null, 16, _hoisted_1), createElementVNode(\"div\", mergeProps({\n    \"class\": _ctx.cx('header')\n  }, _ctx.ptm('header')), [renderSlot(_ctx.$slots, \"header\", {\n    files: $data.files,\n    uploadedFiles: $data.uploadedFiles,\n    chooseCallback: $options.choose,\n    uploadCallback: $options.uploader,\n    clearCallback: $options.clear\n  }, function () {\n    return [createVNode(_component_Button, mergeProps({\n      label: $options.chooseButtonLabel,\n      \"class\": $options.chooseButtonClass,\n      style: _ctx.style,\n      disabled: _ctx.disabled,\n      unstyled: _ctx.unstyled,\n      onClick: $options.choose,\n      onKeydown: withKeys($options.choose, [\"enter\"]),\n      onFocus: $options.onFocus,\n      onBlur: $options.onBlur\n    }, _ctx.chooseButtonProps, {\n      pt: _ctx.ptm('pcChooseButton')\n    }), {\n      icon: withCtx(function (iconProps) {\n        return [renderSlot(_ctx.$slots, \"chooseicon\", {}, function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.chooseIcon ? 'span' : 'PlusIcon'), mergeProps({\n            \"class\": [iconProps[\"class\"], _ctx.chooseIcon],\n            \"aria-hidden\": \"true\"\n          }, _ctx.ptm('pcChooseButton')['icon']), null, 16, [\"class\"]))];\n        })];\n      }),\n      _: 3\n    }, 16, [\"label\", \"class\", \"style\", \"disabled\", \"unstyled\", \"onClick\", \"onKeydown\", \"onFocus\", \"onBlur\", \"pt\"]), _ctx.showUploadButton ? (openBlock(), createBlock(_component_Button, mergeProps({\n      key: 0,\n      \"class\": _ctx.cx('pcUploadButton'),\n      label: $options.uploadButtonLabel,\n      onClick: $options.uploader,\n      disabled: $options.uploadDisabled,\n      unstyled: _ctx.unstyled\n    }, _ctx.uploadButtonProps, {\n      pt: _ctx.ptm('pcUploadButton')\n    }), {\n      icon: withCtx(function (iconProps) {\n        return [renderSlot(_ctx.$slots, \"uploadicon\", {}, function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.uploadIcon ? 'span' : 'UploadIcon'), mergeProps({\n            \"class\": [iconProps[\"class\"], _ctx.uploadIcon],\n            \"aria-hidden\": \"true\"\n          }, _ctx.ptm('pcUploadButton')['icon'], {\n            \"data-pc-section\": \"uploadbuttonicon\"\n          }), null, 16, [\"class\"]))];\n        })];\n      }),\n      _: 3\n    }, 16, [\"class\", \"label\", \"onClick\", \"disabled\", \"unstyled\", \"pt\"])) : createCommentVNode(\"\", true), _ctx.showCancelButton ? (openBlock(), createBlock(_component_Button, mergeProps({\n      key: 1,\n      \"class\": _ctx.cx('pcCancelButton'),\n      label: $options.cancelButtonLabel,\n      onClick: $options.clear,\n      disabled: $options.cancelDisabled,\n      unstyled: _ctx.unstyled\n    }, _ctx.cancelButtonProps, {\n      pt: _ctx.ptm('pcCancelButton')\n    }), {\n      icon: withCtx(function (iconProps) {\n        return [renderSlot(_ctx.$slots, \"cancelicon\", {}, function () {\n          return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.cancelIcon ? 'span' : 'TimesIcon'), mergeProps({\n            \"class\": [iconProps[\"class\"], _ctx.cancelIcon],\n            \"aria-hidden\": \"true\"\n          }, _ctx.ptm('pcCancelButton')['icon'], {\n            \"data-pc-section\": \"cancelbuttonicon\"\n          }), null, 16, [\"class\"]))];\n        })];\n      }),\n      _: 3\n    }, 16, [\"class\", \"label\", \"onClick\", \"disabled\", \"unstyled\", \"pt\"])) : createCommentVNode(\"\", true)];\n  })], 16), createElementVNode(\"div\", mergeProps({\n    ref: \"content\",\n    \"class\": _ctx.cx('content'),\n    onDragenter: _cache[1] || (_cache[1] = function () {\n      return $options.onDragEnter && $options.onDragEnter.apply($options, arguments);\n    }),\n    onDragover: _cache[2] || (_cache[2] = function () {\n      return $options.onDragOver && $options.onDragOver.apply($options, arguments);\n    }),\n    onDragleave: _cache[3] || (_cache[3] = function () {\n      return $options.onDragLeave && $options.onDragLeave.apply($options, arguments);\n    }),\n    onDrop: _cache[4] || (_cache[4] = function () {\n      return $options.onDrop && $options.onDrop.apply($options, arguments);\n    })\n  }, _ctx.ptm('content'), {\n    \"data-p-highlight\": false\n  }), [renderSlot(_ctx.$slots, \"content\", {\n    files: $data.files,\n    uploadedFiles: $data.uploadedFiles,\n    removeUploadedFileCallback: $options.removeUploadedFile,\n    removeFileCallback: $options.remove,\n    progress: $data.progress,\n    messages: $data.messages\n  }, function () {\n    return [$options.hasFiles ? (openBlock(), createBlock(_component_ProgressBar, {\n      key: 0,\n      value: $data.progress,\n      showValue: false,\n      unstyled: _ctx.unstyled,\n      pt: _ctx.ptm('pcProgressbar')\n    }, null, 8, [\"value\", \"unstyled\", \"pt\"])) : createCommentVNode(\"\", true), (openBlock(true), createElementBlock(Fragment, null, renderList($data.messages, function (msg) {\n      return openBlock(), createBlock(_component_Message, {\n        key: msg,\n        severity: \"error\",\n        onClose: $options.onMessageClose,\n        unstyled: _ctx.unstyled,\n        pt: _ctx.ptm('pcMessage')\n      }, {\n        \"default\": withCtx(function () {\n          return [createTextVNode(toDisplayString(msg), 1)];\n        }),\n        _: 2\n      }, 1032, [\"onClose\", \"unstyled\", \"pt\"]);\n    }), 128)), $options.hasFiles ? (openBlock(), createElementBlock(\"div\", {\n      key: 1,\n      \"class\": normalizeClass(_ctx.cx('fileList'))\n    }, [createVNode(_component_FileContent, {\n      files: $data.files,\n      onRemove: $options.remove,\n      badgeValue: $options.pendingLabel,\n      previewWidth: _ctx.previewWidth,\n      templates: _ctx.$slots,\n      unstyled: _ctx.unstyled,\n      pt: _ctx.pt\n    }, null, 8, [\"files\", \"onRemove\", \"badgeValue\", \"previewWidth\", \"templates\", \"unstyled\", \"pt\"])], 2)) : createCommentVNode(\"\", true), $options.hasUploadedFiles ? (openBlock(), createElementBlock(\"div\", {\n      key: 2,\n      \"class\": normalizeClass(_ctx.cx('fileList'))\n    }, [createVNode(_component_FileContent, {\n      files: $data.uploadedFiles,\n      onRemove: $options.removeUploadedFile,\n      badgeValue: $options.completedLabel,\n      badgeSeverity: \"success\",\n      previewWidth: _ctx.previewWidth,\n      templates: _ctx.$slots,\n      unstyled: _ctx.unstyled,\n      pt: _ctx.pt\n    }, null, 8, [\"files\", \"onRemove\", \"badgeValue\", \"previewWidth\", \"templates\", \"unstyled\", \"pt\"])], 2)) : createCommentVNode(\"\", true)];\n  }), _ctx.$slots.empty && !$options.hasFiles && !$options.hasUploadedFiles ? (openBlock(), createElementBlock(\"div\", normalizeProps(mergeProps({\n    key: 0\n  }, _ctx.ptm('empty'))), [renderSlot(_ctx.$slots, \"empty\")], 16)) : createCommentVNode(\"\", true)], 16)], 16)) : $options.isBasic ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 1,\n    \"class\": _ctx.cx('root')\n  }, _ctx.ptmi('root')), [(openBlock(true), createElementBlock(Fragment, null, renderList($data.messages, function (msg) {\n    return openBlock(), createBlock(_component_Message, {\n      key: msg,\n      severity: \"error\",\n      onClose: $options.onMessageClose,\n      unstyled: _ctx.unstyled,\n      pt: _ctx.ptm('pcMessages')\n    }, {\n      \"default\": withCtx(function () {\n        return [createTextVNode(toDisplayString(msg), 1)];\n      }),\n      _: 2\n    }, 1032, [\"onClose\", \"unstyled\", \"pt\"]);\n  }), 128)), createVNode(_component_Button, mergeProps({\n    label: $options.chooseButtonLabel,\n    \"class\": $options.chooseButtonClass,\n    style: _ctx.style,\n    disabled: _ctx.disabled,\n    unstyled: _ctx.unstyled,\n    onMouseup: $options.onBasicUploaderClick,\n    onKeydown: withKeys($options.choose, [\"enter\"]),\n    onFocus: $options.onFocus,\n    onBlur: $options.onBlur\n  }, _ctx.ptm('pcButton')), {\n    icon: withCtx(function (iconProps) {\n      return [!$options.hasFiles || _ctx.auto ? renderSlot(_ctx.$slots, \"uploadicon\", {\n        key: 0\n      }, function () {\n        return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.uploadIcon ? 'span' : 'UploadIcon'), mergeProps({\n          \"class\": [iconProps[\"class\"], _ctx.uploadIcon],\n          \"aria-hidden\": \"true\"\n        }, _ctx.ptm('pcButton')['icon']), null, 16, [\"class\"]))];\n      }) : renderSlot(_ctx.$slots, \"chooseicon\", {\n        key: 1\n      }, function () {\n        return [(openBlock(), createBlock(resolveDynamicComponent(_ctx.chooseIcon ? 'span' : 'PlusIcon'), mergeProps({\n          \"class\": [iconProps[\"class\"], _ctx.chooseIcon],\n          \"aria-hidden\": \"true\"\n        }, _ctx.ptm('pcButton')['icon']), null, 16, [\"class\"]))];\n      })];\n    }),\n    _: 3\n  }, 16, [\"label\", \"class\", \"style\", \"disabled\", \"unstyled\", \"onMouseup\", \"onKeydown\", \"onFocus\", \"onBlur\"]), !_ctx.auto ? renderSlot(_ctx.$slots, \"filelabel\", {\n    key: 0,\n    \"class\": normalizeClass(_ctx.cx('filelabel'))\n  }, function () {\n    return [createElementVNode(\"span\", {\n      \"class\": normalizeClass(_ctx.cx('filelabel')),\n      files: $data.files\n    }, toDisplayString($options.basicFileChosenLabel), 11, _hoisted_2)];\n  }) : createCommentVNode(\"\", true), !$options.hasFiles ? (openBlock(), createElementBlock(\"input\", mergeProps({\n    key: 1,\n    ref: \"fileInput\",\n    type: \"file\",\n    accept: _ctx.accept,\n    disabled: _ctx.disabled,\n    multiple: _ctx.multiple,\n    onChange: _cache[5] || (_cache[5] = function () {\n      return $options.onFileSelect && $options.onFileSelect.apply($options, arguments);\n    }),\n    onFocus: _cache[6] || (_cache[6] = function () {\n      return $options.onFocus && $options.onFocus.apply($options, arguments);\n    }),\n    onBlur: _cache[7] || (_cache[7] = function () {\n      return $options.onBlur && $options.onBlur.apply($options, arguments);\n    })\n  }, _ctx.ptm('input')), null, 16, _hoisted_3)) : createCommentVNode(\"\", true)], 16)) : createCommentVNode(\"\", true);\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n",
      "start": 1731941016112,
      "end": 1731941016395,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941016396,
      "end": 1731941016396,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941016396,
      "end": 1731941016396,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941016396,
      "end": 1731941016396,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941016396,
      "end": 1731941016396,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941016396,
      "end": 1731941016396,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941016396,
      "end": 1731941016396,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941016396,
      "end": 1731941016396,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941016396,
      "end": 1731941016396,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941016396,
      "end": 1731941016396,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941016396,
      "end": 1731941016396,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941016396,
      "end": 1731941016396,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941016396,
      "end": 1731941016396,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1731941016396,
      "end": 1731941016396,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941016396,
      "end": 1731941016396,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941016396,
      "end": 1731941016397,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941016397,
      "end": 1731941016397,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1731941016397,
      "end": 1731941016397,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1731941016397,
      "end": 1731941016397,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941016397,
      "end": 1731941016397,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941016397,
      "end": 1731941016397,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941016397,
      "end": 1731941016397,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941016397,
      "end": 1731941016397,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941016397,
      "end": 1731941016397,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941016397,
      "end": 1731941016397,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941016397,
      "end": 1731941016397,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941016397,
      "end": 1731941016397,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941016397,
      "end": 1731941016397,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941016397,
      "end": 1731941016397,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941016397,
      "end": 1731941016397,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941016397,
      "end": 1731941016397,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941016397,
      "end": 1731941016398,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941016398,
      "end": 1731941016398,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1731941016398,
      "end": 1731941016398,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1731941016398,
      "end": 1731941016398,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941016398,
      "end": 1731941016398,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941016398,
      "end": 1731941016398,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941016398,
      "end": 1731941016398,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941016398,
      "end": 1731941016398,
      "order": "normal"
    }
  ]
}
