{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VCarousel/VCarousel.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createVNode as _createVNode, mergeProps as _mergeProps, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VCarousel.css\";\n\n// Components\nimport { VBtn } from \"../VBtn/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VProgressLinear } from \"../VProgressLinear/index.mjs\";\nimport { makeVWindowProps, VWindow } from \"../VWindow/VWindow.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { onMounted, ref, watch } from 'vue';\nimport { convertToUnit, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVCarouselProps = propsFactory({\n  color: String,\n  cycle: Boolean,\n  delimiterIcon: {\n    type: IconValue,\n    default: '$delimiter'\n  },\n  height: {\n    type: [Number, String],\n    default: 500\n  },\n  hideDelimiters: Boolean,\n  hideDelimiterBackground: Boolean,\n  interval: {\n    type: [Number, String],\n    default: 6000,\n    validator: value => Number(value) > 0\n  },\n  progress: [Boolean, String],\n  verticalDelimiters: [Boolean, String],\n  ...makeVWindowProps({\n    continuous: true,\n    mandatory: 'force',\n    showArrows: true\n  })\n}, 'VCarousel');\nexport const VCarousel = genericComponent()({\n  name: 'VCarousel',\n  props: makeVCarouselProps(),\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const model = useProxiedModel(props, 'modelValue');\n    const {\n      t\n    } = useLocale();\n    const windowRef = ref();\n    let slideTimeout = -1;\n    watch(model, restartTimeout);\n    watch(() => props.interval, restartTimeout);\n    watch(() => props.cycle, val => {\n      if (val) restartTimeout();else window.clearTimeout(slideTimeout);\n    });\n    onMounted(startTimeout);\n    function startTimeout() {\n      if (!props.cycle || !windowRef.value) return;\n      slideTimeout = window.setTimeout(windowRef.value.group.next, +props.interval > 0 ? +props.interval : 6000);\n    }\n    function restartTimeout() {\n      window.clearTimeout(slideTimeout);\n      window.requestAnimationFrame(startTimeout);\n    }\n    useRender(() => {\n      const windowProps = VWindow.filterProps(props);\n      return _createVNode(VWindow, _mergeProps({\n        \"ref\": windowRef\n      }, windowProps, {\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": ['v-carousel', {\n          'v-carousel--hide-delimiter-background': props.hideDelimiterBackground,\n          'v-carousel--vertical-delimiters': props.verticalDelimiters\n        }, props.class],\n        \"style\": [{\n          height: convertToUnit(props.height)\n        }, props.style]\n      }), {\n        default: slots.default,\n        additional: _ref2 => {\n          let {\n            group\n          } = _ref2;\n          return _createVNode(_Fragment, null, [!props.hideDelimiters && _createVNode(\"div\", {\n            \"class\": \"v-carousel__controls\",\n            \"style\": {\n              left: props.verticalDelimiters === 'left' && props.verticalDelimiters ? 0 : 'auto',\n              right: props.verticalDelimiters === 'right' ? 0 : 'auto'\n            }\n          }, [group.items.value.length > 0 && _createVNode(VDefaultsProvider, {\n            \"defaults\": {\n              VBtn: {\n                color: props.color,\n                icon: props.delimiterIcon,\n                size: 'x-small',\n                variant: 'text'\n              }\n            },\n            \"scoped\": true\n          }, {\n            default: () => [group.items.value.map((item, index) => {\n              const props = {\n                id: `carousel-item-${item.id}`,\n                'aria-label': t('$vuetify.carousel.ariaLabel.delimiter', index + 1, group.items.value.length),\n                class: ['v-carousel__controls__item', group.isSelected(item.id) && 'v-btn--active'],\n                onClick: () => group.select(item.id, true)\n              };\n              return slots.item ? slots.item({\n                props,\n                item\n              }) : _createVNode(VBtn, _mergeProps(item, props), null);\n            })]\n          })]), props.progress && _createVNode(VProgressLinear, {\n            \"class\": \"v-carousel__progress\",\n            \"color\": typeof props.progress === 'string' ? props.progress : undefined,\n            \"modelValue\": (group.getItemIndex(model.value) + 1) / group.items.value.length * 100\n          }, null)]);\n        },\n        prev: slots.prev,\n        next: slots.next\n      });\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VCarousel.mjs.map",
      "start": 1731941018129,
      "end": 1731941018350,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941018350,
      "end": 1731941018350,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941018350,
      "end": 1731941018350,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941018350,
      "end": 1731941018350,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941018350,
      "end": 1731941018350,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941018350,
      "end": 1731941018350,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941018350,
      "end": 1731941018350,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941018350,
      "end": 1731941018350,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941018350,
      "end": 1731941018350,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941018350,
      "end": 1731941018350,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941018350,
      "end": 1731941018350,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941018350,
      "end": 1731941018350,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941018350,
      "end": 1731941018350,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1731941018350,
      "end": 1731941018350,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941018350,
      "end": 1731941018351,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941018351,
      "end": 1731941018351,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941018352,
      "end": 1731941018352,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941018352,
      "end": 1731941018352,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941018352,
      "end": 1731941018352,
      "order": "normal"
    }
  ]
}
