{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VDataTable/VDataTableRow.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Components\nimport { VBtn } from \"../VBtn/index.mjs\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.mjs\"; // Composables\nimport { useExpanded } from \"./composables/expand.mjs\";\nimport { useHeaders } from \"./composables/headers.mjs\";\nimport { useSelection } from \"./composables/select.mjs\";\nimport { VDataTableColumn } from \"./VDataTableColumn.mjs\"; // Utilities\nimport { toDisplayString, withModifiers } from 'vue';\nimport { EventProp, genericComponent, getObjectValueByPath, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVDataTableRowProps = propsFactory({\n  index: Number,\n  item: Object,\n  cellProps: [Object, Function],\n  onClick: EventProp(),\n  onContextmenu: EventProp(),\n  onDblclick: EventProp()\n}, 'VDataTableRow');\nexport const VDataTableRow = genericComponent()({\n  name: 'VDataTableRow',\n  props: makeVDataTableRowProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      isSelected,\n      toggleSelect\n    } = useSelection();\n    const {\n      isExpanded,\n      toggleExpand\n    } = useExpanded();\n    const {\n      columns\n    } = useHeaders();\n    useRender(() => _createVNode(\"tr\", {\n      \"class\": ['v-data-table__tr', {\n        'v-data-table__tr--clickable': !!(props.onClick || props.onContextmenu || props.onDblclick)\n      }],\n      \"onClick\": props.onClick,\n      \"onContextmenu\": props.onContextmenu,\n      \"onDblclick\": props.onDblclick\n    }, [props.item && columns.value.map((column, i) => {\n      const item = props.item;\n      const slotName = `item.${column.key}`;\n      const slotProps = {\n        index: props.index,\n        item: item.raw,\n        internalItem: item,\n        value: getObjectValueByPath(item.columns, column.key),\n        column,\n        isSelected,\n        toggleSelect,\n        isExpanded,\n        toggleExpand\n      };\n      const cellProps = typeof props.cellProps === 'function' ? props.cellProps({\n        index: slotProps.index,\n        item: slotProps.item,\n        internalItem: slotProps.internalItem,\n        value: slotProps.value,\n        column\n      }) : props.cellProps;\n      const columnCellProps = typeof column.cellProps === 'function' ? column.cellProps({\n        index: slotProps.index,\n        item: slotProps.item,\n        internalItem: slotProps.internalItem,\n        value: slotProps.value\n      }) : column.cellProps;\n      return _createVNode(VDataTableColumn, _mergeProps({\n        \"align\": column.align,\n        \"fixed\": column.fixed,\n        \"fixedOffset\": column.fixedOffset,\n        \"lastFixed\": column.lastFixed,\n        \"noPadding\": column.key === 'data-table-select' || column.key === 'data-table-expand',\n        \"width\": column.width\n      }, cellProps, columnCellProps), {\n        default: () => {\n          if (slots[slotName]) return slots[slotName](slotProps);\n          if (column.key === 'data-table-select') {\n            return slots['item.data-table-select']?.(slotProps) ?? _createVNode(VCheckboxBtn, {\n              \"disabled\": !item.selectable,\n              \"modelValue\": isSelected([item]),\n              \"onClick\": withModifiers(() => toggleSelect(item), ['stop'])\n            }, null);\n          }\n          if (column.key === 'data-table-expand') {\n            return slots['item.data-table-expand']?.(slotProps) ?? _createVNode(VBtn, {\n              \"icon\": isExpanded(item) ? '$collapse' : '$expand',\n              \"size\": \"small\",\n              \"variant\": \"text\",\n              \"onClick\": withModifiers(() => toggleExpand(item), ['stop'])\n            }, null);\n          }\n          return toDisplayString(slotProps.value);\n        }\n      });\n    })]));\n  }\n});\n//# sourceMappingURL=VDataTableRow.mjs.map",
      "start": 1731941018339,
      "end": 1731941018575,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941018575,
      "end": 1731941018575,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941018576,
      "end": 1731941018576,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941018576,
      "end": 1731941018576,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941018576,
      "end": 1731941018576,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941018576,
      "end": 1731941018576,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941018576,
      "end": 1731941018576,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941018576,
      "end": 1731941018576,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941018576,
      "end": 1731941018576,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941018576,
      "end": 1731941018576,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941018576,
      "end": 1731941018576,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941018576,
      "end": 1731941018576,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941018576,
      "end": 1731941018576,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1731941018576,
      "end": 1731941018576,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941018576,
      "end": 1731941018577,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941018577,
      "end": 1731941018577,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941018577,
      "end": 1731941018577,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1731941018577,
      "end": 1731941018577,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1731941018577,
      "end": 1731941018577,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941018577,
      "end": 1731941018577,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941018577,
      "end": 1731941018577,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941018577,
      "end": 1731941018577,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941018577,
      "end": 1731941018577,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941018577,
      "end": 1731941018577,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941018577,
      "end": 1731941018577,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941018577,
      "end": 1731941018577,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941018577,
      "end": 1731941018577,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941018577,
      "end": 1731941018578,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941018578,
      "end": 1731941018578,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941018578,
      "end": 1731941018578,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941018578,
      "end": 1731941018578,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941018578,
      "end": 1731941018578,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941018578,
      "end": 1731941018578,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1731941018578,
      "end": 1731941018578,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1731941018578,
      "end": 1731941018578,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941018578,
      "end": 1731941018578,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941018578,
      "end": 1731941018578,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941018578,
      "end": 1731941018578,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941018579,
      "end": 1731941018579,
      "order": "normal"
    }
  ]
}
