{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VNavigationDrawer/touch.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Composables\nimport { useVelocity } from \"../../composables/touch.mjs\"; // Utilities\nimport { computed, onBeforeUnmount, onMounted, shallowRef } from 'vue';\n\n// Types\n\nexport function useTouch(_ref) {\n  let {\n    isActive,\n    isTemporary,\n    width,\n    touchless,\n    position\n  } = _ref;\n  onMounted(() => {\n    window.addEventListener('touchstart', onTouchstart, {\n      passive: true\n    });\n    window.addEventListener('touchmove', onTouchmove, {\n      passive: false\n    });\n    window.addEventListener('touchend', onTouchend, {\n      passive: true\n    });\n  });\n  onBeforeUnmount(() => {\n    window.removeEventListener('touchstart', onTouchstart);\n    window.removeEventListener('touchmove', onTouchmove);\n    window.removeEventListener('touchend', onTouchend);\n  });\n  const isHorizontal = computed(() => ['left', 'right'].includes(position.value));\n  const {\n    addMovement,\n    endTouch,\n    getVelocity\n  } = useVelocity();\n  let maybeDragging = false;\n  const isDragging = shallowRef(false);\n  const dragProgress = shallowRef(0);\n  const offset = shallowRef(0);\n  let start;\n  function getOffset(pos, active) {\n    return (position.value === 'left' ? pos : position.value === 'right' ? document.documentElement.clientWidth - pos : position.value === 'top' ? pos : position.value === 'bottom' ? document.documentElement.clientHeight - pos : oops()) - (active ? width.value : 0);\n  }\n  function getProgress(pos) {\n    let limit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    const progress = position.value === 'left' ? (pos - offset.value) / width.value : position.value === 'right' ? (document.documentElement.clientWidth - pos - offset.value) / width.value : position.value === 'top' ? (pos - offset.value) / width.value : position.value === 'bottom' ? (document.documentElement.clientHeight - pos - offset.value) / width.value : oops();\n    return limit ? Math.max(0, Math.min(1, progress)) : progress;\n  }\n  function onTouchstart(e) {\n    if (touchless.value) return;\n    const touchX = e.changedTouches[0].clientX;\n    const touchY = e.changedTouches[0].clientY;\n    const touchZone = 25;\n    const inTouchZone = position.value === 'left' ? touchX < touchZone : position.value === 'right' ? touchX > document.documentElement.clientWidth - touchZone : position.value === 'top' ? touchY < touchZone : position.value === 'bottom' ? touchY > document.documentElement.clientHeight - touchZone : oops();\n    const inElement = isActive.value && (position.value === 'left' ? touchX < width.value : position.value === 'right' ? touchX > document.documentElement.clientWidth - width.value : position.value === 'top' ? touchY < width.value : position.value === 'bottom' ? touchY > document.documentElement.clientHeight - width.value : oops());\n    if (inTouchZone || inElement || isActive.value && isTemporary.value) {\n      maybeDragging = true;\n      start = [touchX, touchY];\n      offset.value = getOffset(isHorizontal.value ? touchX : touchY, isActive.value);\n      dragProgress.value = getProgress(isHorizontal.value ? touchX : touchY);\n      endTouch(e);\n      addMovement(e);\n    }\n  }\n  function onTouchmove(e) {\n    const touchX = e.changedTouches[0].clientX;\n    const touchY = e.changedTouches[0].clientY;\n    if (maybeDragging) {\n      if (!e.cancelable) {\n        maybeDragging = false;\n        return;\n      }\n      const dx = Math.abs(touchX - start[0]);\n      const dy = Math.abs(touchY - start[1]);\n      const thresholdMet = isHorizontal.value ? dx > dy && dx > 3 : dy > dx && dy > 3;\n      if (thresholdMet) {\n        isDragging.value = true;\n        maybeDragging = false;\n      } else if ((isHorizontal.value ? dy : dx) > 3) {\n        maybeDragging = false;\n      }\n    }\n    if (!isDragging.value) return;\n    e.preventDefault();\n    addMovement(e);\n    const progress = getProgress(isHorizontal.value ? touchX : touchY, false);\n    dragProgress.value = Math.max(0, Math.min(1, progress));\n    if (progress > 1) {\n      offset.value = getOffset(isHorizontal.value ? touchX : touchY, true);\n    } else if (progress < 0) {\n      offset.value = getOffset(isHorizontal.value ? touchX : touchY, false);\n    }\n  }\n  function onTouchend(e) {\n    maybeDragging = false;\n    if (!isDragging.value) return;\n    addMovement(e);\n    isDragging.value = false;\n    const velocity = getVelocity(e.changedTouches[0].identifier);\n    const vx = Math.abs(velocity.x);\n    const vy = Math.abs(velocity.y);\n    const thresholdMet = isHorizontal.value ? vx > vy && vx > 400 : vy > vx && vy > 3;\n    if (thresholdMet) {\n      isActive.value = velocity.direction === ({\n        left: 'right',\n        right: 'left',\n        top: 'down',\n        bottom: 'up'\n      }[position.value] || oops());\n    } else {\n      isActive.value = dragProgress.value > 0.5;\n    }\n  }\n  const dragStyles = computed(() => {\n    return isDragging.value ? {\n      transform: position.value === 'left' ? `translateX(calc(-100% + ${dragProgress.value * width.value}px))` : position.value === 'right' ? `translateX(calc(100% - ${dragProgress.value * width.value}px))` : position.value === 'top' ? `translateY(calc(-100% + ${dragProgress.value * width.value}px))` : position.value === 'bottom' ? `translateY(calc(100% - ${dragProgress.value * width.value}px))` : oops(),\n      transition: 'none'\n    } : undefined;\n  });\n  return {\n    isDragging,\n    dragProgress,\n    dragStyles\n  };\n}\nfunction oops() {\n  throw new Error();\n}\n//# sourceMappingURL=touch.mjs.map",
      "start": 1731941021411,
      "end": 1731941021721,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941021722,
      "end": 1731941021722,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941021722,
      "end": 1731941021722,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941021722,
      "end": 1731941021722,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941021722,
      "end": 1731941021722,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941021722,
      "end": 1731941021722,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941021722,
      "end": 1731941021722,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941021722,
      "end": 1731941021722,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941021722,
      "end": 1731941021722,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941021722,
      "end": 1731941021722,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941021722,
      "end": 1731941021722,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941021722,
      "end": 1731941021722,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941021722,
      "end": 1731941021722,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1731941021722,
      "end": 1731941021722,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941021722,
      "end": 1731941021722,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941021722,
      "end": 1731941021723,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941021723,
      "end": 1731941021723,
      "order": "normal"
    }
  ]
}
