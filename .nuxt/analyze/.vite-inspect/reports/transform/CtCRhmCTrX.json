{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VBadge/VBadge.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { withDirectives as _withDirectives, mergeProps as _mergeProps, vShow as _vShow, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VBadge.css\";\n\n// Components\nimport { VIcon } from \"../VIcon/index.mjs\"; // Composables\nimport { useBackgroundColor, useTextColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { makeLocationProps, useLocation } from \"../../composables/location.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, useTheme } from \"../../composables/theme.mjs\";\nimport { makeTransitionProps, MaybeTransition } from \"../../composables/transition.mjs\"; // Utilities\nimport { toRef } from 'vue';\nimport { genericComponent, pickWithRest, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVBadgeProps = propsFactory({\n  bordered: Boolean,\n  color: String,\n  content: [Number, String],\n  dot: Boolean,\n  floating: Boolean,\n  icon: IconValue,\n  inline: Boolean,\n  label: {\n    type: String,\n    default: '$vuetify.badge'\n  },\n  max: [Number, String],\n  modelValue: {\n    type: Boolean,\n    default: true\n  },\n  offsetX: [Number, String],\n  offsetY: [Number, String],\n  textColor: String,\n  ...makeComponentProps(),\n  ...makeLocationProps({\n    location: 'top end'\n  }),\n  ...makeRoundedProps(),\n  ...makeTagProps(),\n  ...makeThemeProps(),\n  ...makeTransitionProps({\n    transition: 'scale-rotate-transition'\n  })\n}, 'VBadge');\nexport const VBadge = genericComponent()({\n  name: 'VBadge',\n  inheritAttrs: false,\n  props: makeVBadgeProps(),\n  setup(props, ctx) {\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const {\n      t\n    } = useLocale();\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(toRef(props, 'textColor'));\n    const {\n      themeClasses\n    } = useTheme();\n    const {\n      locationStyles\n    } = useLocation(props, true, side => {\n      const base = props.floating ? props.dot ? 2 : 4 : props.dot ? 8 : 12;\n      return base + (['top', 'bottom'].includes(side) ? +(props.offsetY ?? 0) : ['left', 'right'].includes(side) ? +(props.offsetX ?? 0) : 0);\n    });\n    useRender(() => {\n      const value = Number(props.content);\n      const content = !props.max || isNaN(value) ? props.content : value <= +props.max ? value : `${props.max}+`;\n      const [badgeAttrs, attrs] = pickWithRest(ctx.attrs, ['aria-atomic', 'aria-label', 'aria-live', 'role', 'title']);\n      return _createVNode(props.tag, _mergeProps({\n        \"class\": ['v-badge', {\n          'v-badge--bordered': props.bordered,\n          'v-badge--dot': props.dot,\n          'v-badge--floating': props.floating,\n          'v-badge--inline': props.inline\n        }, props.class]\n      }, attrs, {\n        \"style\": props.style\n      }), {\n        default: () => [_createVNode(\"div\", {\n          \"class\": \"v-badge__wrapper\"\n        }, [ctx.slots.default?.(), _createVNode(MaybeTransition, {\n          \"transition\": props.transition\n        }, {\n          default: () => [_withDirectives(_createVNode(\"span\", _mergeProps({\n            \"class\": ['v-badge__badge', themeClasses.value, backgroundColorClasses.value, roundedClasses.value, textColorClasses.value],\n            \"style\": [backgroundColorStyles.value, textColorStyles.value, props.inline ? {} : locationStyles.value],\n            \"aria-atomic\": \"true\",\n            \"aria-label\": t(props.label, value),\n            \"aria-live\": \"polite\",\n            \"role\": \"status\"\n          }, badgeAttrs), [props.dot ? undefined : ctx.slots.badge ? ctx.slots.badge?.() : props.icon ? _createVNode(VIcon, {\n            \"icon\": props.icon\n          }, null) : content]), [[_vShow, props.modelValue]])]\n        })])]\n      });\n    });\n    return {};\n  }\n});\n//# sourceMappingURL=VBadge.mjs.map",
      "start": 1731941017266,
      "end": 1731941018137,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941018137,
      "end": 1731941018137,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941018137,
      "end": 1731941018137,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941018137,
      "end": 1731941018137,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941018137,
      "end": 1731941018137,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941018137,
      "end": 1731941018137,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941018137,
      "end": 1731941018137,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941018137,
      "end": 1731941018137,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941018137,
      "end": 1731941018137,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941018137,
      "end": 1731941018137,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941018137,
      "end": 1731941018137,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941018137,
      "end": 1731941018138,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941018138,
      "end": 1731941018138,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1731941018138,
      "end": 1731941018138,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941018138,
      "end": 1731941018138,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941018138,
      "end": 1731941018138,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941018138,
      "end": 1731941018138,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1731941018138,
      "end": 1731941018138,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1731941018138,
      "end": 1731941018138,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941018138,
      "end": 1731941018138,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941018138,
      "end": 1731941018138,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941018138,
      "end": 1731941018138,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941018138,
      "end": 1731941018138,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941018138,
      "end": 1731941018138,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941018138,
      "end": 1731941018138,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941018138,
      "end": 1731941018138,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941018138,
      "end": 1731941018139,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941018139,
      "end": 1731941018139,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941018139,
      "end": 1731941018139,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941018139,
      "end": 1731941018139,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941018139,
      "end": 1731941018139,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941018139,
      "end": 1731941018139,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941018139,
      "end": 1731941018139,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1731941018139,
      "end": 1731941018139,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1731941018139,
      "end": 1731941018139,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941018139,
      "end": 1731941018139,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941018139,
      "end": 1731941018139,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941018139,
      "end": 1731941018139,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941018139,
      "end": 1731941018139,
      "order": "normal"
    }
  ]
}
