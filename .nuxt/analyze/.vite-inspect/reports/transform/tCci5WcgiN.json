{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/primevue/checkbox/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { equals, contains } from '@primeuix/utils/object';\nimport CheckIcon from '@primevue/icons/check';\nimport MinusIcon from '@primevue/icons/minus';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport CheckboxStyle from 'primevue/checkbox/style';\nimport { resolveComponent, openBlock, createElementBlock, mergeProps, createElementVNode, renderSlot, normalizeClass, createBlock, createCommentVNode } from 'vue';\n\nvar script$1 = {\n  name: 'BaseCheckbox',\n  \"extends\": BaseComponent,\n  props: {\n    value: null,\n    modelValue: null,\n    binary: Boolean,\n    name: {\n      type: String,\n      \"default\": null\n    },\n    indeterminate: {\n      type: Boolean,\n      \"default\": false\n    },\n    trueValue: {\n      type: null,\n      \"default\": true\n    },\n    falseValue: {\n      type: null,\n      \"default\": false\n    },\n    variant: {\n      type: String,\n      \"default\": null\n    },\n    invalid: {\n      type: Boolean,\n      \"default\": false\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    readonly: {\n      type: Boolean,\n      \"default\": false\n    },\n    required: {\n      type: Boolean,\n      \"default\": false\n    },\n    tabindex: {\n      type: Number,\n      \"default\": null\n    },\n    inputId: {\n      type: String,\n      \"default\": null\n    },\n    inputClass: {\n      type: [String, Object],\n      \"default\": null\n    },\n    inputStyle: {\n      type: Object,\n      \"default\": null\n    },\n    ariaLabelledby: {\n      type: String,\n      \"default\": null\n    },\n    ariaLabel: {\n      type: String,\n      \"default\": null\n    }\n  },\n  style: CheckboxStyle,\n  provide: function provide() {\n    return {\n      $pcCheckbox: this,\n      $parentInstance: this\n    };\n  }\n};\n\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nvar script = {\n  name: 'Checkbox',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:modelValue', 'change', 'focus', 'blur', 'update:indeterminate'],\n  data: function data() {\n    return {\n      d_indeterminate: this.indeterminate\n    };\n  },\n  watch: {\n    indeterminate: function indeterminate(newValue) {\n      this.d_indeterminate = newValue;\n    }\n  },\n  methods: {\n    getPTOptions: function getPTOptions(key) {\n      var _ptm = key === 'root' ? this.ptmi : this.ptm;\n      return _ptm(key, {\n        context: {\n          checked: this.checked,\n          indeterminate: this.d_indeterminate,\n          disabled: this.disabled\n        }\n      });\n    },\n    onChange: function onChange(event) {\n      var _this = this;\n      if (!this.disabled && !this.readonly) {\n        var newModelValue;\n        if (this.binary) {\n          newModelValue = this.d_indeterminate ? this.trueValue : this.checked ? this.falseValue : this.trueValue;\n        } else {\n          if (this.checked || this.d_indeterminate) newModelValue = this.modelValue.filter(function (val) {\n            return !equals(val, _this.value);\n          });else newModelValue = this.modelValue ? [].concat(_toConsumableArray(this.modelValue), [this.value]) : [this.value];\n        }\n        if (this.d_indeterminate) {\n          this.d_indeterminate = false;\n          this.$emit('update:indeterminate', this.d_indeterminate);\n        }\n        this.$emit('update:modelValue', newModelValue);\n        this.$emit('change', event);\n      }\n    },\n    onFocus: function onFocus(event) {\n      this.$emit('focus', event);\n    },\n    onBlur: function onBlur(event) {\n      this.$emit('blur', event);\n    }\n  },\n  computed: {\n    checked: function checked() {\n      return this.d_indeterminate ? false : this.binary ? this.modelValue === this.trueValue : contains(this.value, this.modelValue);\n    }\n  },\n  components: {\n    CheckIcon: CheckIcon,\n    MinusIcon: MinusIcon\n  }\n};\n\nvar _hoisted_1 = [\"data-p-checked\", \"data-p-indeterminate\", \"data-p-disabled\"];\nvar _hoisted_2 = [\"id\", \"value\", \"name\", \"checked\", \"tabindex\", \"disabled\", \"readonly\", \"required\", \"aria-labelledby\", \"aria-label\", \"aria-invalid\", \"aria-checked\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_CheckIcon = resolveComponent(\"CheckIcon\");\n  var _component_MinusIcon = resolveComponent(\"MinusIcon\");\n  return openBlock(), createElementBlock(\"div\", mergeProps({\n    \"class\": _ctx.cx('root')\n  }, $options.getPTOptions('root'), {\n    \"data-p-checked\": $options.checked,\n    \"data-p-indeterminate\": $data.d_indeterminate || undefined,\n    \"data-p-disabled\": _ctx.disabled\n  }), [createElementVNode(\"input\", mergeProps({\n    id: _ctx.inputId,\n    type: \"checkbox\",\n    \"class\": [_ctx.cx('input'), _ctx.inputClass],\n    style: _ctx.inputStyle,\n    value: _ctx.value,\n    name: _ctx.name,\n    checked: $options.checked,\n    tabindex: _ctx.tabindex,\n    disabled: _ctx.disabled,\n    readonly: _ctx.readonly,\n    required: _ctx.required,\n    \"aria-labelledby\": _ctx.ariaLabelledby,\n    \"aria-label\": _ctx.ariaLabel,\n    \"aria-invalid\": _ctx.invalid || undefined,\n    \"aria-checked\": $data.d_indeterminate ? 'mixed' : undefined,\n    onFocus: _cache[0] || (_cache[0] = function () {\n      return $options.onFocus && $options.onFocus.apply($options, arguments);\n    }),\n    onBlur: _cache[1] || (_cache[1] = function () {\n      return $options.onBlur && $options.onBlur.apply($options, arguments);\n    }),\n    onChange: _cache[2] || (_cache[2] = function () {\n      return $options.onChange && $options.onChange.apply($options, arguments);\n    })\n  }, $options.getPTOptions('input')), null, 16, _hoisted_2), createElementVNode(\"div\", mergeProps({\n    \"class\": _ctx.cx('box')\n  }, $options.getPTOptions('box')), [renderSlot(_ctx.$slots, \"icon\", {\n    checked: $options.checked,\n    indeterminate: $data.d_indeterminate,\n    \"class\": normalizeClass(_ctx.cx('icon'))\n  }, function () {\n    return [$options.checked ? (openBlock(), createBlock(_component_CheckIcon, mergeProps({\n      key: 0,\n      \"class\": _ctx.cx('icon')\n    }, $options.getPTOptions('icon')), null, 16, [\"class\"])) : $data.d_indeterminate ? (openBlock(), createBlock(_component_MinusIcon, mergeProps({\n      key: 1,\n      \"class\": _ctx.cx('icon')\n    }, $options.getPTOptions('icon')), null, 16, [\"class\"])) : createCommentVNode(\"\", true)];\n  })], 16)], 16, _hoisted_1);\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n",
      "start": 1731941016147,
      "end": 1731941016448,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941016449,
      "end": 1731941016449,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941016449,
      "end": 1731941016449,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941016449,
      "end": 1731941016449,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941016449,
      "end": 1731941016449,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941016449,
      "end": 1731941016449,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941016449,
      "end": 1731941016449,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941016449,
      "end": 1731941016449,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941016449,
      "end": 1731941016449,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941016449,
      "end": 1731941016449,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941016449,
      "end": 1731941016449,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941016449,
      "end": 1731941016449,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941016449,
      "end": 1731941016449,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1731941016449,
      "end": 1731941016449,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941016449,
      "end": 1731941016450,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1731941016450,
      "end": 1731941016450,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941016450,
      "end": 1731941016451,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941016451,
      "end": 1731941016451,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941016451,
      "end": 1731941016451,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941016451,
      "end": 1731941016451,
      "order": "normal"
    }
  ]
}
