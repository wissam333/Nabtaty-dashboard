{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/composables/filter.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "/* eslint-disable max-statements */\n/* eslint-disable no-labels */\n\n// Utilities\nimport { computed, ref, unref, watchEffect } from 'vue';\nimport { getPropertyFromItem, propsFactory, wrapInArray } from \"../util/index.mjs\"; // Types\n/**\n * - match without highlight\n * - single match (index), length already known\n * - single match (start, end)\n * - multiple matches (start, end), probably shouldn't overlap\n */\n// Composables\nexport const defaultFilter = (value, query, item) => {\n  if (value == null || query == null) return -1;\n  return value.toString().toLocaleLowerCase().indexOf(query.toString().toLocaleLowerCase());\n};\nexport const makeFilterProps = propsFactory({\n  customFilter: Function,\n  customKeyFilter: Object,\n  filterKeys: [Array, String],\n  filterMode: {\n    type: String,\n    default: 'intersection'\n  },\n  noFilter: Boolean\n}, 'filter');\nexport function filterItems(items, query, options) {\n  const array = [];\n  // always ensure we fall back to a functioning filter\n  const filter = options?.default ?? defaultFilter;\n  const keys = options?.filterKeys ? wrapInArray(options.filterKeys) : false;\n  const customFiltersLength = Object.keys(options?.customKeyFilter ?? {}).length;\n  if (!items?.length) return array;\n  loop: for (let i = 0; i < items.length; i++) {\n    const [item, transformed = item] = wrapInArray(items[i]);\n    const customMatches = {};\n    const defaultMatches = {};\n    let match = -1;\n    if (query && !options?.noFilter) {\n      if (typeof item === 'object') {\n        const filterKeys = keys || Object.keys(transformed);\n        for (const key of filterKeys) {\n          const value = getPropertyFromItem(transformed, key);\n          const keyFilter = options?.customKeyFilter?.[key];\n          match = keyFilter ? keyFilter(value, query, item) : filter(value, query, item);\n          if (match !== -1 && match !== false) {\n            if (keyFilter) customMatches[key] = match;else defaultMatches[key] = match;\n          } else if (options?.filterMode === 'every') {\n            continue loop;\n          }\n        }\n      } else {\n        match = filter(item, query, item);\n        if (match !== -1 && match !== false) {\n          defaultMatches.title = match;\n        }\n      }\n      const defaultMatchesLength = Object.keys(defaultMatches).length;\n      const customMatchesLength = Object.keys(customMatches).length;\n      if (!defaultMatchesLength && !customMatchesLength) continue;\n      if (options?.filterMode === 'union' && customMatchesLength !== customFiltersLength && !defaultMatchesLength) continue;\n      if (options?.filterMode === 'intersection' && (customMatchesLength !== customFiltersLength || !defaultMatchesLength)) continue;\n    }\n    array.push({\n      index: i,\n      matches: {\n        ...defaultMatches,\n        ...customMatches\n      }\n    });\n  }\n  return array;\n}\nexport function useFilter(props, items, query, options) {\n  const filteredItems = ref([]);\n  const filteredMatches = ref(new Map());\n  const transformedItems = computed(() => options?.transform ? unref(items).map(item => [item, options.transform(item)]) : unref(items));\n  watchEffect(() => {\n    const _query = typeof query === 'function' ? query() : unref(query);\n    const strQuery = typeof _query !== 'string' && typeof _query !== 'number' ? '' : String(_query);\n    const results = filterItems(transformedItems.value, strQuery, {\n      customKeyFilter: {\n        ...props.customKeyFilter,\n        ...unref(options?.customKeyFilter)\n      },\n      default: props.customFilter,\n      filterKeys: props.filterKeys,\n      filterMode: props.filterMode,\n      noFilter: props.noFilter\n    });\n    const originalItems = unref(items);\n    const _filteredItems = [];\n    const _filteredMatches = new Map();\n    results.forEach(_ref => {\n      let {\n        index,\n        matches\n      } = _ref;\n      const item = originalItems[index];\n      _filteredItems.push(item);\n      _filteredMatches.set(item.value, matches);\n    });\n    filteredItems.value = _filteredItems;\n    filteredMatches.value = _filteredMatches;\n  });\n  function getMatches(item) {\n    return filteredMatches.value.get(item.value);\n  }\n  return {\n    filteredItems,\n    filteredMatches,\n    getMatches\n  };\n}\n//# sourceMappingURL=filter.mjs.map",
      "start": 1731941020124,
      "end": 1731941020306,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941020306,
      "end": 1731941020306,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941020306,
      "end": 1731941020306,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941020306,
      "end": 1731941020306,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941020307,
      "end": 1731941020307,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941020307,
      "end": 1731941020308,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941020308,
      "end": 1731941020308,
      "order": "normal"
    }
  ]
}
