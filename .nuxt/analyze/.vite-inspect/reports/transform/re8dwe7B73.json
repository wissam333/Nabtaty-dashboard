{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VNavigationDrawer/VNavigationDrawer.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VNavigationDrawer.css\";\n\n// Composables\nimport { useSticky } from \"./sticky.mjs\";\nimport { useTouch } from \"./touch.mjs\";\nimport { useRtl } from \"../../composables/index.mjs\";\nimport { makeBorderProps, useBorder } from \"../../composables/border.mjs\";\nimport { useBackgroundColor } from \"../../composables/color.mjs\";\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { provideDefaults } from \"../../composables/defaults.mjs\";\nimport { makeDisplayProps, useDisplay } from \"../../composables/display.mjs\";\nimport { makeElevationProps, useElevation } from \"../../composables/elevation.mjs\";\nimport { makeLayoutItemProps, useLayoutItem } from \"../../composables/layout.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeRoundedProps, useRounded } from \"../../composables/rounded.mjs\";\nimport { useRouter } from \"../../composables/router.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\";\nimport { useSsrBoot } from \"../../composables/ssrBoot.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\";\nimport { makeThemeProps, provideTheme } from \"../../composables/theme.mjs\";\nimport { useToggleScope } from \"../../composables/toggleScope.mjs\"; // Utilities\nimport { computed, nextTick, onBeforeMount, ref, shallowRef, toRef, Transition, watch } from 'vue';\nimport { genericComponent, propsFactory, toPhysical, useRender } from \"../../util/index.mjs\"; // Types\nconst locations = ['start', 'end', 'left', 'right', 'top', 'bottom'];\nexport const makeVNavigationDrawerProps = propsFactory({\n  color: String,\n  disableResizeWatcher: Boolean,\n  disableRouteWatcher: Boolean,\n  expandOnHover: Boolean,\n  floating: Boolean,\n  modelValue: {\n    type: Boolean,\n    default: null\n  },\n  permanent: Boolean,\n  rail: {\n    type: Boolean,\n    default: null\n  },\n  railWidth: {\n    type: [Number, String],\n    default: 56\n  },\n  scrim: {\n    type: [Boolean, String],\n    default: true\n  },\n  image: String,\n  temporary: Boolean,\n  touchless: Boolean,\n  width: {\n    type: [Number, String],\n    default: 256\n  },\n  location: {\n    type: String,\n    default: 'start',\n    validator: value => locations.includes(value)\n  },\n  sticky: Boolean,\n  ...makeBorderProps(),\n  ...makeComponentProps(),\n  ...makeDisplayProps(),\n  ...makeElevationProps(),\n  ...makeLayoutItemProps(),\n  ...makeRoundedProps(),\n  ...makeTagProps({\n    tag: 'nav'\n  }),\n  ...makeThemeProps()\n}, 'VNavigationDrawer');\nexport const VNavigationDrawer = genericComponent()({\n  name: 'VNavigationDrawer',\n  props: makeVNavigationDrawerProps(),\n  emits: {\n    'update:modelValue': val => true,\n    'update:rail': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      isRtl\n    } = useRtl();\n    const {\n      themeClasses\n    } = provideTheme(props);\n    const {\n      borderClasses\n    } = useBorder(props);\n    const {\n      backgroundColorClasses,\n      backgroundColorStyles\n    } = useBackgroundColor(toRef(props, 'color'));\n    const {\n      elevationClasses\n    } = useElevation(props);\n    const {\n      displayClasses,\n      mobile\n    } = useDisplay(props);\n    const {\n      roundedClasses\n    } = useRounded(props);\n    const router = useRouter();\n    const isActive = useProxiedModel(props, 'modelValue', null, v => !!v);\n    const {\n      ssrBootStyles\n    } = useSsrBoot();\n    const {\n      scopeId\n    } = useScopeId();\n    const rootEl = ref();\n    const isHovering = shallowRef(false);\n    const width = computed(() => {\n      return props.rail && props.expandOnHover && isHovering.value ? Number(props.width) : Number(props.rail ? props.railWidth : props.width);\n    });\n    const location = computed(() => {\n      return toPhysical(props.location, isRtl.value);\n    });\n    const isTemporary = computed(() => !props.permanent && (mobile.value || props.temporary));\n    const isSticky = computed(() => props.sticky && !isTemporary.value && location.value !== 'bottom');\n    useToggleScope(() => props.expandOnHover && props.rail != null, () => {\n      watch(isHovering, val => emit('update:rail', !val));\n    });\n    useToggleScope(() => !props.disableResizeWatcher, () => {\n      watch(isTemporary, val => !props.permanent && nextTick(() => isActive.value = !val));\n    });\n    useToggleScope(() => !props.disableRouteWatcher && !!router, () => {\n      watch(router.currentRoute, () => isTemporary.value && (isActive.value = false));\n    });\n    watch(() => props.permanent, val => {\n      if (val) isActive.value = true;\n    });\n    onBeforeMount(() => {\n      if (props.modelValue != null || isTemporary.value) return;\n      isActive.value = props.permanent || !mobile.value;\n    });\n    const {\n      isDragging,\n      dragProgress,\n      dragStyles\n    } = useTouch({\n      isActive,\n      isTemporary,\n      width,\n      touchless: toRef(props, 'touchless'),\n      position: location\n    });\n    const layoutSize = computed(() => {\n      const size = isTemporary.value ? 0 : props.rail && props.expandOnHover ? Number(props.railWidth) : width.value;\n      return isDragging.value ? size * dragProgress.value : size;\n    });\n    const {\n      layoutItemStyles,\n      layoutItemScrimStyles\n    } = useLayoutItem({\n      id: props.name,\n      order: computed(() => parseInt(props.order, 10)),\n      position: location,\n      layoutSize,\n      elementSize: width,\n      active: computed(() => isActive.value || isDragging.value),\n      disableTransitions: computed(() => isDragging.value),\n      absolute: computed(() =>\n      // eslint-disable-next-line @typescript-eslint/no-use-before-define\n      props.absolute || isSticky.value && typeof isStuck.value !== 'string')\n    });\n    const {\n      isStuck,\n      stickyStyles\n    } = useSticky({\n      rootEl,\n      isSticky,\n      layoutItemStyles\n    });\n    const scrimColor = useBackgroundColor(computed(() => {\n      return typeof props.scrim === 'string' ? props.scrim : null;\n    }));\n    const scrimStyles = computed(() => ({\n      ...(isDragging.value ? {\n        opacity: dragProgress.value * 0.2,\n        transition: 'none'\n      } : undefined),\n      ...layoutItemScrimStyles.value\n    }));\n    provideDefaults({\n      VList: {\n        bgColor: 'transparent'\n      }\n    });\n    function onMouseenter() {\n      isHovering.value = true;\n    }\n    function onMouseleave() {\n      isHovering.value = false;\n    }\n    useRender(() => {\n      const hasImage = slots.image || props.image;\n      return _createVNode(_Fragment, null, [_createVNode(props.tag, _mergeProps({\n        \"ref\": rootEl,\n        \"onMouseenter\": onMouseenter,\n        \"onMouseleave\": onMouseleave,\n        \"class\": ['v-navigation-drawer', `v-navigation-drawer--${location.value}`, {\n          'v-navigation-drawer--expand-on-hover': props.expandOnHover,\n          'v-navigation-drawer--floating': props.floating,\n          'v-navigation-drawer--is-hovering': isHovering.value,\n          'v-navigation-drawer--rail': props.rail,\n          'v-navigation-drawer--temporary': isTemporary.value,\n          'v-navigation-drawer--active': isActive.value,\n          'v-navigation-drawer--sticky': isSticky.value\n        }, themeClasses.value, backgroundColorClasses.value, borderClasses.value, displayClasses.value, elevationClasses.value, roundedClasses.value, props.class],\n        \"style\": [backgroundColorStyles.value, layoutItemStyles.value, dragStyles.value, ssrBootStyles.value, stickyStyles.value, props.style]\n      }, scopeId, attrs), {\n        default: () => [hasImage && _createVNode(\"div\", {\n          \"key\": \"image\",\n          \"class\": \"v-navigation-drawer__img\"\n        }, [slots.image ? slots.image?.({\n          image: props.image\n        }) : _createVNode(\"img\", {\n          \"src\": props.image,\n          \"alt\": \"\"\n        }, null)]), slots.prepend && _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__prepend\"\n        }, [slots.prepend?.()]), _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__content\"\n        }, [slots.default?.()]), slots.append && _createVNode(\"div\", {\n          \"class\": \"v-navigation-drawer__append\"\n        }, [slots.append?.()])]\n      }), _createVNode(Transition, {\n        \"name\": \"fade-transition\"\n      }, {\n        default: () => [isTemporary.value && (isDragging.value || isActive.value) && !!props.scrim && _createVNode(\"div\", _mergeProps({\n          \"class\": ['v-navigation-drawer__scrim', scrimColor.backgroundColorClasses.value],\n          \"style\": [scrimStyles.value, scrimColor.backgroundColorStyles.value],\n          \"onClick\": () => isActive.value = false\n        }, scopeId), null)]\n      })]);\n    });\n    return {\n      isStuck\n    };\n  }\n});\n//# sourceMappingURL=VNavigationDrawer.mjs.map",
      "start": 1731941018816,
      "end": 1731941018972,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941018973,
      "end": 1731941018973,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941018973,
      "end": 1731941018973,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941018973,
      "end": 1731941018973,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941018973,
      "end": 1731941018973,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941018973,
      "end": 1731941018973,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941018973,
      "end": 1731941018973,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941018973,
      "end": 1731941018973,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941018973,
      "end": 1731941018973,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941018973,
      "end": 1731941018973,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941018973,
      "end": 1731941018973,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941018973,
      "end": 1731941018973,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941018973,
      "end": 1731941018973,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1731941018973,
      "end": 1731941018973,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941018973,
      "end": 1731941018974,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941018974,
      "end": 1731941018974,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941018975,
      "end": 1731941018975,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1731941018975,
      "end": 1731941018975,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1731941018975,
      "end": 1731941018975,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941018975,
      "end": 1731941018975,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941018975,
      "end": 1731941018975,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941018975,
      "end": 1731941018975,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941018975,
      "end": 1731941018975,
      "order": "normal"
    }
  ]
}
