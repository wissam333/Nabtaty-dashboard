{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/primevue/virtualscroller/index.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { isVisible, getWidth, getHeight, findSingle } from '@primeuix/utils/dom';\nimport SpinnerIcon from '@primevue/icons/spinner';\nimport BaseComponent from '@primevue/core/basecomponent';\nimport VirtualScrollerStyle from 'primevue/virtualscroller/style';\nimport { resolveComponent, openBlock, createElementBlock, mergeProps, renderSlot, createElementVNode, Fragment, renderList, createCommentVNode, createVNode } from 'vue';\n\nvar script$1 = {\n  name: 'BaseVirtualScroller',\n  \"extends\": BaseComponent,\n  props: {\n    id: {\n      type: String,\n      \"default\": null\n    },\n    style: null,\n    \"class\": null,\n    items: {\n      type: Array,\n      \"default\": null\n    },\n    itemSize: {\n      type: [Number, Array],\n      \"default\": 0\n    },\n    scrollHeight: null,\n    scrollWidth: null,\n    orientation: {\n      type: String,\n      \"default\": 'vertical'\n    },\n    numToleratedItems: {\n      type: Number,\n      \"default\": null\n    },\n    delay: {\n      type: Number,\n      \"default\": 0\n    },\n    resizeDelay: {\n      type: Number,\n      \"default\": 10\n    },\n    lazy: {\n      type: Boolean,\n      \"default\": false\n    },\n    disabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    loaderDisabled: {\n      type: Boolean,\n      \"default\": false\n    },\n    columns: {\n      type: Array,\n      \"default\": null\n    },\n    loading: {\n      type: Boolean,\n      \"default\": false\n    },\n    showSpacer: {\n      type: Boolean,\n      \"default\": true\n    },\n    showLoader: {\n      type: Boolean,\n      \"default\": false\n    },\n    tabindex: {\n      type: Number,\n      \"default\": 0\n    },\n    inline: {\n      type: Boolean,\n      \"default\": false\n    },\n    step: {\n      type: Number,\n      \"default\": 0\n    },\n    appendOnly: {\n      type: Boolean,\n      \"default\": false\n    },\n    autoSize: {\n      type: Boolean,\n      \"default\": false\n    }\n  },\n  style: VirtualScrollerStyle,\n  provide: function provide() {\n    return {\n      $pcVirtualScroller: this,\n      $parentInstance: this\n    };\n  },\n  beforeMount: function beforeMount() {\n    var _this$$primevueConfig;\n    VirtualScrollerStyle.loadCSS({\n      nonce: (_this$$primevueConfig = this.$primevueConfig) === null || _this$$primevueConfig === void 0 || (_this$$primevueConfig = _this$$primevueConfig.csp) === null || _this$$primevueConfig === void 0 ? void 0 : _this$$primevueConfig.nonce\n    });\n  }\n};\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar script = {\n  name: 'VirtualScroller',\n  \"extends\": script$1,\n  inheritAttrs: false,\n  emits: ['update:numToleratedItems', 'scroll', 'scroll-index-change', 'lazy-load'],\n  data: function data() {\n    var both = this.isBoth();\n    return {\n      first: both ? {\n        rows: 0,\n        cols: 0\n      } : 0,\n      last: both ? {\n        rows: 0,\n        cols: 0\n      } : 0,\n      page: both ? {\n        rows: 0,\n        cols: 0\n      } : 0,\n      numItemsInViewport: both ? {\n        rows: 0,\n        cols: 0\n      } : 0,\n      lastScrollPos: both ? {\n        top: 0,\n        left: 0\n      } : 0,\n      d_numToleratedItems: this.numToleratedItems,\n      d_loading: this.loading,\n      loaderArr: [],\n      spacerStyle: {},\n      contentStyle: {}\n    };\n  },\n  element: null,\n  content: null,\n  lastScrollPos: null,\n  scrollTimeout: null,\n  resizeTimeout: null,\n  defaultWidth: 0,\n  defaultHeight: 0,\n  defaultContentWidth: 0,\n  defaultContentHeight: 0,\n  isRangeChanged: false,\n  lazyLoadState: {},\n  resizeListener: null,\n  initialized: false,\n  watch: {\n    numToleratedItems: function numToleratedItems(newValue) {\n      this.d_numToleratedItems = newValue;\n    },\n    loading: function loading(newValue, oldValue) {\n      if (this.lazy && newValue !== oldValue && newValue !== this.d_loading) {\n        this.d_loading = newValue;\n      }\n    },\n    items: function items(newValue, oldValue) {\n      if (!oldValue || oldValue.length !== (newValue || []).length) {\n        this.init();\n        this.calculateAutoSize();\n      }\n    },\n    itemSize: function itemSize() {\n      this.init();\n      this.calculateAutoSize();\n    },\n    orientation: function orientation() {\n      this.lastScrollPos = this.isBoth() ? {\n        top: 0,\n        left: 0\n      } : 0;\n    },\n    scrollHeight: function scrollHeight() {\n      this.init();\n      this.calculateAutoSize();\n    },\n    scrollWidth: function scrollWidth() {\n      this.init();\n      this.calculateAutoSize();\n    }\n  },\n  mounted: function mounted() {\n    this.viewInit();\n    this.lastScrollPos = this.isBoth() ? {\n      top: 0,\n      left: 0\n    } : 0;\n    this.lazyLoadState = this.lazyLoadState || {};\n  },\n  updated: function updated() {\n    !this.initialized && this.viewInit();\n  },\n  unmounted: function unmounted() {\n    this.unbindResizeListener();\n    this.initialized = false;\n  },\n  methods: {\n    viewInit: function viewInit() {\n      if (isVisible(this.element)) {\n        this.setContentEl(this.content);\n        this.init();\n        this.calculateAutoSize();\n        this.bindResizeListener();\n        this.defaultWidth = getWidth(this.element);\n        this.defaultHeight = getHeight(this.element);\n        this.defaultContentWidth = getWidth(this.content);\n        this.defaultContentHeight = getHeight(this.content);\n        this.initialized = true;\n      }\n    },\n    init: function init() {\n      if (!this.disabled) {\n        this.setSize();\n        this.calculateOptions();\n        this.setSpacerSize();\n      }\n    },\n    isVertical: function isVertical() {\n      return this.orientation === 'vertical';\n    },\n    isHorizontal: function isHorizontal() {\n      return this.orientation === 'horizontal';\n    },\n    isBoth: function isBoth() {\n      return this.orientation === 'both';\n    },\n    scrollTo: function scrollTo(options) {\n      //this.lastScrollPos = this.both ? { top: 0, left: 0 } : 0;\n      this.element && this.element.scrollTo(options);\n    },\n    scrollToIndex: function scrollToIndex(index) {\n      var _this = this;\n      var behavior = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'auto';\n      var both = this.isBoth();\n      var horizontal = this.isHorizontal();\n      var valid = both ? index.every(function (i) {\n        return i > -1;\n      }) : index > -1;\n      if (valid) {\n        var first = this.first;\n        var _this$element = this.element,\n          _this$element$scrollT = _this$element.scrollTop,\n          scrollTop = _this$element$scrollT === void 0 ? 0 : _this$element$scrollT,\n          _this$element$scrollL = _this$element.scrollLeft,\n          scrollLeft = _this$element$scrollL === void 0 ? 0 : _this$element$scrollL;\n        var _this$calculateNumIte = this.calculateNumItems(),\n          numToleratedItems = _this$calculateNumIte.numToleratedItems;\n        var contentPos = this.getContentPosition();\n        var itemSize = this.itemSize;\n        var calculateFirst = function calculateFirst() {\n          var _index = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n          var _numT = arguments.length > 1 ? arguments[1] : undefined;\n          return _index <= _numT ? 0 : _index;\n        };\n        var calculateCoord = function calculateCoord(_first, _size, _cpos) {\n          return _first * _size + _cpos;\n        };\n        var scrollTo = function scrollTo() {\n          var left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n          var top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          return _this.scrollTo({\n            left: left,\n            top: top,\n            behavior: behavior\n          });\n        };\n        var newFirst = both ? {\n          rows: 0,\n          cols: 0\n        } : 0;\n        var isRangeChanged = false,\n          isScrollChanged = false;\n        if (both) {\n          newFirst = {\n            rows: calculateFirst(index[0], numToleratedItems[0]),\n            cols: calculateFirst(index[1], numToleratedItems[1])\n          };\n          scrollTo(calculateCoord(newFirst.cols, itemSize[1], contentPos.left), calculateCoord(newFirst.rows, itemSize[0], contentPos.top));\n          isScrollChanged = this.lastScrollPos.top !== scrollTop || this.lastScrollPos.left !== scrollLeft;\n          isRangeChanged = newFirst.rows !== first.rows || newFirst.cols !== first.cols;\n        } else {\n          newFirst = calculateFirst(index, numToleratedItems);\n          horizontal ? scrollTo(calculateCoord(newFirst, itemSize, contentPos.left), scrollTop) : scrollTo(scrollLeft, calculateCoord(newFirst, itemSize, contentPos.top));\n          isScrollChanged = this.lastScrollPos !== (horizontal ? scrollLeft : scrollTop);\n          isRangeChanged = newFirst !== first;\n        }\n        this.isRangeChanged = isRangeChanged;\n        isScrollChanged && (this.first = newFirst);\n      }\n    },\n    scrollInView: function scrollInView(index, to) {\n      var _this2 = this;\n      var behavior = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'auto';\n      if (to) {\n        var both = this.isBoth();\n        var horizontal = this.isHorizontal();\n        var valid = both ? index.every(function (i) {\n          return i > -1;\n        }) : index > -1;\n        if (valid) {\n          var _this$getRenderedRang = this.getRenderedRange(),\n            first = _this$getRenderedRang.first,\n            viewport = _this$getRenderedRang.viewport;\n          var scrollTo = function scrollTo() {\n            var left = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n            var top = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n            return _this2.scrollTo({\n              left: left,\n              top: top,\n              behavior: behavior\n            });\n          };\n          var isToStart = to === 'to-start';\n          var isToEnd = to === 'to-end';\n          if (isToStart) {\n            if (both) {\n              if (viewport.first.rows - first.rows > index[0]) {\n                scrollTo(viewport.first.cols * this.itemSize[1], (viewport.first.rows - 1) * this.itemSize[0]);\n              } else if (viewport.first.cols - first.cols > index[1]) {\n                scrollTo((viewport.first.cols - 1) * this.itemSize[1], viewport.first.rows * this.itemSize[0]);\n              }\n            } else {\n              if (viewport.first - first > index) {\n                var pos = (viewport.first - 1) * this.itemSize;\n                horizontal ? scrollTo(pos, 0) : scrollTo(0, pos);\n              }\n            }\n          } else if (isToEnd) {\n            if (both) {\n              if (viewport.last.rows - first.rows <= index[0] + 1) {\n                scrollTo(viewport.first.cols * this.itemSize[1], (viewport.first.rows + 1) * this.itemSize[0]);\n              } else if (viewport.last.cols - first.cols <= index[1] + 1) {\n                scrollTo((viewport.first.cols + 1) * this.itemSize[1], viewport.first.rows * this.itemSize[0]);\n              }\n            } else {\n              if (viewport.last - first <= index + 1) {\n                var _pos2 = (viewport.first + 1) * this.itemSize;\n                horizontal ? scrollTo(_pos2, 0) : scrollTo(0, _pos2);\n              }\n            }\n          }\n        }\n      } else {\n        this.scrollToIndex(index, behavior);\n      }\n    },\n    getRenderedRange: function getRenderedRange() {\n      var calculateFirstInViewport = function calculateFirstInViewport(_pos, _size) {\n        return Math.floor(_pos / (_size || _pos));\n      };\n      var firstInViewport = this.first;\n      var lastInViewport = 0;\n      if (this.element) {\n        var both = this.isBoth();\n        var horizontal = this.isHorizontal();\n        var _this$element2 = this.element,\n          scrollTop = _this$element2.scrollTop,\n          scrollLeft = _this$element2.scrollLeft;\n        if (both) {\n          firstInViewport = {\n            rows: calculateFirstInViewport(scrollTop, this.itemSize[0]),\n            cols: calculateFirstInViewport(scrollLeft, this.itemSize[1])\n          };\n          lastInViewport = {\n            rows: firstInViewport.rows + this.numItemsInViewport.rows,\n            cols: firstInViewport.cols + this.numItemsInViewport.cols\n          };\n        } else {\n          var scrollPos = horizontal ? scrollLeft : scrollTop;\n          firstInViewport = calculateFirstInViewport(scrollPos, this.itemSize);\n          lastInViewport = firstInViewport + this.numItemsInViewport;\n        }\n      }\n      return {\n        first: this.first,\n        last: this.last,\n        viewport: {\n          first: firstInViewport,\n          last: lastInViewport\n        }\n      };\n    },\n    calculateNumItems: function calculateNumItems() {\n      var both = this.isBoth();\n      var horizontal = this.isHorizontal();\n      var itemSize = this.itemSize;\n      var contentPos = this.getContentPosition();\n      var contentWidth = this.element ? this.element.offsetWidth - contentPos.left : 0;\n      var contentHeight = this.element ? this.element.offsetHeight - contentPos.top : 0;\n      var calculateNumItemsInViewport = function calculateNumItemsInViewport(_contentSize, _itemSize) {\n        return Math.ceil(_contentSize / (_itemSize || _contentSize));\n      };\n      var calculateNumToleratedItems = function calculateNumToleratedItems(_numItems) {\n        return Math.ceil(_numItems / 2);\n      };\n      var numItemsInViewport = both ? {\n        rows: calculateNumItemsInViewport(contentHeight, itemSize[0]),\n        cols: calculateNumItemsInViewport(contentWidth, itemSize[1])\n      } : calculateNumItemsInViewport(horizontal ? contentWidth : contentHeight, itemSize);\n      var numToleratedItems = this.d_numToleratedItems || (both ? [calculateNumToleratedItems(numItemsInViewport.rows), calculateNumToleratedItems(numItemsInViewport.cols)] : calculateNumToleratedItems(numItemsInViewport));\n      return {\n        numItemsInViewport: numItemsInViewport,\n        numToleratedItems: numToleratedItems\n      };\n    },\n    calculateOptions: function calculateOptions() {\n      var _this3 = this;\n      var both = this.isBoth();\n      var first = this.first;\n      var _this$calculateNumIte2 = this.calculateNumItems(),\n        numItemsInViewport = _this$calculateNumIte2.numItemsInViewport,\n        numToleratedItems = _this$calculateNumIte2.numToleratedItems;\n      var calculateLast = function calculateLast(_first, _num, _numT) {\n        var _isCols = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        return _this3.getLast(_first + _num + (_first < _numT ? 2 : 3) * _numT, _isCols);\n      };\n      var last = both ? {\n        rows: calculateLast(first.rows, numItemsInViewport.rows, numToleratedItems[0]),\n        cols: calculateLast(first.cols, numItemsInViewport.cols, numToleratedItems[1], true)\n      } : calculateLast(first, numItemsInViewport, numToleratedItems);\n      this.last = last;\n      this.numItemsInViewport = numItemsInViewport;\n      this.d_numToleratedItems = numToleratedItems;\n      this.$emit('update:numToleratedItems', this.d_numToleratedItems);\n      if (this.showLoader) {\n        this.loaderArr = both ? Array.from({\n          length: numItemsInViewport.rows\n        }).map(function () {\n          return Array.from({\n            length: numItemsInViewport.cols\n          });\n        }) : Array.from({\n          length: numItemsInViewport\n        });\n      }\n      if (this.lazy) {\n        Promise.resolve().then(function () {\n          var _this3$items;\n          _this3.lazyLoadState = {\n            first: _this3.step ? both ? {\n              rows: 0,\n              cols: first.cols\n            } : 0 : first,\n            last: Math.min(_this3.step ? _this3.step : last, ((_this3$items = _this3.items) === null || _this3$items === void 0 ? void 0 : _this3$items.length) || 0)\n          };\n          _this3.$emit('lazy-load', _this3.lazyLoadState);\n        });\n      }\n    },\n    calculateAutoSize: function calculateAutoSize() {\n      var _this4 = this;\n      if (this.autoSize && !this.d_loading) {\n        Promise.resolve().then(function () {\n          if (_this4.content) {\n            var both = _this4.isBoth();\n            var horizontal = _this4.isHorizontal();\n            var vertical = _this4.isVertical();\n            _this4.content.style.minHeight = _this4.content.style.minWidth = 'auto';\n            _this4.content.style.position = 'relative';\n            _this4.element.style.contain = 'none';\n\n            /*const [contentWidth, contentHeight] = [getWidth(this.content), getHeight(this.content)];\n             contentWidth !== this.defaultContentWidth && (this.element.style.width = '');\n            contentHeight !== this.defaultContentHeight && (this.element.style.height = '');*/\n\n            var _ref = [getWidth(_this4.element), getHeight(_this4.element)],\n              width = _ref[0],\n              height = _ref[1];\n            (both || horizontal) && (_this4.element.style.width = width < _this4.defaultWidth ? width + 'px' : _this4.scrollWidth || _this4.defaultWidth + 'px');\n            (both || vertical) && (_this4.element.style.height = height < _this4.defaultHeight ? height + 'px' : _this4.scrollHeight || _this4.defaultHeight + 'px');\n            _this4.content.style.minHeight = _this4.content.style.minWidth = '';\n            _this4.content.style.position = '';\n            _this4.element.style.contain = '';\n          }\n        });\n      }\n    },\n    getLast: function getLast() {\n      var _ref2, _this$items;\n      var last = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var isCols = arguments.length > 1 ? arguments[1] : undefined;\n      return this.items ? Math.min(isCols ? ((_ref2 = this.columns || this.items[0]) === null || _ref2 === void 0 ? void 0 : _ref2.length) || 0 : ((_this$items = this.items) === null || _this$items === void 0 ? void 0 : _this$items.length) || 0, last) : 0;\n    },\n    getContentPosition: function getContentPosition() {\n      if (this.content) {\n        var style = getComputedStyle(this.content);\n        var left = parseFloat(style.paddingLeft) + Math.max(parseFloat(style.left) || 0, 0);\n        var right = parseFloat(style.paddingRight) + Math.max(parseFloat(style.right) || 0, 0);\n        var top = parseFloat(style.paddingTop) + Math.max(parseFloat(style.top) || 0, 0);\n        var bottom = parseFloat(style.paddingBottom) + Math.max(parseFloat(style.bottom) || 0, 0);\n        return {\n          left: left,\n          right: right,\n          top: top,\n          bottom: bottom,\n          x: left + right,\n          y: top + bottom\n        };\n      }\n      return {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        x: 0,\n        y: 0\n      };\n    },\n    setSize: function setSize() {\n      var _this5 = this;\n      if (this.element) {\n        var both = this.isBoth();\n        var horizontal = this.isHorizontal();\n        var parentElement = this.element.parentElement;\n        var width = this.scrollWidth || \"\".concat(this.element.offsetWidth || parentElement.offsetWidth, \"px\");\n        var height = this.scrollHeight || \"\".concat(this.element.offsetHeight || parentElement.offsetHeight, \"px\");\n        var setProp = function setProp(_name, _value) {\n          return _this5.element.style[_name] = _value;\n        };\n        if (both || horizontal) {\n          setProp('height', height);\n          setProp('width', width);\n        } else {\n          setProp('height', height);\n        }\n      }\n    },\n    setSpacerSize: function setSpacerSize() {\n      var _this6 = this;\n      var items = this.items;\n      if (items) {\n        var both = this.isBoth();\n        var horizontal = this.isHorizontal();\n        var contentPos = this.getContentPosition();\n        var setProp = function setProp(_name, _value, _size) {\n          var _cpos = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n          return _this6.spacerStyle = _objectSpread(_objectSpread({}, _this6.spacerStyle), _defineProperty({}, \"\".concat(_name), (_value || []).length * _size + _cpos + 'px'));\n        };\n        if (both) {\n          setProp('height', items, this.itemSize[0], contentPos.y);\n          setProp('width', this.columns || items[1], this.itemSize[1], contentPos.x);\n        } else {\n          horizontal ? setProp('width', this.columns || items, this.itemSize, contentPos.x) : setProp('height', items, this.itemSize, contentPos.y);\n        }\n      }\n    },\n    setContentPosition: function setContentPosition(pos) {\n      var _this7 = this;\n      if (this.content && !this.appendOnly) {\n        var both = this.isBoth();\n        var horizontal = this.isHorizontal();\n        var first = pos ? pos.first : this.first;\n        var calculateTranslateVal = function calculateTranslateVal(_first, _size) {\n          return _first * _size;\n        };\n        var setTransform = function setTransform() {\n          var _x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n          var _y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n          return _this7.contentStyle = _objectSpread(_objectSpread({}, _this7.contentStyle), {\n            transform: \"translate3d(\".concat(_x, \"px, \").concat(_y, \"px, 0)\")\n          });\n        };\n        if (both) {\n          setTransform(calculateTranslateVal(first.cols, this.itemSize[1]), calculateTranslateVal(first.rows, this.itemSize[0]));\n        } else {\n          var translateVal = calculateTranslateVal(first, this.itemSize);\n          horizontal ? setTransform(translateVal, 0) : setTransform(0, translateVal);\n        }\n      }\n    },\n    onScrollPositionChange: function onScrollPositionChange(event) {\n      var _this8 = this;\n      var target = event.target;\n      var both = this.isBoth();\n      var horizontal = this.isHorizontal();\n      var contentPos = this.getContentPosition();\n      var calculateScrollPos = function calculateScrollPos(_pos, _cpos) {\n        return _pos ? _pos > _cpos ? _pos - _cpos : _pos : 0;\n      };\n      var calculateCurrentIndex = function calculateCurrentIndex(_pos, _size) {\n        return Math.floor(_pos / (_size || _pos));\n      };\n      var calculateTriggerIndex = function calculateTriggerIndex(_currentIndex, _first, _last, _num, _numT, _isScrollDownOrRight) {\n        return _currentIndex <= _numT ? _numT : _isScrollDownOrRight ? _last - _num - _numT : _first + _numT - 1;\n      };\n      var calculateFirst = function calculateFirst(_currentIndex, _triggerIndex, _first, _last, _num, _numT, _isScrollDownOrRight) {\n        if (_currentIndex <= _numT) return 0;else return Math.max(0, _isScrollDownOrRight ? _currentIndex < _triggerIndex ? _first : _currentIndex - _numT : _currentIndex > _triggerIndex ? _first : _currentIndex - 2 * _numT);\n      };\n      var calculateLast = function calculateLast(_currentIndex, _first, _last, _num, _numT, _isCols) {\n        var lastValue = _first + _num + 2 * _numT;\n        if (_currentIndex >= _numT) {\n          lastValue += _numT + 1;\n        }\n        return _this8.getLast(lastValue, _isCols);\n      };\n      var scrollTop = calculateScrollPos(target.scrollTop, contentPos.top);\n      var scrollLeft = calculateScrollPos(target.scrollLeft, contentPos.left);\n      var newFirst = both ? {\n        rows: 0,\n        cols: 0\n      } : 0;\n      var newLast = this.last;\n      var isRangeChanged = false;\n      var newScrollPos = this.lastScrollPos;\n      if (both) {\n        var isScrollDown = this.lastScrollPos.top <= scrollTop;\n        var isScrollRight = this.lastScrollPos.left <= scrollLeft;\n        if (!this.appendOnly || this.appendOnly && (isScrollDown || isScrollRight)) {\n          var currentIndex = {\n            rows: calculateCurrentIndex(scrollTop, this.itemSize[0]),\n            cols: calculateCurrentIndex(scrollLeft, this.itemSize[1])\n          };\n          var triggerIndex = {\n            rows: calculateTriggerIndex(currentIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n            cols: calculateTriggerIndex(currentIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n          };\n          newFirst = {\n            rows: calculateFirst(currentIndex.rows, triggerIndex.rows, this.first.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0], isScrollDown),\n            cols: calculateFirst(currentIndex.cols, triggerIndex.cols, this.first.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], isScrollRight)\n          };\n          newLast = {\n            rows: calculateLast(currentIndex.rows, newFirst.rows, this.last.rows, this.numItemsInViewport.rows, this.d_numToleratedItems[0]),\n            cols: calculateLast(currentIndex.cols, newFirst.cols, this.last.cols, this.numItemsInViewport.cols, this.d_numToleratedItems[1], true)\n          };\n          isRangeChanged = newFirst.rows !== this.first.rows || newLast.rows !== this.last.rows || newFirst.cols !== this.first.cols || newLast.cols !== this.last.cols || this.isRangeChanged;\n          newScrollPos = {\n            top: scrollTop,\n            left: scrollLeft\n          };\n        }\n      } else {\n        var scrollPos = horizontal ? scrollLeft : scrollTop;\n        var isScrollDownOrRight = this.lastScrollPos <= scrollPos;\n        if (!this.appendOnly || this.appendOnly && isScrollDownOrRight) {\n          var _currentIndex2 = calculateCurrentIndex(scrollPos, this.itemSize);\n          var _triggerIndex2 = calculateTriggerIndex(_currentIndex2, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n          newFirst = calculateFirst(_currentIndex2, _triggerIndex2, this.first, this.last, this.numItemsInViewport, this.d_numToleratedItems, isScrollDownOrRight);\n          newLast = calculateLast(_currentIndex2, newFirst, this.last, this.numItemsInViewport, this.d_numToleratedItems);\n          isRangeChanged = newFirst !== this.first || newLast !== this.last || this.isRangeChanged;\n          newScrollPos = scrollPos;\n        }\n      }\n      return {\n        first: newFirst,\n        last: newLast,\n        isRangeChanged: isRangeChanged,\n        scrollPos: newScrollPos\n      };\n    },\n    onScrollChange: function onScrollChange(event) {\n      var _this$onScrollPositio = this.onScrollPositionChange(event),\n        first = _this$onScrollPositio.first,\n        last = _this$onScrollPositio.last,\n        isRangeChanged = _this$onScrollPositio.isRangeChanged,\n        scrollPos = _this$onScrollPositio.scrollPos;\n      if (isRangeChanged) {\n        var newState = {\n          first: first,\n          last: last\n        };\n        this.setContentPosition(newState);\n        this.first = first;\n        this.last = last;\n        this.lastScrollPos = scrollPos;\n        this.$emit('scroll-index-change', newState);\n        if (this.lazy && this.isPageChanged(first)) {\n          var _this$items2, _this$items3;\n          var lazyLoadState = {\n            first: this.step ? Math.min(this.getPageByFirst(first) * this.step, (((_this$items2 = this.items) === null || _this$items2 === void 0 ? void 0 : _this$items2.length) || 0) - this.step) : first,\n            last: Math.min(this.step ? (this.getPageByFirst(first) + 1) * this.step : last, ((_this$items3 = this.items) === null || _this$items3 === void 0 ? void 0 : _this$items3.length) || 0)\n          };\n          var isLazyStateChanged = this.lazyLoadState.first !== lazyLoadState.first || this.lazyLoadState.last !== lazyLoadState.last;\n          isLazyStateChanged && this.$emit('lazy-load', lazyLoadState);\n          this.lazyLoadState = lazyLoadState;\n        }\n      }\n    },\n    onScroll: function onScroll(event) {\n      var _this9 = this;\n      this.$emit('scroll', event);\n      if (this.delay) {\n        if (this.scrollTimeout) {\n          clearTimeout(this.scrollTimeout);\n        }\n        if (this.isPageChanged()) {\n          if (!this.d_loading && this.showLoader) {\n            var _this$onScrollPositio2 = this.onScrollPositionChange(event),\n              isRangeChanged = _this$onScrollPositio2.isRangeChanged;\n            var changed = isRangeChanged || (this.step ? this.isPageChanged() : false);\n            changed && (this.d_loading = true);\n          }\n          this.scrollTimeout = setTimeout(function () {\n            _this9.onScrollChange(event);\n            if (_this9.d_loading && _this9.showLoader && (!_this9.lazy || _this9.loading === undefined)) {\n              _this9.d_loading = false;\n              _this9.page = _this9.getPageByFirst();\n            }\n          }, this.delay);\n        }\n      } else {\n        this.onScrollChange(event);\n      }\n    },\n    onResize: function onResize() {\n      var _this10 = this;\n      if (this.resizeTimeout) {\n        clearTimeout(this.resizeTimeout);\n      }\n      this.resizeTimeout = setTimeout(function () {\n        if (isVisible(_this10.element)) {\n          var both = _this10.isBoth();\n          var vertical = _this10.isVertical();\n          var horizontal = _this10.isHorizontal();\n          var _ref3 = [getWidth(_this10.element), getHeight(_this10.element)],\n            width = _ref3[0],\n            height = _ref3[1];\n          var isDiffWidth = width !== _this10.defaultWidth,\n            isDiffHeight = height !== _this10.defaultHeight;\n          var reinit = both ? isDiffWidth || isDiffHeight : horizontal ? isDiffWidth : vertical ? isDiffHeight : false;\n          if (reinit) {\n            _this10.d_numToleratedItems = _this10.numToleratedItems;\n            _this10.defaultWidth = width;\n            _this10.defaultHeight = height;\n            _this10.defaultContentWidth = getWidth(_this10.content);\n            _this10.defaultContentHeight = getHeight(_this10.content);\n            _this10.init();\n          }\n        }\n      }, this.resizeDelay);\n    },\n    bindResizeListener: function bindResizeListener() {\n      if (!this.resizeListener) {\n        this.resizeListener = this.onResize.bind(this);\n        window.addEventListener('resize', this.resizeListener);\n        window.addEventListener('orientationchange', this.resizeListener);\n      }\n    },\n    unbindResizeListener: function unbindResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        window.removeEventListener('orientationchange', this.resizeListener);\n        this.resizeListener = null;\n      }\n    },\n    getOptions: function getOptions(renderedIndex) {\n      var count = (this.items || []).length;\n      var index = this.isBoth() ? this.first.rows + renderedIndex : this.first + renderedIndex;\n      return {\n        index: index,\n        count: count,\n        first: index === 0,\n        last: index === count - 1,\n        even: index % 2 === 0,\n        odd: index % 2 !== 0\n      };\n    },\n    getLoaderOptions: function getLoaderOptions(index, extOptions) {\n      var count = this.loaderArr.length;\n      return _objectSpread({\n        index: index,\n        count: count,\n        first: index === 0,\n        last: index === count - 1,\n        even: index % 2 === 0,\n        odd: index % 2 !== 0\n      }, extOptions);\n    },\n    getPageByFirst: function getPageByFirst(first) {\n      return Math.floor(((first !== null && first !== void 0 ? first : this.first) + this.d_numToleratedItems * 4) / (this.step || 1));\n    },\n    isPageChanged: function isPageChanged(first) {\n      return this.step ? this.page !== this.getPageByFirst(first !== null && first !== void 0 ? first : this.first) : true;\n    },\n    setContentEl: function setContentEl(el) {\n      this.content = el || this.content || findSingle(this.element, '[data-pc-section=\"content\"]');\n    },\n    elementRef: function elementRef(el) {\n      this.element = el;\n    },\n    contentRef: function contentRef(el) {\n      this.content = el;\n    }\n  },\n  computed: {\n    containerClass: function containerClass() {\n      return ['p-virtualscroller', this[\"class\"], {\n        'p-virtualscroller-inline': this.inline,\n        'p-virtualscroller-both p-both-scroll': this.isBoth(),\n        'p-virtualscroller-horizontal p-horizontal-scroll': this.isHorizontal()\n      }];\n    },\n    contentClass: function contentClass() {\n      return ['p-virtualscroller-content', {\n        'p-virtualscroller-loading': this.d_loading\n      }];\n    },\n    loaderClass: function loaderClass() {\n      return ['p-virtualscroller-loader', {\n        'p-virtualscroller-loader-mask': !this.$slots.loader\n      }];\n    },\n    loadedItems: function loadedItems() {\n      var _this11 = this;\n      if (this.items && !this.d_loading) {\n        if (this.isBoth()) return this.items.slice(this.appendOnly ? 0 : this.first.rows, this.last.rows).map(function (item) {\n          return _this11.columns ? item : item.slice(_this11.appendOnly ? 0 : _this11.first.cols, _this11.last.cols);\n        });else if (this.isHorizontal() && this.columns) return this.items;else return this.items.slice(this.appendOnly ? 0 : this.first, this.last);\n      }\n      return [];\n    },\n    loadedRows: function loadedRows() {\n      return this.d_loading ? this.loaderDisabled ? this.loaderArr : [] : this.loadedItems;\n    },\n    loadedColumns: function loadedColumns() {\n      if (this.columns) {\n        var both = this.isBoth();\n        var horizontal = this.isHorizontal();\n        if (both || horizontal) {\n          return this.d_loading && this.loaderDisabled ? both ? this.loaderArr[0] : this.loaderArr : this.columns.slice(both ? this.first.cols : this.first, both ? this.last.cols : this.last);\n        }\n      }\n      return this.columns;\n    }\n  },\n  components: {\n    SpinnerIcon: SpinnerIcon\n  }\n};\n\nvar _hoisted_1 = [\"tabindex\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_SpinnerIcon = resolveComponent(\"SpinnerIcon\");\n  return !_ctx.disabled ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    ref: $options.elementRef,\n    \"class\": $options.containerClass,\n    tabindex: _ctx.tabindex,\n    style: _ctx.style,\n    onScroll: _cache[0] || (_cache[0] = function () {\n      return $options.onScroll && $options.onScroll.apply($options, arguments);\n    })\n  }, _ctx.ptmi('root')), [renderSlot(_ctx.$slots, \"content\", {\n    styleClass: $options.contentClass,\n    items: $options.loadedItems,\n    getItemOptions: $options.getOptions,\n    loading: $data.d_loading,\n    getLoaderOptions: $options.getLoaderOptions,\n    itemSize: _ctx.itemSize,\n    rows: $options.loadedRows,\n    columns: $options.loadedColumns,\n    contentRef: $options.contentRef,\n    spacerStyle: $data.spacerStyle,\n    contentStyle: $data.contentStyle,\n    vertical: $options.isVertical(),\n    horizontal: $options.isHorizontal(),\n    both: $options.isBoth()\n  }, function () {\n    return [createElementVNode(\"div\", mergeProps({\n      ref: $options.contentRef,\n      \"class\": $options.contentClass,\n      style: $data.contentStyle\n    }, _ctx.ptm('content')), [(openBlock(true), createElementBlock(Fragment, null, renderList($options.loadedItems, function (item, index) {\n      return renderSlot(_ctx.$slots, \"item\", {\n        key: index,\n        item: item,\n        options: $options.getOptions(index)\n      });\n    }), 128))], 16)];\n  }), _ctx.showSpacer ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    \"class\": \"p-virtualscroller-spacer\",\n    style: $data.spacerStyle\n  }, _ctx.ptm('spacer')), null, 16)) : createCommentVNode(\"\", true), !_ctx.loaderDisabled && _ctx.showLoader && $data.d_loading ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 1,\n    \"class\": $options.loaderClass\n  }, _ctx.ptm('loader')), [_ctx.$slots && _ctx.$slots.loader ? (openBlock(true), createElementBlock(Fragment, {\n    key: 0\n  }, renderList($data.loaderArr, function (_, index) {\n    return renderSlot(_ctx.$slots, \"loader\", {\n      key: index,\n      options: $options.getLoaderOptions(index, $options.isBoth() && {\n        numCols: _ctx.d_numItemsInViewport.cols\n      })\n    });\n  }), 128)) : createCommentVNode(\"\", true), renderSlot(_ctx.$slots, \"loadingicon\", {}, function () {\n    return [createVNode(_component_SpinnerIcon, mergeProps({\n      spin: \"\",\n      \"class\": \"p-virtualscroller-loading-icon\"\n    }, _ctx.ptm('loadingIcon')), null, 16)];\n  })], 16)) : createCommentVNode(\"\", true)], 16, _hoisted_1)) : (openBlock(), createElementBlock(Fragment, {\n    key: 1\n  }, [renderSlot(_ctx.$slots, \"default\"), renderSlot(_ctx.$slots, \"content\", {\n    items: _ctx.items,\n    rows: _ctx.items,\n    columns: $options.loadedColumns\n  })], 64));\n}\n\nscript.render = render;\n\nexport { script as default };\n//# sourceMappingURL=index.mjs.map\n",
      "start": 1731941019794,
      "end": 1731941019981,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941019981,
      "end": 1731941019981,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941019982,
      "end": 1731941019982,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941019982,
      "end": 1731941019982,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941019982,
      "end": 1731941019982,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941019982,
      "end": 1731941019982,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941019982,
      "end": 1731941019982,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941019982,
      "end": 1731941019982,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941019982,
      "end": 1731941019982,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941019982,
      "end": 1731941019982,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941019982,
      "end": 1731941019982,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941019982,
      "end": 1731941019982,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941019982,
      "end": 1731941019982,
      "order": "normal"
    },
    {
      "name": "nuxt:chunk-error",
      "start": 1731941019982,
      "end": 1731941019982,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941019982,
      "end": 1731941019982,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941019983,
      "end": 1731941019983,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941019983,
      "end": 1731941019983,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "start": 1731941019983,
      "end": 1731941019983,
      "order": "normal"
    },
    {
      "name": "vite:css-post",
      "start": 1731941019983,
      "end": 1731941019983,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941019983,
      "end": 1731941019983,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941019983,
      "end": 1731941019983,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941019983,
      "end": 1731941019983,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941019983,
      "end": 1731941019983,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941019983,
      "end": 1731941019983,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941019983,
      "end": 1731941019983,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941019983,
      "end": 1731941019983,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941019983,
      "end": 1731941019983,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941019983,
      "end": 1731941019983,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941019983,
      "end": 1731941019983,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941019984,
      "end": 1731941019984,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941019984,
      "end": 1731941019984,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941019984,
      "end": 1731941019984,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941019984,
      "end": 1731941019984,
      "order": "post"
    },
    {
      "name": "nuxt:runtime-paths-dep",
      "start": 1731941019984,
      "end": 1731941019984,
      "order": "post"
    },
    {
      "name": "nuxt:route-injection-plugin",
      "start": 1731941019984,
      "end": 1731941019984,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941019984,
      "end": 1731941019984,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941019984,
      "end": 1731941019984,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941019984,
      "end": 1731941019984,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941019984,
      "end": 1731941019984,
      "order": "normal"
    }
  ]
}
