{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VDialog/VDialog.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\n// Styles\nimport \"./VDialog.css\";\n\n// Components\nimport { VDialogTransition } from \"../transitions/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VOverlay } from \"../VOverlay/index.mjs\";\nimport { makeVOverlayProps } from \"../VOverlay/VOverlay.mjs\"; // Composables\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\"; // Utilities\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue';\nimport { focusableChildren, genericComponent, IN_BROWSER, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVDialogProps = propsFactory({\n  fullscreen: Boolean,\n  retainFocus: {\n    type: Boolean,\n    default: true\n  },\n  scrollable: Boolean,\n  ...makeVOverlayProps({\n    origin: 'center center',\n    scrollStrategy: 'block',\n    transition: {\n      component: VDialogTransition\n    },\n    zIndex: 2400\n  })\n}, 'VDialog');\nexport const VDialog = genericComponent()({\n  name: 'VDialog',\n  props: makeVDialogProps(),\n  emits: {\n    'update:modelValue': value => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, 'modelValue');\n    const {\n      scopeId\n    } = useScopeId();\n    const overlay = ref();\n    function onFocusin(e) {\n      const before = e.relatedTarget;\n      const after = e.target;\n      if (before !== after && overlay.value?.contentEl &&\n      // We're the topmost dialog\n      overlay.value?.globalTop &&\n      // It isn't the document or the dialog body\n      ![document, overlay.value.contentEl].includes(after) &&\n      // It isn't inside the dialog body\n      !overlay.value.contentEl.contains(after)) {\n        const focusable = focusableChildren(overlay.value.contentEl);\n        if (!focusable.length) return;\n        const firstElement = focusable[0];\n        const lastElement = focusable[focusable.length - 1];\n        if (before === firstElement) {\n          lastElement.focus();\n        } else {\n          firstElement.focus();\n        }\n      }\n    }\n    if (IN_BROWSER) {\n      watch(() => isActive.value && props.retainFocus, val => {\n        val ? document.addEventListener('focusin', onFocusin) : document.removeEventListener('focusin', onFocusin);\n      }, {\n        immediate: true\n      });\n    }\n    watch(isActive, async val => {\n      await nextTick();\n      if (val) {\n        overlay.value.contentEl?.focus({\n          preventScroll: true\n        });\n      } else {\n        overlay.value.activatorEl?.focus({\n          preventScroll: true\n        });\n      }\n    });\n    const activatorProps = computed(() => mergeProps({\n      'aria-haspopup': 'dialog',\n      'aria-expanded': String(isActive.value)\n    }, props.activatorProps));\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props);\n      return _createVNode(VOverlay, _mergeProps({\n        \"ref\": overlay,\n        \"class\": ['v-dialog', {\n          'v-dialog--fullscreen': props.fullscreen,\n          'v-dialog--scrollable': props.scrollable\n        }, props.class],\n        \"style\": props.style\n      }, overlayProps, {\n        \"modelValue\": isActive.value,\n        \"onUpdate:modelValue\": $event => isActive.value = $event,\n        \"aria-modal\": \"true\",\n        \"activatorProps\": activatorProps.value,\n        \"role\": \"dialog\"\n      }, scopeId), {\n        activator: slots.activator,\n        default: function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createVNode(VDefaultsProvider, {\n            \"root\": \"VDialog\"\n          }, {\n            default: () => [slots.default?.(...args)]\n          });\n        }\n      });\n    });\n    return forwardRefs({}, overlay);\n  }\n});\n//# sourceMappingURL=VDialog.mjs.map",
      "start": 1731941046864,
      "end": 1731941047451,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941047451,
      "end": 1731941047451,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941047451,
      "end": 1731941047451,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941047452,
      "end": 1731941047452,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941047452,
      "end": 1731941047455,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { mergeProps as _mergeProps, createVNode as _createVNode } from \"vue\";\nimport \"./VDialog.css\";\nimport { VDialogTransition } from \"../transitions/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VOverlay } from \"../VOverlay/index.mjs\";\nimport { makeVOverlayProps } from \"../VOverlay/VOverlay.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { useScopeId } from \"../../composables/scopeId.mjs\";\nimport { computed, mergeProps, nextTick, ref, watch } from \"vue\";\nimport { focusableChildren, genericComponent, IN_BROWSER, propsFactory, useRender } from \"../../util/index.mjs\";\nexport const makeVDialogProps = propsFactory({\n  fullscreen: Boolean,\n  retainFocus: {\n    type: Boolean,\n    default: true\n  },\n  scrollable: Boolean,\n  ...makeVOverlayProps({\n    origin: \"center center\",\n    scrollStrategy: \"block\",\n    transition: {\n      component: VDialogTransition\n    },\n    zIndex: 2400\n  })\n}, \"VDialog\");\nexport const VDialog = genericComponent()({\n  name: \"VDialog\",\n  props: makeVDialogProps(),\n  emits: {\n    \"update:modelValue\": (value) => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const isActive = useProxiedModel(props, \"modelValue\");\n    const {\n      scopeId\n    } = useScopeId();\n    const overlay = ref();\n    function onFocusin(e) {\n      const before = e.relatedTarget;\n      const after = e.target;\n      if (before !== after && overlay.value?.contentEl && // We're the topmost dialog\n      overlay.value?.globalTop && // It isn't the document or the dialog body\n      ![void 0, overlay.value.contentEl].includes(after) && // It isn't inside the dialog body\n      !overlay.value.contentEl.contains(after)) {\n        const focusable = focusableChildren(overlay.value.contentEl);\n        if (!focusable.length)\n          return;\n        const firstElement = focusable[0];\n        const lastElement = focusable[focusable.length - 1];\n        if (before === firstElement) {\n          lastElement.focus();\n        } else {\n          firstElement.focus();\n        }\n      }\n    }\n    if (IN_BROWSER) {\n      watch(() => isActive.value && props.retainFocus, (val) => {\n        val ? (void 0).addEventListener(\"focusin\", onFocusin) : (void 0).removeEventListener(\"focusin\", onFocusin);\n      }, {\n        immediate: true\n      });\n    }\n    watch(isActive, async (val) => {\n      await nextTick();\n      if (val) {\n        overlay.value.contentEl?.focus({\n          preventScroll: true\n        });\n      } else {\n        overlay.value.activatorEl?.focus({\n          preventScroll: true\n        });\n      }\n    });\n    const activatorProps = computed(() => mergeProps({\n      \"aria-haspopup\": \"dialog\",\n      \"aria-expanded\": String(isActive.value)\n    }, props.activatorProps));\n    useRender(() => {\n      const overlayProps = VOverlay.filterProps(props);\n      return _createVNode(VOverlay, _mergeProps({\n        \"ref\": overlay,\n        \"class\": [\"v-dialog\", {\n          \"v-dialog--fullscreen\": props.fullscreen,\n          \"v-dialog--scrollable\": props.scrollable\n        }, props.class],\n        \"style\": props.style\n      }, overlayProps, {\n        \"modelValue\": isActive.value,\n        \"onUpdate:modelValue\": ($event) => isActive.value = $event,\n        \"aria-modal\": \"true\",\n        \"activatorProps\": activatorProps.value,\n        \"role\": \"dialog\"\n      }, scopeId), {\n        activator: slots.activator,\n        default: function() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createVNode(VDefaultsProvider, {\n            \"root\": \"VDialog\"\n          }, {\n            default: () => [slots.default?.(...args)]\n          });\n        }\n      });\n    });\n    return forwardRefs({}, overlay);\n  }\n});\n",
      "start": 1731941047455,
      "end": 1731941047687,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VDialog/VDialog.mjs\"],\n  \"sourcesContent\": [\"import { mergeProps as _mergeProps, createVNode as _createVNode } from \\\"vue\\\";\\n// Styles\\nimport \\\"./VDialog.css\\\";\\n\\n// Components\\nimport { VDialogTransition } from \\\"../transitions/index.mjs\\\";\\nimport { VDefaultsProvider } from \\\"../VDefaultsProvider/index.mjs\\\";\\nimport { VOverlay } from \\\"../VOverlay/index.mjs\\\";\\nimport { makeVOverlayProps } from \\\"../VOverlay/VOverlay.mjs\\\"; // Composables\\nimport { forwardRefs } from \\\"../../composables/forwardRefs.mjs\\\";\\nimport { useProxiedModel } from \\\"../../composables/proxiedModel.mjs\\\";\\nimport { useScopeId } from \\\"../../composables/scopeId.mjs\\\"; // Utilities\\nimport { computed, mergeProps, nextTick, ref, watch } from 'vue';\\nimport { focusableChildren, genericComponent, IN_BROWSER, propsFactory, useRender } from \\\"../../util/index.mjs\\\"; // Types\\nexport const makeVDialogProps = propsFactory({\\n  fullscreen: Boolean,\\n  retainFocus: {\\n    type: Boolean,\\n    default: true\\n  },\\n  scrollable: Boolean,\\n  ...makeVOverlayProps({\\n    origin: 'center center',\\n    scrollStrategy: 'block',\\n    transition: {\\n      component: VDialogTransition\\n    },\\n    zIndex: 2400\\n  })\\n}, 'VDialog');\\nexport const VDialog = genericComponent()({\\n  name: 'VDialog',\\n  props: makeVDialogProps(),\\n  emits: {\\n    'update:modelValue': value => true\\n  },\\n  setup(props, _ref) {\\n    let {\\n      slots\\n    } = _ref;\\n    const isActive = useProxiedModel(props, 'modelValue');\\n    const {\\n      scopeId\\n    } = useScopeId();\\n    const overlay = ref();\\n    function onFocusin(e) {\\n      const before = e.relatedTarget;\\n      const after = e.target;\\n      if (before !== after && overlay.value?.contentEl &&\\n      // We're the topmost dialog\\n      overlay.value?.globalTop &&\\n      // It isn't the document or the dialog body\\n      ![document, overlay.value.contentEl].includes(after) &&\\n      // It isn't inside the dialog body\\n      !overlay.value.contentEl.contains(after)) {\\n        const focusable = focusableChildren(overlay.value.contentEl);\\n        if (!focusable.length) return;\\n        const firstElement = focusable[0];\\n        const lastElement = focusable[focusable.length - 1];\\n        if (before === firstElement) {\\n          lastElement.focus();\\n        } else {\\n          firstElement.focus();\\n        }\\n      }\\n    }\\n    if (IN_BROWSER) {\\n      watch(() => isActive.value && props.retainFocus, val => {\\n        val ? document.addEventListener('focusin', onFocusin) : document.removeEventListener('focusin', onFocusin);\\n      }, {\\n        immediate: true\\n      });\\n    }\\n    watch(isActive, async val => {\\n      await nextTick();\\n      if (val) {\\n        overlay.value.contentEl?.focus({\\n          preventScroll: true\\n        });\\n      } else {\\n        overlay.value.activatorEl?.focus({\\n          preventScroll: true\\n        });\\n      }\\n    });\\n    const activatorProps = computed(() => mergeProps({\\n      'aria-haspopup': 'dialog',\\n      'aria-expanded': String(isActive.value)\\n    }, props.activatorProps));\\n    useRender(() => {\\n      const overlayProps = VOverlay.filterProps(props);\\n      return _createVNode(VOverlay, _mergeProps({\\n        \\\"ref\\\": overlay,\\n        \\\"class\\\": ['v-dialog', {\\n          'v-dialog--fullscreen': props.fullscreen,\\n          'v-dialog--scrollable': props.scrollable\\n        }, props.class],\\n        \\\"style\\\": props.style\\n      }, overlayProps, {\\n        \\\"modelValue\\\": isActive.value,\\n        \\\"onUpdate:modelValue\\\": $event => isActive.value = $event,\\n        \\\"aria-modal\\\": \\\"true\\\",\\n        \\\"activatorProps\\\": activatorProps.value,\\n        \\\"role\\\": \\\"dialog\\\"\\n      }, scopeId), {\\n        activator: slots.activator,\\n        default: function () {\\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n            args[_key] = arguments[_key];\\n          }\\n          return _createVNode(VDefaultsProvider, {\\n            \\\"root\\\": \\\"VDialog\\\"\\n          }, {\\n            default: () => [slots.default?.(...args)]\\n          });\\n        }\\n      });\\n    });\\n    return forwardRefs({}, overlay);\\n  }\\n});\\n//# sourceMappingURL=VDialog.mjs.map\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941047687,
      "end": 1731941047687,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941047688,
      "end": 1731941047688,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941047688,
      "end": 1731941047688,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941047688,
      "end": 1731941047688,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941047688,
      "end": 1731941047688,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1731941047688,
      "end": 1731941047688,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941047688,
      "end": 1731941047688,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941047688,
      "end": 1731941047688,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941047688,
      "end": 1731941047688,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941047688,
      "end": 1731941047688,
      "order": "normal"
    }
  ]
}
