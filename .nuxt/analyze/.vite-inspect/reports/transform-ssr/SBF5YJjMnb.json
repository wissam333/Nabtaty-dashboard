{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VCombobox/VCombobox.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VCombobox.css\";\n\n// Components\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.mjs\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VList, VListItem } from \"../VList/index.mjs\";\nimport { VMenu } from \"../VMenu/index.mjs\";\nimport { makeSelectProps } from \"../VSelect/VSelect.mjs\";\nimport { VTextField } from \"../VTextField/index.mjs\";\nimport { makeVTextFieldProps } from \"../VTextField/VTextField.mjs\";\nimport { VVirtualScroll } from \"../VVirtualScroll/index.mjs\"; // Composables\nimport { useScrolling } from \"../VSelect/useScrolling.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\";\nimport { makeFilterProps, useFilter } from \"../../composables/filter.mjs\";\nimport { useForm } from \"../../composables/form.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { transformItem, useItems } from \"../../composables/list-items.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeTransitionProps } from \"../../composables/transition.mjs\"; // Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue';\nimport { ensureValidVNode, genericComponent, IN_BROWSER, isComposingIgnoreKey, noop, omit, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nfunction highlightResult(text, matches, length) {\n  if (matches == null) return text;\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented');\n  return typeof matches === 'number' && ~matches ? _createVNode(_Fragment, null, [_createVNode(\"span\", {\n    \"class\": \"v-combobox__unmask\"\n  }, [text.substr(0, matches)]), _createVNode(\"span\", {\n    \"class\": \"v-combobox__mask\"\n  }, [text.substr(matches, length)]), _createVNode(\"span\", {\n    \"class\": \"v-combobox__unmask\"\n  }, [text.substr(matches + length)])]) : text;\n}\nexport const makeVComboboxProps = propsFactory({\n  autoSelectFirst: {\n    type: [Boolean, String]\n  },\n  clearOnSelect: {\n    type: Boolean,\n    default: true\n  },\n  delimiters: Array,\n  ...makeFilterProps({\n    filterKeys: ['title']\n  }),\n  ...makeSelectProps({\n    hideNoData: true,\n    returnObject: true\n  }),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox'\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({\n    transition: false\n  })\n}, 'VCombobox');\nexport const VCombobox = genericComponent()({\n  name: 'VCombobox',\n  props: makeVComboboxProps(),\n  emits: {\n    'update:focused': focused => true,\n    'update:modelValue': value => true,\n    'update:search': value => true,\n    'update:menu': value => true\n  },\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const vTextFieldRef = ref();\n    const isFocused = shallowRef(false);\n    const isPristine = shallowRef(true);\n    const listHasFocus = shallowRef(false);\n    const vMenuRef = ref();\n    const vVirtualScrollRef = ref();\n    const _menu = useProxiedModel(props, 'menu');\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren) return;\n        _menu.value = v;\n      }\n    });\n    const selectionIndex = shallowRef(-1);\n    let cleared = false;\n    const color = computed(() => vTextFieldRef.value?.color);\n    const label = computed(() => menu.value ? props.closeText : props.openText);\n    const {\n      items,\n      transformIn,\n      transformOut\n    } = useItems(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(color);\n    const model = useProxiedModel(props, 'modelValue', [], v => transformIn(wrapInArray(v)), v => {\n      const transformed = transformOut(v);\n      return props.multiple ? transformed : transformed[0] ?? null;\n    });\n    const form = useForm();\n    const hasChips = computed(() => !!(props.chips || slots.chip));\n    const hasSelectionSlot = computed(() => hasChips.value || !!slots.selection);\n    const _search = shallowRef(!props.multiple && !hasSelectionSlot.value ? model.value[0]?.title ?? '' : '');\n    const search = computed({\n      get: () => {\n        return _search.value;\n      },\n      set: val => {\n        _search.value = val ?? '';\n        if (!props.multiple && !hasSelectionSlot.value) {\n          model.value = [transformItem(props, val)];\n        }\n        if (val && props.multiple && props.delimiters?.length) {\n          const values = val.split(new RegExp(`(?:${props.delimiters.join('|')})+`));\n          if (values.length > 1) {\n            values.forEach(v => {\n              v = v.trim();\n              if (v) select(transformItem(props, v));\n            });\n            _search.value = '';\n          }\n        }\n        if (!val) selectionIndex.value = -1;\n        isPristine.value = !val;\n      }\n    });\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : typeof props.counterValue === 'number' ? props.counterValue : props.multiple ? model.value.length : search.value.length;\n    });\n    watch(_search, value => {\n      if (cleared) {\n        // wait for clear to finish, VTextField sets _search to null\n        // then search computed triggers and updates _search to ''\n        nextTick(() => cleared = false);\n      } else if (isFocused.value && !menu.value) {\n        menu.value = true;\n      }\n      emit('update:search', value);\n    });\n    watch(model, value => {\n      if (!props.multiple && !hasSelectionSlot.value) {\n        _search.value = value[0]?.title ?? '';\n      }\n    });\n    const {\n      filteredItems,\n      getMatches\n    } = useFilter(props, items, () => isPristine.value ? '' : search.value);\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter(filteredItem => !model.value.some(s => s.value === filteredItem.value));\n      }\n      return filteredItems.value;\n    });\n    const selectedValues = computed(() => model.value.map(selection => selection.value));\n    const highlightFirst = computed(() => {\n      const selectFirst = props.autoSelectFirst === true || props.autoSelectFirst === 'exact' && search.value === displayItems.value[0]?.title;\n      return selectFirst && displayItems.value.length > 0 && !isPristine.value && !listHasFocus.value;\n    });\n    const menuDisabled = computed(() => props.hideNoData && !displayItems.value.length || props.readonly || form?.isReadonly.value);\n    const listRef = ref();\n    const {\n      onListScroll,\n      onListKeydown\n    } = useScrolling(listRef, vTextFieldRef);\n    function onClear(e) {\n      cleared = true;\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n    }\n    function onMousedownControl() {\n      if (menuDisabled.value) return;\n      menu.value = true;\n    }\n    function onMousedownMenuIcon(e) {\n      if (menuDisabled.value) return;\n      if (isFocused.value) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      menu.value = !menu.value;\n    }\n    function onKeydown(e) {\n      if (isComposingIgnoreKey(e) || props.readonly || form?.isReadonly.value) return;\n      const selectionStart = vTextFieldRef.value.selectionStart;\n      const length = model.value.length;\n      if (selectionIndex.value > -1 || ['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)) {\n        e.preventDefault();\n      }\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\n        menu.value = true;\n      }\n      if (['Escape'].includes(e.key)) {\n        menu.value = false;\n      }\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\n        if (highlightFirst.value && ['Enter', 'Tab'].includes(e.key)) {\n          select(filteredItems.value[0]);\n        }\n        isPristine.value = true;\n      }\n      if (e.key === 'ArrowDown' && highlightFirst.value) {\n        listRef.value?.focus('next');\n      }\n      if (e.key === 'Enter' && search.value) {\n        select(transformItem(props, search.value));\n        if (hasSelectionSlot.value) _search.value = '';\n      }\n      if (!props.multiple) return;\n      if (['Backspace', 'Delete'].includes(e.key)) {\n        if (selectionIndex.value < 0) {\n          if (e.key === 'Backspace' && !search.value) {\n            selectionIndex.value = length - 1;\n          }\n          return;\n        }\n        const originalSelectionIndex = selectionIndex.value;\n        const selectedItem = model.value[selectionIndex.value];\n        if (selectedItem && !selectedItem.props.disabled) select(selectedItem, false);\n        selectionIndex.value = originalSelectionIndex >= length - 1 ? length - 2 : originalSelectionIndex;\n      }\n      if (e.key === 'ArrowLeft') {\n        if (selectionIndex.value < 0 && selectionStart > 0) return;\n        const prev = selectionIndex.value > -1 ? selectionIndex.value - 1 : length - 1;\n        if (model.value[prev]) {\n          selectionIndex.value = prev;\n        } else {\n          selectionIndex.value = -1;\n          vTextFieldRef.value.setSelectionRange(search.value.length, search.value.length);\n        }\n      }\n      if (e.key === 'ArrowRight') {\n        if (selectionIndex.value < 0) return;\n        const next = selectionIndex.value + 1;\n        if (model.value[next]) {\n          selectionIndex.value = next;\n        } else {\n          selectionIndex.value = -1;\n          vTextFieldRef.value.setSelectionRange(0, 0);\n        }\n      }\n    }\n    function onAfterLeave() {\n      if (isFocused.value) {\n        isPristine.value = true;\n        vTextFieldRef.value?.focus();\n      }\n    }\n    /** @param set - null means toggle */\n    function select(item) {\n      let set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (item.props.disabled) return;\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value));\n        const add = set == null ? !~index : set;\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value];\n          value.splice(index, 1);\n          model.value = value;\n        } else if (add) {\n          model.value = [...model.value, item];\n        }\n        if (props.clearOnSelect) {\n          search.value = '';\n        }\n      } else {\n        const add = set !== false;\n        model.value = add ? [item] : [];\n        _search.value = add && !hasSelectionSlot.value ? item.title : '';\n\n        // watch for search watcher to trigger\n        nextTick(() => {\n          menu.value = false;\n          isPristine.value = true;\n        });\n      }\n    }\n    function onFocusin(e) {\n      isFocused.value = true;\n      setTimeout(() => {\n        listHasFocus.value = true;\n      });\n    }\n    function onFocusout(e) {\n      listHasFocus.value = false;\n    }\n    function onUpdateModelValue(v) {\n      if (v == null || v === '' && !props.multiple) model.value = [];\n    }\n    watch(isFocused, (val, oldVal) => {\n      if (val || val === oldVal) return;\n      selectionIndex.value = -1;\n      menu.value = false;\n      if (highlightFirst.value && !listHasFocus.value && !model.value.some(_ref2 => {\n        let {\n          value\n        } = _ref2;\n        return value === displayItems.value[0].value;\n      })) {\n        select(displayItems.value[0]);\n        return;\n      }\n      if (search.value) {\n        if (props.multiple) {\n          select(transformItem(props, search.value));\n          return;\n        }\n        if (!hasSelectionSlot.value) return;\n        if (model.value.some(_ref3 => {\n          let {\n            title\n          } = _ref3;\n          return title === search.value;\n        })) {\n          _search.value = '';\n        } else {\n          select(transformItem(props, search.value));\n        }\n      }\n    });\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(item => model.value.some(s => props.valueComparator(s.value, item.value)));\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index);\n        });\n      }\n    });\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return;\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true;\n      }\n    });\n    useRender(() => {\n      const hasList = !!(!props.hideNoData || displayItems.value.length || slots['prepend-item'] || slots['append-item'] || slots['no-data']);\n      const isDirty = model.value.length > 0;\n      const textFieldProps = VTextField.filterProps(props);\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": search.value,\n        \"onUpdate:modelValue\": [$event => search.value = $event, onUpdateModelValue],\n        \"focused\": isFocused.value,\n        \"onUpdate:focused\": $event => isFocused.value = $event,\n        \"validationValue\": model.externalValue,\n        \"counterValue\": counterValue.value,\n        \"dirty\": isDirty,\n        \"class\": ['v-combobox', {\n          'v-combobox--active-menu': menu.value,\n          'v-combobox--chips': !!props.chips,\n          'v-combobox--selection-slot': !!hasSelectionSlot.value,\n          'v-combobox--selecting-index': selectionIndex.value > -1,\n          [`v-combobox--${props.multiple ? 'multiple' : 'single'}`]: true\n        }, props.class],\n        \"style\": props.style,\n        \"readonly\": props.readonly,\n        \"placeholder\": isDirty ? undefined : props.placeholder,\n        \"onClick:clear\": onClear,\n        \"onMousedown:control\": onMousedownControl,\n        \"onKeydown\": onKeydown\n      }), {\n        ...slots,\n        default: () => _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n          \"ref\": vMenuRef,\n          \"modelValue\": menu.value,\n          \"onUpdate:modelValue\": $event => menu.value = $event,\n          \"activator\": \"parent\",\n          \"contentClass\": \"v-combobox__content\",\n          \"disabled\": menuDisabled.value,\n          \"eager\": props.eager,\n          \"maxHeight\": 310,\n          \"openOnClick\": false,\n          \"closeOnContentClick\": false,\n          \"transition\": props.transition,\n          \"onAfterLeave\": onAfterLeave\n        }, props.menuProps), {\n          default: () => [hasList && _createVNode(VList, _mergeProps({\n            \"ref\": listRef,\n            \"selected\": selectedValues.value,\n            \"selectStrategy\": props.multiple ? 'independent' : 'single-independent',\n            \"onMousedown\": e => e.preventDefault(),\n            \"onKeydown\": onListKeydown,\n            \"onFocusin\": onFocusin,\n            \"onFocusout\": onFocusout,\n            \"onScrollPassive\": onListScroll,\n            \"tabindex\": \"-1\",\n            \"aria-live\": \"polite\",\n            \"color\": props.itemColor ?? props.color\n          }, props.listProps), {\n            default: () => [slots['prepend-item']?.(), !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? _createVNode(VListItem, {\n              \"title\": t(props.noDataText)\n            }, null)), _createVNode(VVirtualScroll, {\n              \"ref\": vVirtualScrollRef,\n              \"renderless\": true,\n              \"items\": displayItems.value\n            }, {\n              default: _ref4 => {\n                let {\n                  item,\n                  index,\n                  itemRef\n                } = _ref4;\n                const itemProps = mergeProps(item.props, {\n                  ref: itemRef,\n                  key: index,\n                  active: highlightFirst.value && index === 0 ? true : undefined,\n                  onClick: () => select(item, null)\n                });\n                return slots.item?.({\n                  item,\n                  index,\n                  props: itemProps\n                }) ?? _createVNode(VListItem, _mergeProps(itemProps, {\n                  \"role\": \"option\"\n                }), {\n                  prepend: _ref5 => {\n                    let {\n                      isSelected\n                    } = _ref5;\n                    return _createVNode(_Fragment, null, [props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                      \"key\": item.value,\n                      \"modelValue\": isSelected,\n                      \"ripple\": false,\n                      \"tabindex\": \"-1\"\n                    }, null) : undefined, item.props.prependAvatar && _createVNode(VAvatar, {\n                      \"image\": item.props.prependAvatar\n                    }, null), item.props.prependIcon && _createVNode(VIcon, {\n                      \"icon\": item.props.prependIcon\n                    }, null)]);\n                  },\n                  title: () => {\n                    return isPristine.value ? item.title : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0);\n                  }\n                });\n              }\n            }), slots['append-item']?.()]\n          })]\n        }), model.value.map((item, index) => {\n          function onChipClose(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            select(item, false);\n          }\n          const slotProps = {\n            'onClick:close': onChipClose,\n            onMousedown(e) {\n              e.preventDefault();\n              e.stopPropagation();\n            },\n            modelValue: true,\n            'onUpdate:modelValue': undefined\n          };\n          const hasSlot = hasChips.value ? !!slots.chip : !!slots.selection;\n          const slotContent = hasSlot ? ensureValidVNode(hasChips.value ? slots.chip({\n            item,\n            index,\n            props: slotProps\n          }) : slots.selection({\n            item,\n            index\n          })) : undefined;\n          if (hasSlot && !slotContent) return undefined;\n          return _createVNode(\"div\", {\n            \"key\": item.value,\n            \"class\": ['v-combobox__selection', index === selectionIndex.value && ['v-combobox__selection--selected', textColorClasses.value]],\n            \"style\": index === selectionIndex.value ? textColorStyles.value : {}\n          }, [hasChips.value ? !slots.chip ? _createVNode(VChip, _mergeProps({\n            \"key\": \"chip\",\n            \"closable\": props.closableChips,\n            \"size\": \"small\",\n            \"text\": item.title,\n            \"disabled\": item.props.disabled\n          }, slotProps), null) : _createVNode(VDefaultsProvider, {\n            \"key\": \"chip-defaults\",\n            \"defaults\": {\n              VChip: {\n                closable: props.closableChips,\n                size: 'small',\n                text: item.title\n              }\n            }\n          }, {\n            default: () => [slotContent]\n          }) : slotContent ?? _createVNode(\"span\", {\n            \"class\": \"v-combobox__selection-text\"\n          }, [item.title, props.multiple && index < model.value.length - 1 && _createVNode(\"span\", {\n            \"class\": \"v-combobox__selection-comma\"\n          }, [_createTextVNode(\",\")])])]);\n        })]),\n        'append-inner': function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createVNode(_Fragment, null, [slots['append-inner']?.(...args), (!props.hideNoData || props.items.length) && props.menuIcon ? _createVNode(VIcon, {\n            \"class\": \"v-combobox__menu-icon\",\n            \"icon\": props.menuIcon,\n            \"onMousedown\": onMousedownMenuIcon,\n            \"onClick\": noop,\n            \"aria-label\": t(label.value),\n            \"title\": t(label.value)\n          }, null) : undefined]);\n        }\n      });\n    });\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      selectionIndex,\n      filteredItems,\n      select\n    }, vTextFieldRef);\n  }\n});\n//# sourceMappingURL=VCombobox.mjs.map",
      "start": 1731941046453,
      "end": 1731941046883,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941046883,
      "end": 1731941046883,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941046883,
      "end": 1731941046883,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941046883,
      "end": 1731941046883,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941046883,
      "end": 1731941046883,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941046883,
      "end": 1731941046883,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941046883,
      "end": 1731941046883,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941046884,
      "end": 1731941046884,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1731941046884,
      "end": 1731941046884,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941046884,
      "end": 1731941046884,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941046884,
      "end": 1731941046884,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941046884,
      "end": 1731941046884,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941046884,
      "end": 1731941046884,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941046884,
      "end": 1731941046884,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941046884,
      "end": 1731941046884,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941046884,
      "end": 1731941046884,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941046884,
      "end": 1731941046884,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941046884,
      "end": 1731941046884,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941046884,
      "end": 1731941046884,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941046884,
      "end": 1731941046884,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941046884,
      "end": 1731941046885,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941046885,
      "end": 1731941046890,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\nimport \"./VCombobox.css\";\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.mjs\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VList, VListItem } from \"../VList/index.mjs\";\nimport { VMenu } from \"../VMenu/index.mjs\";\nimport { makeSelectProps } from \"../VSelect/VSelect.mjs\";\nimport { VTextField } from \"../VTextField/index.mjs\";\nimport { makeVTextFieldProps } from \"../VTextField/VTextField.mjs\";\nimport { VVirtualScroll } from \"../VVirtualScroll/index.mjs\";\nimport { useScrolling } from \"../VSelect/useScrolling.mjs\";\nimport { useTextColor } from \"../../composables/color.mjs\";\nimport { makeFilterProps, useFilter } from \"../../composables/filter.mjs\";\nimport { useForm } from \"../../composables/form.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { transformItem, useItems } from \"../../composables/list-items.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeTransitionProps } from \"../../composables/transition.mjs\";\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from \"vue\";\nimport { ensureValidVNode, genericComponent, IN_BROWSER, isComposingIgnoreKey, noop, omit, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\";\nfunction highlightResult(text, matches, length) {\n  if (matches == null)\n    return text;\n  if (Array.isArray(matches))\n    throw new Error(\"Multiple matches is not implemented\");\n  return typeof matches === \"number\" && ~matches ? _createVNode(_Fragment, null, [_createVNode(\"span\", {\n    \"class\": \"v-combobox__unmask\"\n  }, [text.substr(0, matches)]), _createVNode(\"span\", {\n    \"class\": \"v-combobox__mask\"\n  }, [text.substr(matches, length)]), _createVNode(\"span\", {\n    \"class\": \"v-combobox__unmask\"\n  }, [text.substr(matches + length)])]) : text;\n}\nexport const makeVComboboxProps = propsFactory({\n  autoSelectFirst: {\n    type: [Boolean, String]\n  },\n  clearOnSelect: {\n    type: Boolean,\n    default: true\n  },\n  delimiters: Array,\n  ...makeFilterProps({\n    filterKeys: [\"title\"]\n  }),\n  ...makeSelectProps({\n    hideNoData: true,\n    returnObject: true\n  }),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: \"combobox\"\n  }), [\"validationValue\", \"dirty\", \"appendInnerIcon\"]),\n  ...makeTransitionProps({\n    transition: false\n  })\n}, \"VCombobox\");\nexport const VCombobox = genericComponent()({\n  name: \"VCombobox\",\n  props: makeVComboboxProps(),\n  emits: {\n    \"update:focused\": (focused) => true,\n    \"update:modelValue\": (value) => true,\n    \"update:search\": (value) => true,\n    \"update:menu\": (value) => true\n  },\n  setup(props, _ref) {\n    let {\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const vTextFieldRef = ref();\n    const isFocused = shallowRef(false);\n    const isPristine = shallowRef(true);\n    const listHasFocus = shallowRef(false);\n    const vMenuRef = ref();\n    const vVirtualScrollRef = ref();\n    const _menu = useProxiedModel(props, \"menu\");\n    const menu = computed({\n      get: () => _menu.value,\n      set: (v) => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren)\n          return;\n        _menu.value = v;\n      }\n    });\n    const selectionIndex = shallowRef(-1);\n    let cleared = false;\n    const color = computed(() => vTextFieldRef.value?.color);\n    const label = computed(() => menu.value ? props.closeText : props.openText);\n    const {\n      items,\n      transformIn,\n      transformOut\n    } = useItems(props);\n    const {\n      textColorClasses,\n      textColorStyles\n    } = useTextColor(color);\n    const model = useProxiedModel(props, \"modelValue\", [], (v) => transformIn(wrapInArray(v)), (v) => {\n      const transformed = transformOut(v);\n      return props.multiple ? transformed : transformed[0] ?? null;\n    });\n    const form = useForm();\n    const hasChips = computed(() => !!(props.chips || slots.chip));\n    const hasSelectionSlot = computed(() => hasChips.value || !!slots.selection);\n    const _search = shallowRef(!props.multiple && !hasSelectionSlot.value ? model.value[0]?.title ?? \"\" : \"\");\n    const search = computed({\n      get: () => {\n        return _search.value;\n      },\n      set: (val) => {\n        _search.value = val ?? \"\";\n        if (!props.multiple && !hasSelectionSlot.value) {\n          model.value = [transformItem(props, val)];\n        }\n        if (val && props.multiple && props.delimiters?.length) {\n          const values = val.split(new RegExp(`(?:${props.delimiters.join(\"|\")})+`));\n          if (values.length > 1) {\n            values.forEach((v) => {\n              v = v.trim();\n              if (v)\n                select(transformItem(props, v));\n            });\n            _search.value = \"\";\n          }\n        }\n        if (!val)\n          selectionIndex.value = -1;\n        isPristine.value = !val;\n      }\n    });\n    const counterValue = computed(() => {\n      return typeof props.counterValue === \"function\" ? props.counterValue(model.value) : typeof props.counterValue === \"number\" ? props.counterValue : props.multiple ? model.value.length : search.value.length;\n    });\n    watch(_search, (value) => {\n      if (cleared) {\n        nextTick(() => cleared = false);\n      } else if (isFocused.value && !menu.value) {\n        menu.value = true;\n      }\n      emit(\"update:search\", value);\n    });\n    watch(model, (value) => {\n      if (!props.multiple && !hasSelectionSlot.value) {\n        _search.value = value[0]?.title ?? \"\";\n      }\n    });\n    const {\n      filteredItems,\n      getMatches\n    } = useFilter(props, items, () => isPristine.value ? \"\" : search.value);\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return filteredItems.value.filter((filteredItem) => !model.value.some((s) => s.value === filteredItem.value));\n      }\n      return filteredItems.value;\n    });\n    const selectedValues = computed(() => model.value.map((selection) => selection.value));\n    const highlightFirst = computed(() => {\n      const selectFirst = props.autoSelectFirst === true || props.autoSelectFirst === \"exact\" && search.value === displayItems.value[0]?.title;\n      return selectFirst && displayItems.value.length > 0 && !isPristine.value && !listHasFocus.value;\n    });\n    const menuDisabled = computed(() => props.hideNoData && !displayItems.value.length || props.readonly || form?.isReadonly.value);\n    const listRef = ref();\n    const {\n      onListScroll,\n      onListKeydown\n    } = useScrolling(listRef, vTextFieldRef);\n    function onClear(e) {\n      cleared = true;\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n    }\n    function onMousedownControl() {\n      if (menuDisabled.value)\n        return;\n      menu.value = true;\n    }\n    function onMousedownMenuIcon(e) {\n      if (menuDisabled.value)\n        return;\n      if (isFocused.value) {\n        e.preventDefault();\n        e.stopPropagation();\n      }\n      menu.value = !menu.value;\n    }\n    function onKeydown(e) {\n      if (isComposingIgnoreKey(e) || props.readonly || form?.isReadonly.value)\n        return;\n      const selectionStart = vTextFieldRef.value.selectionStart;\n      const length = model.value.length;\n      if (selectionIndex.value > -1 || [\"Enter\", \"ArrowDown\", \"ArrowUp\"].includes(e.key)) {\n        e.preventDefault();\n      }\n      if ([\"Enter\", \"ArrowDown\"].includes(e.key)) {\n        menu.value = true;\n      }\n      if ([\"Escape\"].includes(e.key)) {\n        menu.value = false;\n      }\n      if ([\"Enter\", \"Escape\", \"Tab\"].includes(e.key)) {\n        if (highlightFirst.value && [\"Enter\", \"Tab\"].includes(e.key)) {\n          select(filteredItems.value[0]);\n        }\n        isPristine.value = true;\n      }\n      if (e.key === \"ArrowDown\" && highlightFirst.value) {\n        listRef.value?.focus(\"next\");\n      }\n      if (e.key === \"Enter\" && search.value) {\n        select(transformItem(props, search.value));\n        if (hasSelectionSlot.value)\n          _search.value = \"\";\n      }\n      if (!props.multiple)\n        return;\n      if ([\"Backspace\", \"Delete\"].includes(e.key)) {\n        if (selectionIndex.value < 0) {\n          if (e.key === \"Backspace\" && !search.value) {\n            selectionIndex.value = length - 1;\n          }\n          return;\n        }\n        const originalSelectionIndex = selectionIndex.value;\n        const selectedItem = model.value[selectionIndex.value];\n        if (selectedItem && !selectedItem.props.disabled)\n          select(selectedItem, false);\n        selectionIndex.value = originalSelectionIndex >= length - 1 ? length - 2 : originalSelectionIndex;\n      }\n      if (e.key === \"ArrowLeft\") {\n        if (selectionIndex.value < 0 && selectionStart > 0)\n          return;\n        const prev = selectionIndex.value > -1 ? selectionIndex.value - 1 : length - 1;\n        if (model.value[prev]) {\n          selectionIndex.value = prev;\n        } else {\n          selectionIndex.value = -1;\n          vTextFieldRef.value.setSelectionRange(search.value.length, search.value.length);\n        }\n      }\n      if (e.key === \"ArrowRight\") {\n        if (selectionIndex.value < 0)\n          return;\n        const next = selectionIndex.value + 1;\n        if (model.value[next]) {\n          selectionIndex.value = next;\n        } else {\n          selectionIndex.value = -1;\n          vTextFieldRef.value.setSelectionRange(0, 0);\n        }\n      }\n    }\n    function onAfterLeave() {\n      if (isFocused.value) {\n        isPristine.value = true;\n        vTextFieldRef.value?.focus();\n      }\n    }\n    function select(item) {\n      let set = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n      if (item.props.disabled)\n        return;\n      if (props.multiple) {\n        const index = model.value.findIndex((selection) => props.valueComparator(selection.value, item.value));\n        const add = set == null ? !~index : set;\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value];\n          value.splice(index, 1);\n          model.value = value;\n        } else if (add) {\n          model.value = [...model.value, item];\n        }\n        if (props.clearOnSelect) {\n          search.value = \"\";\n        }\n      } else {\n        const add = set !== false;\n        model.value = add ? [item] : [];\n        _search.value = add && !hasSelectionSlot.value ? item.title : \"\";\n        nextTick(() => {\n          menu.value = false;\n          isPristine.value = true;\n        });\n      }\n    }\n    function onFocusin(e) {\n      isFocused.value = true;\n      setTimeout(() => {\n        listHasFocus.value = true;\n      });\n    }\n    function onFocusout(e) {\n      listHasFocus.value = false;\n    }\n    function onUpdateModelValue(v) {\n      if (v == null || v === \"\" && !props.multiple)\n        model.value = [];\n    }\n    watch(isFocused, (val, oldVal) => {\n      if (val || val === oldVal)\n        return;\n      selectionIndex.value = -1;\n      menu.value = false;\n      if (highlightFirst.value && !listHasFocus.value && !model.value.some((_ref2) => {\n        let {\n          value\n        } = _ref2;\n        return value === displayItems.value[0].value;\n      })) {\n        select(displayItems.value[0]);\n        return;\n      }\n      if (search.value) {\n        if (props.multiple) {\n          select(transformItem(props, search.value));\n          return;\n        }\n        if (!hasSelectionSlot.value)\n          return;\n        if (model.value.some((_ref3) => {\n          let {\n            title\n          } = _ref3;\n          return title === search.value;\n        })) {\n          _search.value = \"\";\n        } else {\n          select(transformItem(props, search.value));\n        }\n      }\n    });\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex((item) => model.value.some((s) => props.valueComparator(s.value, item.value)));\n        IN_BROWSER && (void 0).requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index);\n        });\n      }\n    });\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value)\n        return;\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true;\n      }\n    });\n    useRender(() => {\n      const hasList = !!(!props.hideNoData || displayItems.value.length || slots[\"prepend-item\"] || slots[\"append-item\"] || slots[\"no-data\"]);\n      const isDirty = model.value.length > 0;\n      const textFieldProps = VTextField.filterProps(props);\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": search.value,\n        \"onUpdate:modelValue\": [($event) => search.value = $event, onUpdateModelValue],\n        \"focused\": isFocused.value,\n        \"onUpdate:focused\": ($event) => isFocused.value = $event,\n        \"validationValue\": model.externalValue,\n        \"counterValue\": counterValue.value,\n        \"dirty\": isDirty,\n        \"class\": [\"v-combobox\", {\n          \"v-combobox--active-menu\": menu.value,\n          \"v-combobox--chips\": !!props.chips,\n          \"v-combobox--selection-slot\": !!hasSelectionSlot.value,\n          \"v-combobox--selecting-index\": selectionIndex.value > -1,\n          [`v-combobox--${props.multiple ? \"multiple\" : \"single\"}`]: true\n        }, props.class],\n        \"style\": props.style,\n        \"readonly\": props.readonly,\n        \"placeholder\": isDirty ? void 0 : props.placeholder,\n        \"onClick:clear\": onClear,\n        \"onMousedown:control\": onMousedownControl,\n        \"onKeydown\": onKeydown\n      }), {\n        ...slots,\n        default: () => _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n          \"ref\": vMenuRef,\n          \"modelValue\": menu.value,\n          \"onUpdate:modelValue\": ($event) => menu.value = $event,\n          \"activator\": \"parent\",\n          \"contentClass\": \"v-combobox__content\",\n          \"disabled\": menuDisabled.value,\n          \"eager\": props.eager,\n          \"maxHeight\": 310,\n          \"openOnClick\": false,\n          \"closeOnContentClick\": false,\n          \"transition\": props.transition,\n          \"onAfterLeave\": onAfterLeave\n        }, props.menuProps), {\n          default: () => [hasList && _createVNode(VList, _mergeProps({\n            \"ref\": listRef,\n            \"selected\": selectedValues.value,\n            \"selectStrategy\": props.multiple ? \"independent\" : \"single-independent\",\n            \"onMousedown\": (e) => e.preventDefault(),\n            \"onKeydown\": onListKeydown,\n            \"onFocusin\": onFocusin,\n            \"onFocusout\": onFocusout,\n            \"onScrollPassive\": onListScroll,\n            \"tabindex\": \"-1\",\n            \"aria-live\": \"polite\",\n            \"color\": props.itemColor ?? props.color\n          }, props.listProps), {\n            default: () => [slots[\"prepend-item\"]?.(), !displayItems.value.length && !props.hideNoData && (slots[\"no-data\"]?.() ?? _createVNode(VListItem, {\n              \"title\": t(props.noDataText)\n            }, null)), _createVNode(VVirtualScroll, {\n              \"ref\": vVirtualScrollRef,\n              \"renderless\": true,\n              \"items\": displayItems.value\n            }, {\n              default: (_ref4) => {\n                let {\n                  item,\n                  index,\n                  itemRef\n                } = _ref4;\n                const itemProps = mergeProps(item.props, {\n                  ref: itemRef,\n                  key: index,\n                  active: highlightFirst.value && index === 0 ? true : void 0,\n                  onClick: () => select(item, null)\n                });\n                return slots.item?.({\n                  item,\n                  index,\n                  props: itemProps\n                }) ?? _createVNode(VListItem, _mergeProps(itemProps, {\n                  \"role\": \"option\"\n                }), {\n                  prepend: (_ref5) => {\n                    let {\n                      isSelected\n                    } = _ref5;\n                    return _createVNode(_Fragment, null, [props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                      \"key\": item.value,\n                      \"modelValue\": isSelected,\n                      \"ripple\": false,\n                      \"tabindex\": \"-1\"\n                    }, null) : void 0, item.props.prependAvatar && _createVNode(VAvatar, {\n                      \"image\": item.props.prependAvatar\n                    }, null), item.props.prependIcon && _createVNode(VIcon, {\n                      \"icon\": item.props.prependIcon\n                    }, null)]);\n                  },\n                  title: () => {\n                    return isPristine.value ? item.title : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0);\n                  }\n                });\n              }\n            }), slots[\"append-item\"]?.()]\n          })]\n        }), model.value.map((item, index) => {\n          function onChipClose(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            select(item, false);\n          }\n          const slotProps = {\n            \"onClick:close\": onChipClose,\n            onMousedown(e) {\n              e.preventDefault();\n              e.stopPropagation();\n            },\n            modelValue: true,\n            \"onUpdate:modelValue\": void 0\n          };\n          const hasSlot = hasChips.value ? !!slots.chip : !!slots.selection;\n          const slotContent = hasSlot ? ensureValidVNode(hasChips.value ? slots.chip({\n            item,\n            index,\n            props: slotProps\n          }) : slots.selection({\n            item,\n            index\n          })) : void 0;\n          if (hasSlot && !slotContent)\n            return void 0;\n          return _createVNode(\"div\", {\n            \"key\": item.value,\n            \"class\": [\"v-combobox__selection\", index === selectionIndex.value && [\"v-combobox__selection--selected\", textColorClasses.value]],\n            \"style\": index === selectionIndex.value ? textColorStyles.value : {}\n          }, [hasChips.value ? !slots.chip ? _createVNode(VChip, _mergeProps({\n            \"key\": \"chip\",\n            \"closable\": props.closableChips,\n            \"size\": \"small\",\n            \"text\": item.title,\n            \"disabled\": item.props.disabled\n          }, slotProps), null) : _createVNode(VDefaultsProvider, {\n            \"key\": \"chip-defaults\",\n            \"defaults\": {\n              VChip: {\n                closable: props.closableChips,\n                size: \"small\",\n                text: item.title\n              }\n            }\n          }, {\n            default: () => [slotContent]\n          }) : slotContent ?? _createVNode(\"span\", {\n            \"class\": \"v-combobox__selection-text\"\n          }, [item.title, props.multiple && index < model.value.length - 1 && _createVNode(\"span\", {\n            \"class\": \"v-combobox__selection-comma\"\n          }, [_createTextVNode(\",\")])])]);\n        })]),\n        \"append-inner\": function() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createVNode(_Fragment, null, [slots[\"append-inner\"]?.(...args), (!props.hideNoData || props.items.length) && props.menuIcon ? _createVNode(VIcon, {\n            \"class\": \"v-combobox__menu-icon\",\n            \"icon\": props.menuIcon,\n            \"onMousedown\": onMousedownMenuIcon,\n            \"onClick\": noop,\n            \"aria-label\": t(label.value),\n            \"title\": t(label.value)\n          }, null) : void 0]);\n        }\n      });\n    });\n    return forwardRefs({\n      isFocused,\n      isPristine,\n      menu,\n      search,\n      selectionIndex,\n      filteredItems,\n      select\n    }, vTextFieldRef);\n  }\n});\n",
      "start": 1731941046890,
      "end": 1731941047323,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VCombobox/VCombobox.mjs\"],\n  \"sourcesContent\": [\"import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \\\"vue\\\";\\n// Styles\\nimport \\\"./VCombobox.css\\\";\\n\\n// Components\\nimport { VAvatar } from \\\"../VAvatar/index.mjs\\\";\\nimport { VCheckboxBtn } from \\\"../VCheckbox/index.mjs\\\";\\nimport { VChip } from \\\"../VChip/index.mjs\\\";\\nimport { VDefaultsProvider } from \\\"../VDefaultsProvider/index.mjs\\\";\\nimport { VIcon } from \\\"../VIcon/index.mjs\\\";\\nimport { VList, VListItem } from \\\"../VList/index.mjs\\\";\\nimport { VMenu } from \\\"../VMenu/index.mjs\\\";\\nimport { makeSelectProps } from \\\"../VSelect/VSelect.mjs\\\";\\nimport { VTextField } from \\\"../VTextField/index.mjs\\\";\\nimport { makeVTextFieldProps } from \\\"../VTextField/VTextField.mjs\\\";\\nimport { VVirtualScroll } from \\\"../VVirtualScroll/index.mjs\\\"; // Composables\\nimport { useScrolling } from \\\"../VSelect/useScrolling.mjs\\\";\\nimport { useTextColor } from \\\"../../composables/color.mjs\\\";\\nimport { makeFilterProps, useFilter } from \\\"../../composables/filter.mjs\\\";\\nimport { useForm } from \\\"../../composables/form.mjs\\\";\\nimport { forwardRefs } from \\\"../../composables/forwardRefs.mjs\\\";\\nimport { transformItem, useItems } from \\\"../../composables/list-items.mjs\\\";\\nimport { useLocale } from \\\"../../composables/locale.mjs\\\";\\nimport { useProxiedModel } from \\\"../../composables/proxiedModel.mjs\\\";\\nimport { makeTransitionProps } from \\\"../../composables/transition.mjs\\\"; // Utilities\\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue';\\nimport { ensureValidVNode, genericComponent, IN_BROWSER, isComposingIgnoreKey, noop, omit, propsFactory, useRender, wrapInArray } from \\\"../../util/index.mjs\\\"; // Types\\nfunction highlightResult(text, matches, length) {\\n  if (matches == null) return text;\\n  if (Array.isArray(matches)) throw new Error('Multiple matches is not implemented');\\n  return typeof matches === 'number' && ~matches ? _createVNode(_Fragment, null, [_createVNode(\\\"span\\\", {\\n    \\\"class\\\": \\\"v-combobox__unmask\\\"\\n  }, [text.substr(0, matches)]), _createVNode(\\\"span\\\", {\\n    \\\"class\\\": \\\"v-combobox__mask\\\"\\n  }, [text.substr(matches, length)]), _createVNode(\\\"span\\\", {\\n    \\\"class\\\": \\\"v-combobox__unmask\\\"\\n  }, [text.substr(matches + length)])]) : text;\\n}\\nexport const makeVComboboxProps = propsFactory({\\n  autoSelectFirst: {\\n    type: [Boolean, String]\\n  },\\n  clearOnSelect: {\\n    type: Boolean,\\n    default: true\\n  },\\n  delimiters: Array,\\n  ...makeFilterProps({\\n    filterKeys: ['title']\\n  }),\\n  ...makeSelectProps({\\n    hideNoData: true,\\n    returnObject: true\\n  }),\\n  ...omit(makeVTextFieldProps({\\n    modelValue: null,\\n    role: 'combobox'\\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\\n  ...makeTransitionProps({\\n    transition: false\\n  })\\n}, 'VCombobox');\\nexport const VCombobox = genericComponent()({\\n  name: 'VCombobox',\\n  props: makeVComboboxProps(),\\n  emits: {\\n    'update:focused': focused => true,\\n    'update:modelValue': value => true,\\n    'update:search': value => true,\\n    'update:menu': value => true\\n  },\\n  setup(props, _ref) {\\n    let {\\n      emit,\\n      slots\\n    } = _ref;\\n    const {\\n      t\\n    } = useLocale();\\n    const vTextFieldRef = ref();\\n    const isFocused = shallowRef(false);\\n    const isPristine = shallowRef(true);\\n    const listHasFocus = shallowRef(false);\\n    const vMenuRef = ref();\\n    const vVirtualScrollRef = ref();\\n    const _menu = useProxiedModel(props, 'menu');\\n    const menu = computed({\\n      get: () => _menu.value,\\n      set: v => {\\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren) return;\\n        _menu.value = v;\\n      }\\n    });\\n    const selectionIndex = shallowRef(-1);\\n    let cleared = false;\\n    const color = computed(() => vTextFieldRef.value?.color);\\n    const label = computed(() => menu.value ? props.closeText : props.openText);\\n    const {\\n      items,\\n      transformIn,\\n      transformOut\\n    } = useItems(props);\\n    const {\\n      textColorClasses,\\n      textColorStyles\\n    } = useTextColor(color);\\n    const model = useProxiedModel(props, 'modelValue', [], v => transformIn(wrapInArray(v)), v => {\\n      const transformed = transformOut(v);\\n      return props.multiple ? transformed : transformed[0] ?? null;\\n    });\\n    const form = useForm();\\n    const hasChips = computed(() => !!(props.chips || slots.chip));\\n    const hasSelectionSlot = computed(() => hasChips.value || !!slots.selection);\\n    const _search = shallowRef(!props.multiple && !hasSelectionSlot.value ? model.value[0]?.title ?? '' : '');\\n    const search = computed({\\n      get: () => {\\n        return _search.value;\\n      },\\n      set: val => {\\n        _search.value = val ?? '';\\n        if (!props.multiple && !hasSelectionSlot.value) {\\n          model.value = [transformItem(props, val)];\\n        }\\n        if (val && props.multiple && props.delimiters?.length) {\\n          const values = val.split(new RegExp(`(?:${props.delimiters.join('|')})+`));\\n          if (values.length > 1) {\\n            values.forEach(v => {\\n              v = v.trim();\\n              if (v) select(transformItem(props, v));\\n            });\\n            _search.value = '';\\n          }\\n        }\\n        if (!val) selectionIndex.value = -1;\\n        isPristine.value = !val;\\n      }\\n    });\\n    const counterValue = computed(() => {\\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : typeof props.counterValue === 'number' ? props.counterValue : props.multiple ? model.value.length : search.value.length;\\n    });\\n    watch(_search, value => {\\n      if (cleared) {\\n        // wait for clear to finish, VTextField sets _search to null\\n        // then search computed triggers and updates _search to ''\\n        nextTick(() => cleared = false);\\n      } else if (isFocused.value && !menu.value) {\\n        menu.value = true;\\n      }\\n      emit('update:search', value);\\n    });\\n    watch(model, value => {\\n      if (!props.multiple && !hasSelectionSlot.value) {\\n        _search.value = value[0]?.title ?? '';\\n      }\\n    });\\n    const {\\n      filteredItems,\\n      getMatches\\n    } = useFilter(props, items, () => isPristine.value ? '' : search.value);\\n    const displayItems = computed(() => {\\n      if (props.hideSelected) {\\n        return filteredItems.value.filter(filteredItem => !model.value.some(s => s.value === filteredItem.value));\\n      }\\n      return filteredItems.value;\\n    });\\n    const selectedValues = computed(() => model.value.map(selection => selection.value));\\n    const highlightFirst = computed(() => {\\n      const selectFirst = props.autoSelectFirst === true || props.autoSelectFirst === 'exact' && search.value === displayItems.value[0]?.title;\\n      return selectFirst && displayItems.value.length > 0 && !isPristine.value && !listHasFocus.value;\\n    });\\n    const menuDisabled = computed(() => props.hideNoData && !displayItems.value.length || props.readonly || form?.isReadonly.value);\\n    const listRef = ref();\\n    const {\\n      onListScroll,\\n      onListKeydown\\n    } = useScrolling(listRef, vTextFieldRef);\\n    function onClear(e) {\\n      cleared = true;\\n      if (props.openOnClear) {\\n        menu.value = true;\\n      }\\n    }\\n    function onMousedownControl() {\\n      if (menuDisabled.value) return;\\n      menu.value = true;\\n    }\\n    function onMousedownMenuIcon(e) {\\n      if (menuDisabled.value) return;\\n      if (isFocused.value) {\\n        e.preventDefault();\\n        e.stopPropagation();\\n      }\\n      menu.value = !menu.value;\\n    }\\n    function onKeydown(e) {\\n      if (isComposingIgnoreKey(e) || props.readonly || form?.isReadonly.value) return;\\n      const selectionStart = vTextFieldRef.value.selectionStart;\\n      const length = model.value.length;\\n      if (selectionIndex.value > -1 || ['Enter', 'ArrowDown', 'ArrowUp'].includes(e.key)) {\\n        e.preventDefault();\\n      }\\n      if (['Enter', 'ArrowDown'].includes(e.key)) {\\n        menu.value = true;\\n      }\\n      if (['Escape'].includes(e.key)) {\\n        menu.value = false;\\n      }\\n      if (['Enter', 'Escape', 'Tab'].includes(e.key)) {\\n        if (highlightFirst.value && ['Enter', 'Tab'].includes(e.key)) {\\n          select(filteredItems.value[0]);\\n        }\\n        isPristine.value = true;\\n      }\\n      if (e.key === 'ArrowDown' && highlightFirst.value) {\\n        listRef.value?.focus('next');\\n      }\\n      if (e.key === 'Enter' && search.value) {\\n        select(transformItem(props, search.value));\\n        if (hasSelectionSlot.value) _search.value = '';\\n      }\\n      if (!props.multiple) return;\\n      if (['Backspace', 'Delete'].includes(e.key)) {\\n        if (selectionIndex.value < 0) {\\n          if (e.key === 'Backspace' && !search.value) {\\n            selectionIndex.value = length - 1;\\n          }\\n          return;\\n        }\\n        const originalSelectionIndex = selectionIndex.value;\\n        const selectedItem = model.value[selectionIndex.value];\\n        if (selectedItem && !selectedItem.props.disabled) select(selectedItem, false);\\n        selectionIndex.value = originalSelectionIndex >= length - 1 ? length - 2 : originalSelectionIndex;\\n      }\\n      if (e.key === 'ArrowLeft') {\\n        if (selectionIndex.value < 0 && selectionStart > 0) return;\\n        const prev = selectionIndex.value > -1 ? selectionIndex.value - 1 : length - 1;\\n        if (model.value[prev]) {\\n          selectionIndex.value = prev;\\n        } else {\\n          selectionIndex.value = -1;\\n          vTextFieldRef.value.setSelectionRange(search.value.length, search.value.length);\\n        }\\n      }\\n      if (e.key === 'ArrowRight') {\\n        if (selectionIndex.value < 0) return;\\n        const next = selectionIndex.value + 1;\\n        if (model.value[next]) {\\n          selectionIndex.value = next;\\n        } else {\\n          selectionIndex.value = -1;\\n          vTextFieldRef.value.setSelectionRange(0, 0);\\n        }\\n      }\\n    }\\n    function onAfterLeave() {\\n      if (isFocused.value) {\\n        isPristine.value = true;\\n        vTextFieldRef.value?.focus();\\n      }\\n    }\\n    /** @param set - null means toggle */\\n    function select(item) {\\n      let set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\\n      if (item.props.disabled) return;\\n      if (props.multiple) {\\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value));\\n        const add = set == null ? !~index : set;\\n        if (~index) {\\n          const value = add ? [...model.value, item] : [...model.value];\\n          value.splice(index, 1);\\n          model.value = value;\\n        } else if (add) {\\n          model.value = [...model.value, item];\\n        }\\n        if (props.clearOnSelect) {\\n          search.value = '';\\n        }\\n      } else {\\n        const add = set !== false;\\n        model.value = add ? [item] : [];\\n        _search.value = add && !hasSelectionSlot.value ? item.title : '';\\n\\n        // watch for search watcher to trigger\\n        nextTick(() => {\\n          menu.value = false;\\n          isPristine.value = true;\\n        });\\n      }\\n    }\\n    function onFocusin(e) {\\n      isFocused.value = true;\\n      setTimeout(() => {\\n        listHasFocus.value = true;\\n      });\\n    }\\n    function onFocusout(e) {\\n      listHasFocus.value = false;\\n    }\\n    function onUpdateModelValue(v) {\\n      if (v == null || v === '' && !props.multiple) model.value = [];\\n    }\\n    watch(isFocused, (val, oldVal) => {\\n      if (val || val === oldVal) return;\\n      selectionIndex.value = -1;\\n      menu.value = false;\\n      if (highlightFirst.value && !listHasFocus.value && !model.value.some(_ref2 => {\\n        let {\\n          value\\n        } = _ref2;\\n        return value === displayItems.value[0].value;\\n      })) {\\n        select(displayItems.value[0]);\\n        return;\\n      }\\n      if (search.value) {\\n        if (props.multiple) {\\n          select(transformItem(props, search.value));\\n          return;\\n        }\\n        if (!hasSelectionSlot.value) return;\\n        if (model.value.some(_ref3 => {\\n          let {\\n            title\\n          } = _ref3;\\n          return title === search.value;\\n        })) {\\n          _search.value = '';\\n        } else {\\n          select(transformItem(props, search.value));\\n        }\\n      }\\n    });\\n    watch(menu, () => {\\n      if (!props.hideSelected && menu.value && model.value.length) {\\n        const index = displayItems.value.findIndex(item => model.value.some(s => props.valueComparator(s.value, item.value)));\\n        IN_BROWSER && window.requestAnimationFrame(() => {\\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index);\\n        });\\n      }\\n    });\\n    watch(() => props.items, (newVal, oldVal) => {\\n      if (menu.value) return;\\n      if (isFocused.value && !oldVal.length && newVal.length) {\\n        menu.value = true;\\n      }\\n    });\\n    useRender(() => {\\n      const hasList = !!(!props.hideNoData || displayItems.value.length || slots['prepend-item'] || slots['append-item'] || slots['no-data']);\\n      const isDirty = model.value.length > 0;\\n      const textFieldProps = VTextField.filterProps(props);\\n      return _createVNode(VTextField, _mergeProps({\\n        \\\"ref\\\": vTextFieldRef\\n      }, textFieldProps, {\\n        \\\"modelValue\\\": search.value,\\n        \\\"onUpdate:modelValue\\\": [$event => search.value = $event, onUpdateModelValue],\\n        \\\"focused\\\": isFocused.value,\\n        \\\"onUpdate:focused\\\": $event => isFocused.value = $event,\\n        \\\"validationValue\\\": model.externalValue,\\n        \\\"counterValue\\\": counterValue.value,\\n        \\\"dirty\\\": isDirty,\\n        \\\"class\\\": ['v-combobox', {\\n          'v-combobox--active-menu': menu.value,\\n          'v-combobox--chips': !!props.chips,\\n          'v-combobox--selection-slot': !!hasSelectionSlot.value,\\n          'v-combobox--selecting-index': selectionIndex.value > -1,\\n          [`v-combobox--${props.multiple ? 'multiple' : 'single'}`]: true\\n        }, props.class],\\n        \\\"style\\\": props.style,\\n        \\\"readonly\\\": props.readonly,\\n        \\\"placeholder\\\": isDirty ? undefined : props.placeholder,\\n        \\\"onClick:clear\\\": onClear,\\n        \\\"onMousedown:control\\\": onMousedownControl,\\n        \\\"onKeydown\\\": onKeydown\\n      }), {\\n        ...slots,\\n        default: () => _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\\n          \\\"ref\\\": vMenuRef,\\n          \\\"modelValue\\\": menu.value,\\n          \\\"onUpdate:modelValue\\\": $event => menu.value = $event,\\n          \\\"activator\\\": \\\"parent\\\",\\n          \\\"contentClass\\\": \\\"v-combobox__content\\\",\\n          \\\"disabled\\\": menuDisabled.value,\\n          \\\"eager\\\": props.eager,\\n          \\\"maxHeight\\\": 310,\\n          \\\"openOnClick\\\": false,\\n          \\\"closeOnContentClick\\\": false,\\n          \\\"transition\\\": props.transition,\\n          \\\"onAfterLeave\\\": onAfterLeave\\n        }, props.menuProps), {\\n          default: () => [hasList && _createVNode(VList, _mergeProps({\\n            \\\"ref\\\": listRef,\\n            \\\"selected\\\": selectedValues.value,\\n            \\\"selectStrategy\\\": props.multiple ? 'independent' : 'single-independent',\\n            \\\"onMousedown\\\": e => e.preventDefault(),\\n            \\\"onKeydown\\\": onListKeydown,\\n            \\\"onFocusin\\\": onFocusin,\\n            \\\"onFocusout\\\": onFocusout,\\n            \\\"onScrollPassive\\\": onListScroll,\\n            \\\"tabindex\\\": \\\"-1\\\",\\n            \\\"aria-live\\\": \\\"polite\\\",\\n            \\\"color\\\": props.itemColor ?? props.color\\n          }, props.listProps), {\\n            default: () => [slots['prepend-item']?.(), !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? _createVNode(VListItem, {\\n              \\\"title\\\": t(props.noDataText)\\n            }, null)), _createVNode(VVirtualScroll, {\\n              \\\"ref\\\": vVirtualScrollRef,\\n              \\\"renderless\\\": true,\\n              \\\"items\\\": displayItems.value\\n            }, {\\n              default: _ref4 => {\\n                let {\\n                  item,\\n                  index,\\n                  itemRef\\n                } = _ref4;\\n                const itemProps = mergeProps(item.props, {\\n                  ref: itemRef,\\n                  key: index,\\n                  active: highlightFirst.value && index === 0 ? true : undefined,\\n                  onClick: () => select(item, null)\\n                });\\n                return slots.item?.({\\n                  item,\\n                  index,\\n                  props: itemProps\\n                }) ?? _createVNode(VListItem, _mergeProps(itemProps, {\\n                  \\\"role\\\": \\\"option\\\"\\n                }), {\\n                  prepend: _ref5 => {\\n                    let {\\n                      isSelected\\n                    } = _ref5;\\n                    return _createVNode(_Fragment, null, [props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\\n                      \\\"key\\\": item.value,\\n                      \\\"modelValue\\\": isSelected,\\n                      \\\"ripple\\\": false,\\n                      \\\"tabindex\\\": \\\"-1\\\"\\n                    }, null) : undefined, item.props.prependAvatar && _createVNode(VAvatar, {\\n                      \\\"image\\\": item.props.prependAvatar\\n                    }, null), item.props.prependIcon && _createVNode(VIcon, {\\n                      \\\"icon\\\": item.props.prependIcon\\n                    }, null)]);\\n                  },\\n                  title: () => {\\n                    return isPristine.value ? item.title : highlightResult(item.title, getMatches(item)?.title, search.value?.length ?? 0);\\n                  }\\n                });\\n              }\\n            }), slots['append-item']?.()]\\n          })]\\n        }), model.value.map((item, index) => {\\n          function onChipClose(e) {\\n            e.stopPropagation();\\n            e.preventDefault();\\n            select(item, false);\\n          }\\n          const slotProps = {\\n            'onClick:close': onChipClose,\\n            onMousedown(e) {\\n              e.preventDefault();\\n              e.stopPropagation();\\n            },\\n            modelValue: true,\\n            'onUpdate:modelValue': undefined\\n          };\\n          const hasSlot = hasChips.value ? !!slots.chip : !!slots.selection;\\n          const slotContent = hasSlot ? ensureValidVNode(hasChips.value ? slots.chip({\\n            item,\\n            index,\\n            props: slotProps\\n          }) : slots.selection({\\n            item,\\n            index\\n          })) : undefined;\\n          if (hasSlot && !slotContent) return undefined;\\n          return _createVNode(\\\"div\\\", {\\n            \\\"key\\\": item.value,\\n            \\\"class\\\": ['v-combobox__selection', index === selectionIndex.value && ['v-combobox__selection--selected', textColorClasses.value]],\\n            \\\"style\\\": index === selectionIndex.value ? textColorStyles.value : {}\\n          }, [hasChips.value ? !slots.chip ? _createVNode(VChip, _mergeProps({\\n            \\\"key\\\": \\\"chip\\\",\\n            \\\"closable\\\": props.closableChips,\\n            \\\"size\\\": \\\"small\\\",\\n            \\\"text\\\": item.title,\\n            \\\"disabled\\\": item.props.disabled\\n          }, slotProps), null) : _createVNode(VDefaultsProvider, {\\n            \\\"key\\\": \\\"chip-defaults\\\",\\n            \\\"defaults\\\": {\\n              VChip: {\\n                closable: props.closableChips,\\n                size: 'small',\\n                text: item.title\\n              }\\n            }\\n          }, {\\n            default: () => [slotContent]\\n          }) : slotContent ?? _createVNode(\\\"span\\\", {\\n            \\\"class\\\": \\\"v-combobox__selection-text\\\"\\n          }, [item.title, props.multiple && index < model.value.length - 1 && _createVNode(\\\"span\\\", {\\n            \\\"class\\\": \\\"v-combobox__selection-comma\\\"\\n          }, [_createTextVNode(\\\",\\\")])])]);\\n        })]),\\n        'append-inner': function () {\\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n            args[_key] = arguments[_key];\\n          }\\n          return _createVNode(_Fragment, null, [slots['append-inner']?.(...args), (!props.hideNoData || props.items.length) && props.menuIcon ? _createVNode(VIcon, {\\n            \\\"class\\\": \\\"v-combobox__menu-icon\\\",\\n            \\\"icon\\\": props.menuIcon,\\n            \\\"onMousedown\\\": onMousedownMenuIcon,\\n            \\\"onClick\\\": noop,\\n            \\\"aria-label\\\": t(label.value),\\n            \\\"title\\\": t(label.value)\\n          }, null) : undefined]);\\n        }\\n      });\\n    });\\n    return forwardRefs({\\n      isFocused,\\n      isPristine,\\n      menu,\\n      search,\\n      selectionIndex,\\n      filteredItems,\\n      select\\n    }, vTextFieldRef);\\n  }\\n});\\n//# sourceMappingURL=VCombobox.mjs.map\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1731941047323,
      "end": 1731941047323,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941047323,
      "end": 1731941047323,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941047323,
      "end": 1731941047323,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941047323,
      "end": 1731941047323,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941047323,
      "end": 1731941047323,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941047324,
      "end": 1731941047324,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941047324,
      "end": 1731941047324,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941047324,
      "end": 1731941047324,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941047324,
      "end": 1731941047324,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941047324,
      "end": 1731941047324,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941047324,
      "end": 1731941047324,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941047324,
      "end": 1731941047324,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941047324,
      "end": 1731941047324,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941047324,
      "end": 1731941047324,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941047324,
      "end": 1731941047324,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941047324,
      "end": 1731941047324,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941047324,
      "end": 1731941047324,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941047324,
      "end": 1731941047325,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941047324,
      "end": 1731941047325,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941047325,
      "end": 1731941047325,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941047325,
      "end": 1731941047325,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941047325,
      "end": 1731941047325,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941047325,
      "end": 1731941047325,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1731941047325,
      "end": 1731941047325,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941047325,
      "end": 1731941047325,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941047327,
      "end": 1731941047328,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941047328,
      "end": 1731941047328,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941047328,
      "end": 1731941047328,
      "order": "normal"
    }
  ]
}
