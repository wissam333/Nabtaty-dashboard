{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VFileInput/VFileInput.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { resolveDirective as _resolveDirective, createVNode as _createVNode, mergeProps as _mergeProps, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VFileInput.css\";\n\n// Components\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VCounter } from \"../VCounter/index.mjs\";\nimport { VField } from \"../VField/index.mjs\";\nimport { filterFieldProps, makeVFieldProps } from \"../VField/VField.mjs\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.mjs\"; // Composables\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed, nextTick, ref, watch } from 'vue';\nimport { callEvent, filterInputAttrs, genericComponent, humanReadableFileSize, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport const makeVFileInputProps = propsFactory({\n  chips: Boolean,\n  counter: Boolean,\n  counterSizeString: {\n    type: String,\n    default: '$vuetify.fileInput.counterSize'\n  },\n  counterString: {\n    type: String,\n    default: '$vuetify.fileInput.counter'\n  },\n  multiple: Boolean,\n  showSize: {\n    type: [Boolean, Number, String],\n    default: false,\n    validator: v => {\n      return typeof v === 'boolean' || [1000, 1024].includes(Number(v));\n    }\n  },\n  ...makeVInputProps({\n    prependIcon: '$file'\n  }),\n  modelValue: {\n    type: Array,\n    default: () => [],\n    validator: val => {\n      return wrapInArray(val).every(v => v != null && typeof v === 'object');\n    }\n  },\n  ...makeVFieldProps({\n    clearable: true\n  })\n}, 'VFileInput');\nexport const VFileInput = genericComponent()({\n  name: 'VFileInput',\n  inheritAttrs: false,\n  props: makeVFileInputProps(),\n  emits: {\n    'click:control': e => true,\n    'mousedown:control': e => true,\n    'update:focused': focused => true,\n    'update:modelValue': files => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const model = useProxiedModel(props, 'modelValue');\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const base = computed(() => typeof props.showSize !== 'boolean' ? props.showSize : undefined);\n    const totalBytes = computed(() => (model.value ?? []).reduce((bytes, _ref2) => {\n      let {\n        size = 0\n      } = _ref2;\n      return bytes + size;\n    }, 0));\n    const totalBytesReadable = computed(() => humanReadableFileSize(totalBytes.value, base.value));\n    const fileNames = computed(() => (model.value ?? []).map(file => {\n      const {\n        name = '',\n        size = 0\n      } = file;\n      return !props.showSize ? name : `${name} (${humanReadableFileSize(size, base.value)})`;\n    }));\n    const counterValue = computed(() => {\n      const fileCount = model.value?.length ?? 0;\n      if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value);else return t(props.counterString, fileCount);\n    });\n    const vInputRef = ref();\n    const vFieldRef = ref();\n    const inputRef = ref();\n    const isActive = computed(() => isFocused.value || props.active);\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant));\n    function onFocus() {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus();\n      }\n      if (!isFocused.value) focus();\n    }\n    function onClickPrepend(e) {\n      inputRef.value?.click();\n    }\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n    }\n    function onControlClick(e) {\n      inputRef.value?.click();\n      emit('click:control', e);\n    }\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(() => {\n        model.value = [];\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n    watch(model, newValue => {\n      const hasModelReset = !Array.isArray(newValue) || !newValue.length;\n      if (hasModelReset && inputRef.value) {\n        inputRef.value.value = '';\n      }\n    });\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter);\n      const hasDetails = !!(hasCounter || slots.details);\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      const {\n        modelValue: _,\n        ...inputProps\n      } = VInput.filterProps(props);\n      const fieldProps = filterFieldProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": ['v-file-input', {\n          'v-file-input--chips': !!props.chips,\n          'v-input--plain-underlined': isPlainOrUnderlined.value\n        }, props.class],\n        \"style\": props.style,\n        \"onClick:prepend\": onClickPrepend\n      }, rootAttrs, inputProps, {\n        \"centerAffix\": !isPlainOrUnderlined.value,\n        \"focused\": isFocused.value\n      }), {\n        ...slots,\n        default: _ref3 => {\n          let {\n            id,\n            isDisabled,\n            isDirty,\n            isReadonly,\n            isValid\n          } = _ref3;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"prepend-icon\": props.prependIcon,\n            \"onMousedown\": onControlMousedown,\n            \"onClick\": onControlClick,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner']\n          }, fieldProps, {\n            \"id\": id.value,\n            \"active\": isActive.value || isDirty.value,\n            \"dirty\": isDirty.value,\n            \"disabled\": isDisabled.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), {\n            ...slots,\n            default: _ref4 => {\n              let {\n                props: {\n                  class: fieldClass,\n                  ...slotProps\n                }\n              } = _ref4;\n              return _createVNode(_Fragment, null, [_createVNode(\"input\", _mergeProps({\n                \"ref\": inputRef,\n                \"type\": \"file\",\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"multiple\": props.multiple,\n                \"name\": props.name,\n                \"onClick\": e => {\n                  e.stopPropagation();\n                  if (isReadonly.value) e.preventDefault();\n                  onFocus();\n                },\n                \"onChange\": e => {\n                  if (!e.target) return;\n                  const target = e.target;\n                  model.value = [...(target.files ?? [])];\n                },\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), _createVNode(\"div\", {\n                \"class\": fieldClass\n              }, [!!model.value?.length && (slots.selection ? slots.selection({\n                fileNames: fileNames.value,\n                totalBytes: totalBytes.value,\n                totalBytesReadable: totalBytesReadable.value\n              }) : props.chips ? fileNames.value.map(text => _createVNode(VChip, {\n                \"key\": text,\n                \"size\": \"small\",\n                \"color\": props.color\n              }, {\n                default: () => [text]\n              })) : fileNames.value.join(', '))])]);\n            }\n          });\n        },\n        details: hasDetails ? slotProps => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n          \"active\": !!model.value?.length,\n          \"value\": counterValue.value\n        }, slots.counter)])]) : undefined\n      });\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef);\n  }\n});\n//# sourceMappingURL=VFileInput.mjs.map",
      "start": 1731941047276,
      "end": 1731941047681,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941047681,
      "end": 1731941047681,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941047681,
      "end": 1731941047682,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941047682,
      "end": 1731941047682,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941047682,
      "end": 1731941047685,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { resolveDirective as _resolveDirective, createVNode as _createVNode, mergeProps as _mergeProps, Fragment as _Fragment } from \"vue\";\nimport \"./VFileInput.css\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VCounter } from \"../VCounter/index.mjs\";\nimport { VField } from \"../VField/index.mjs\";\nimport { filterFieldProps, makeVFieldProps } from \"../VField/VField.mjs\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { computed, nextTick, ref, watch } from \"vue\";\nimport { callEvent, filterInputAttrs, genericComponent, humanReadableFileSize, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\";\nexport const makeVFileInputProps = propsFactory({\n  chips: Boolean,\n  counter: Boolean,\n  counterSizeString: {\n    type: String,\n    default: \"$vuetify.fileInput.counterSize\"\n  },\n  counterString: {\n    type: String,\n    default: \"$vuetify.fileInput.counter\"\n  },\n  multiple: Boolean,\n  showSize: {\n    type: [Boolean, Number, String],\n    default: false,\n    validator: (v) => {\n      return typeof v === \"boolean\" || [1e3, 1024].includes(Number(v));\n    }\n  },\n  ...makeVInputProps({\n    prependIcon: \"$file\"\n  }),\n  modelValue: {\n    type: Array,\n    default: () => [],\n    validator: (val) => {\n      return wrapInArray(val).every((v) => v != null && typeof v === \"object\");\n    }\n  },\n  ...makeVFieldProps({\n    clearable: true\n  })\n}, \"VFileInput\");\nexport const VFileInput = genericComponent()({\n  name: \"VFileInput\",\n  inheritAttrs: false,\n  props: makeVFileInputProps(),\n  emits: {\n    \"click:control\": (e) => true,\n    \"mousedown:control\": (e) => true,\n    \"update:focused\": (focused) => true,\n    \"update:modelValue\": (files) => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const model = useProxiedModel(props, \"modelValue\");\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const base = computed(() => typeof props.showSize !== \"boolean\" ? props.showSize : void 0);\n    const totalBytes = computed(() => (model.value ?? []).reduce((bytes, _ref2) => {\n      let {\n        size = 0\n      } = _ref2;\n      return bytes + size;\n    }, 0));\n    const totalBytesReadable = computed(() => humanReadableFileSize(totalBytes.value, base.value));\n    const fileNames = computed(() => (model.value ?? []).map((file) => {\n      const {\n        name = \"\",\n        size = 0\n      } = file;\n      return !props.showSize ? name : `${name} (${humanReadableFileSize(size, base.value)})`;\n    }));\n    const counterValue = computed(() => {\n      const fileCount = model.value?.length ?? 0;\n      if (props.showSize)\n        return t(props.counterSizeString, fileCount, totalBytesReadable.value);\n      else\n        return t(props.counterString, fileCount);\n    });\n    const vInputRef = ref();\n    const vFieldRef = ref();\n    const inputRef = ref();\n    const isActive = computed(() => isFocused.value || props.active);\n    const isPlainOrUnderlined = computed(() => [\"plain\", \"underlined\"].includes(props.variant));\n    function onFocus() {\n      if (inputRef.value !== (void 0).activeElement) {\n        inputRef.value?.focus();\n      }\n      if (!isFocused.value)\n        focus();\n    }\n    function onClickPrepend(e) {\n      inputRef.value?.click();\n    }\n    function onControlMousedown(e) {\n      emit(\"mousedown:control\", e);\n    }\n    function onControlClick(e) {\n      inputRef.value?.click();\n      emit(\"click:control\", e);\n    }\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(() => {\n        model.value = [];\n        callEvent(props[\"onClick:clear\"], e);\n      });\n    }\n    watch(model, (newValue) => {\n      const hasModelReset = !Array.isArray(newValue) || !newValue.length;\n      if (hasModelReset && inputRef.value) {\n        inputRef.value.value = \"\";\n      }\n    });\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter);\n      const hasDetails = !!(hasCounter || slots.details);\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      const {\n        modelValue: _,\n        ...inputProps\n      } = VInput.filterProps(props);\n      const fieldProps = filterFieldProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": ($event) => model.value = $event,\n        \"class\": [\"v-file-input\", {\n          \"v-file-input--chips\": !!props.chips,\n          \"v-input--plain-underlined\": isPlainOrUnderlined.value\n        }, props.class],\n        \"style\": props.style,\n        \"onClick:prepend\": onClickPrepend\n      }, rootAttrs, inputProps, {\n        \"centerAffix\": !isPlainOrUnderlined.value,\n        \"focused\": isFocused.value\n      }), {\n        ...slots,\n        default: (_ref3) => {\n          let {\n            id,\n            isDisabled,\n            isDirty,\n            isReadonly,\n            isValid\n          } = _ref3;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"prepend-icon\": props.prependIcon,\n            \"onMousedown\": onControlMousedown,\n            \"onClick\": onControlClick,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props[\"onClick:prependInner\"],\n            \"onClick:appendInner\": props[\"onClick:appendInner\"]\n          }, fieldProps, {\n            \"id\": id.value,\n            \"active\": isActive.value || isDirty.value,\n            \"dirty\": isDirty.value,\n            \"disabled\": isDisabled.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), {\n            ...slots,\n            default: (_ref4) => {\n              let {\n                props: {\n                  class: fieldClass,\n                  ...slotProps\n                }\n              } = _ref4;\n              return _createVNode(_Fragment, null, [_createVNode(\"input\", _mergeProps({\n                \"ref\": inputRef,\n                \"type\": \"file\",\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"multiple\": props.multiple,\n                \"name\": props.name,\n                \"onClick\": (e) => {\n                  e.stopPropagation();\n                  if (isReadonly.value)\n                    e.preventDefault();\n                  onFocus();\n                },\n                \"onChange\": (e) => {\n                  if (!e.target)\n                    return;\n                  const target = e.target;\n                  model.value = [...target.files ?? []];\n                },\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), _createVNode(\"div\", {\n                \"class\": fieldClass\n              }, [!!model.value?.length && (slots.selection ? slots.selection({\n                fileNames: fileNames.value,\n                totalBytes: totalBytes.value,\n                totalBytesReadable: totalBytesReadable.value\n              }) : props.chips ? fileNames.value.map((text) => _createVNode(VChip, {\n                \"key\": text,\n                \"size\": \"small\",\n                \"color\": props.color\n              }, {\n                default: () => [text]\n              })) : fileNames.value.join(\", \"))])]);\n            }\n          });\n        },\n        details: hasDetails ? (slotProps) => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n          \"active\": !!model.value?.length,\n          \"value\": counterValue.value\n        }, slots.counter)])]) : void 0\n      });\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef);\n  }\n});\n",
      "start": 1731941047685,
      "end": 1731941047728,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VFileInput/VFileInput.mjs\"],\n  \"sourcesContent\": [\"import { resolveDirective as _resolveDirective, createVNode as _createVNode, mergeProps as _mergeProps, Fragment as _Fragment } from \\\"vue\\\";\\n// Styles\\nimport \\\"./VFileInput.css\\\";\\n\\n// Components\\nimport { VChip } from \\\"../VChip/index.mjs\\\";\\nimport { VCounter } from \\\"../VCounter/index.mjs\\\";\\nimport { VField } from \\\"../VField/index.mjs\\\";\\nimport { filterFieldProps, makeVFieldProps } from \\\"../VField/VField.mjs\\\";\\nimport { makeVInputProps, VInput } from \\\"../VInput/VInput.mjs\\\"; // Composables\\nimport { useFocus } from \\\"../../composables/focus.mjs\\\";\\nimport { forwardRefs } from \\\"../../composables/forwardRefs.mjs\\\";\\nimport { useLocale } from \\\"../../composables/locale.mjs\\\";\\nimport { useProxiedModel } from \\\"../../composables/proxiedModel.mjs\\\"; // Utilities\\nimport { computed, nextTick, ref, watch } from 'vue';\\nimport { callEvent, filterInputAttrs, genericComponent, humanReadableFileSize, propsFactory, useRender, wrapInArray } from \\\"../../util/index.mjs\\\"; // Types\\nexport const makeVFileInputProps = propsFactory({\\n  chips: Boolean,\\n  counter: Boolean,\\n  counterSizeString: {\\n    type: String,\\n    default: '$vuetify.fileInput.counterSize'\\n  },\\n  counterString: {\\n    type: String,\\n    default: '$vuetify.fileInput.counter'\\n  },\\n  multiple: Boolean,\\n  showSize: {\\n    type: [Boolean, Number, String],\\n    default: false,\\n    validator: v => {\\n      return typeof v === 'boolean' || [1000, 1024].includes(Number(v));\\n    }\\n  },\\n  ...makeVInputProps({\\n    prependIcon: '$file'\\n  }),\\n  modelValue: {\\n    type: Array,\\n    default: () => [],\\n    validator: val => {\\n      return wrapInArray(val).every(v => v != null && typeof v === 'object');\\n    }\\n  },\\n  ...makeVFieldProps({\\n    clearable: true\\n  })\\n}, 'VFileInput');\\nexport const VFileInput = genericComponent()({\\n  name: 'VFileInput',\\n  inheritAttrs: false,\\n  props: makeVFileInputProps(),\\n  emits: {\\n    'click:control': e => true,\\n    'mousedown:control': e => true,\\n    'update:focused': focused => true,\\n    'update:modelValue': files => true\\n  },\\n  setup(props, _ref) {\\n    let {\\n      attrs,\\n      emit,\\n      slots\\n    } = _ref;\\n    const {\\n      t\\n    } = useLocale();\\n    const model = useProxiedModel(props, 'modelValue');\\n    const {\\n      isFocused,\\n      focus,\\n      blur\\n    } = useFocus(props);\\n    const base = computed(() => typeof props.showSize !== 'boolean' ? props.showSize : undefined);\\n    const totalBytes = computed(() => (model.value ?? []).reduce((bytes, _ref2) => {\\n      let {\\n        size = 0\\n      } = _ref2;\\n      return bytes + size;\\n    }, 0));\\n    const totalBytesReadable = computed(() => humanReadableFileSize(totalBytes.value, base.value));\\n    const fileNames = computed(() => (model.value ?? []).map(file => {\\n      const {\\n        name = '',\\n        size = 0\\n      } = file;\\n      return !props.showSize ? name : `${name} (${humanReadableFileSize(size, base.value)})`;\\n    }));\\n    const counterValue = computed(() => {\\n      const fileCount = model.value?.length ?? 0;\\n      if (props.showSize) return t(props.counterSizeString, fileCount, totalBytesReadable.value);else return t(props.counterString, fileCount);\\n    });\\n    const vInputRef = ref();\\n    const vFieldRef = ref();\\n    const inputRef = ref();\\n    const isActive = computed(() => isFocused.value || props.active);\\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant));\\n    function onFocus() {\\n      if (inputRef.value !== document.activeElement) {\\n        inputRef.value?.focus();\\n      }\\n      if (!isFocused.value) focus();\\n    }\\n    function onClickPrepend(e) {\\n      inputRef.value?.click();\\n    }\\n    function onControlMousedown(e) {\\n      emit('mousedown:control', e);\\n    }\\n    function onControlClick(e) {\\n      inputRef.value?.click();\\n      emit('click:control', e);\\n    }\\n    function onClear(e) {\\n      e.stopPropagation();\\n      onFocus();\\n      nextTick(() => {\\n        model.value = [];\\n        callEvent(props['onClick:clear'], e);\\n      });\\n    }\\n    watch(model, newValue => {\\n      const hasModelReset = !Array.isArray(newValue) || !newValue.length;\\n      if (hasModelReset && inputRef.value) {\\n        inputRef.value.value = '';\\n      }\\n    });\\n    useRender(() => {\\n      const hasCounter = !!(slots.counter || props.counter);\\n      const hasDetails = !!(hasCounter || slots.details);\\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\\n      const {\\n        modelValue: _,\\n        ...inputProps\\n      } = VInput.filterProps(props);\\n      const fieldProps = filterFieldProps(props);\\n      return _createVNode(VInput, _mergeProps({\\n        \\\"ref\\\": vInputRef,\\n        \\\"modelValue\\\": model.value,\\n        \\\"onUpdate:modelValue\\\": $event => model.value = $event,\\n        \\\"class\\\": ['v-file-input', {\\n          'v-file-input--chips': !!props.chips,\\n          'v-input--plain-underlined': isPlainOrUnderlined.value\\n        }, props.class],\\n        \\\"style\\\": props.style,\\n        \\\"onClick:prepend\\\": onClickPrepend\\n      }, rootAttrs, inputProps, {\\n        \\\"centerAffix\\\": !isPlainOrUnderlined.value,\\n        \\\"focused\\\": isFocused.value\\n      }), {\\n        ...slots,\\n        default: _ref3 => {\\n          let {\\n            id,\\n            isDisabled,\\n            isDirty,\\n            isReadonly,\\n            isValid\\n          } = _ref3;\\n          return _createVNode(VField, _mergeProps({\\n            \\\"ref\\\": vFieldRef,\\n            \\\"prepend-icon\\\": props.prependIcon,\\n            \\\"onMousedown\\\": onControlMousedown,\\n            \\\"onClick\\\": onControlClick,\\n            \\\"onClick:clear\\\": onClear,\\n            \\\"onClick:prependInner\\\": props['onClick:prependInner'],\\n            \\\"onClick:appendInner\\\": props['onClick:appendInner']\\n          }, fieldProps, {\\n            \\\"id\\\": id.value,\\n            \\\"active\\\": isActive.value || isDirty.value,\\n            \\\"dirty\\\": isDirty.value,\\n            \\\"disabled\\\": isDisabled.value,\\n            \\\"focused\\\": isFocused.value,\\n            \\\"error\\\": isValid.value === false\\n          }), {\\n            ...slots,\\n            default: _ref4 => {\\n              let {\\n                props: {\\n                  class: fieldClass,\\n                  ...slotProps\\n                }\\n              } = _ref4;\\n              return _createVNode(_Fragment, null, [_createVNode(\\\"input\\\", _mergeProps({\\n                \\\"ref\\\": inputRef,\\n                \\\"type\\\": \\\"file\\\",\\n                \\\"readonly\\\": isReadonly.value,\\n                \\\"disabled\\\": isDisabled.value,\\n                \\\"multiple\\\": props.multiple,\\n                \\\"name\\\": props.name,\\n                \\\"onClick\\\": e => {\\n                  e.stopPropagation();\\n                  if (isReadonly.value) e.preventDefault();\\n                  onFocus();\\n                },\\n                \\\"onChange\\\": e => {\\n                  if (!e.target) return;\\n                  const target = e.target;\\n                  model.value = [...(target.files ?? [])];\\n                },\\n                \\\"onFocus\\\": onFocus,\\n                \\\"onBlur\\\": blur\\n              }, slotProps, inputAttrs), null), _createVNode(\\\"div\\\", {\\n                \\\"class\\\": fieldClass\\n              }, [!!model.value?.length && (slots.selection ? slots.selection({\\n                fileNames: fileNames.value,\\n                totalBytes: totalBytes.value,\\n                totalBytesReadable: totalBytesReadable.value\\n              }) : props.chips ? fileNames.value.map(text => _createVNode(VChip, {\\n                \\\"key\\\": text,\\n                \\\"size\\\": \\\"small\\\",\\n                \\\"color\\\": props.color\\n              }, {\\n                default: () => [text]\\n              })) : fileNames.value.join(', '))])]);\\n            }\\n          });\\n        },\\n        details: hasDetails ? slotProps => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\\\"span\\\", null, null), _createVNode(VCounter, {\\n          \\\"active\\\": !!model.value?.length,\\n          \\\"value\\\": counterValue.value\\n        }, slots.counter)])]) : undefined\\n      });\\n    });\\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef);\\n  }\\n});\\n//# sourceMappingURL=VFileInput.mjs.map\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1731941047728,
      "end": 1731941047728,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941047728,
      "end": 1731941047728,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941047728,
      "end": 1731941047728,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941047728,
      "end": 1731941047728,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941047728,
      "end": 1731941047728,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941047728,
      "end": 1731941047728,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941047728,
      "end": 1731941047728,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941047728,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941047728,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941047729,
      "end": 1731941047729,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941047729,
      "end": 1731941047730,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941047730,
      "end": 1731941047730,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941047730,
      "end": 1731941047730,
      "order": "normal"
    }
  ]
}
