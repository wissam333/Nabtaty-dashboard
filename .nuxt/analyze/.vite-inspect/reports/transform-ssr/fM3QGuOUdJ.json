{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VSelect/VSelect.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\n// Styles\nimport \"./VSelect.css\";\n\n// Components\nimport { VDialogTransition } from \"../transitions/index.mjs\";\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.mjs\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VList, VListItem } from \"../VList/index.mjs\";\nimport { VMenu } from \"../VMenu/index.mjs\";\nimport { makeVTextFieldProps, VTextField } from \"../VTextField/VTextField.mjs\";\nimport { VVirtualScroll } from \"../VVirtualScroll/index.mjs\"; // Composables\nimport { useScrolling } from \"./useScrolling.mjs\";\nimport { useForm } from \"../../composables/form.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeItemsProps, useItems } from \"../../composables/list-items.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeTransitionProps } from \"../../composables/transition.mjs\"; // Utilities\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue';\nimport { ensureValidVNode, genericComponent, IN_BROWSER, matchesSelector, omit, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\"; // Types\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: '$vuetify.close'\n  },\n  openText: {\n    type: String,\n    default: '$vuetify.open'\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: '$dropdown'\n  },\n  menuProps: {\n    type: Object\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: '$vuetify.noDataText'\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n  ...makeItemsProps({\n    itemChildren: false\n  })\n}, 'Select');\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: 'combobox'\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\n  ...makeTransitionProps({\n    transition: {\n      component: VDialogTransition\n    }\n  })\n}, 'VSelect');\nexport const VSelect = genericComponent()({\n  name: 'VSelect',\n  props: makeVSelectProps(),\n  emits: {\n    'update:focused': focused => true,\n    'update:modelValue': value => true,\n    'update:menu': ue => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const vTextFieldRef = ref();\n    const vMenuRef = ref();\n    const vVirtualScrollRef = ref();\n    const _menu = useProxiedModel(props, 'menu');\n    const menu = computed({\n      get: () => _menu.value,\n      set: v => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren) return;\n        _menu.value = v;\n      }\n    });\n    const {\n      items,\n      transformIn,\n      transformOut\n    } = useItems(props);\n    const model = useProxiedModel(props, 'modelValue', [], v => transformIn(v === null ? [null] : wrapInArray(v)), v => {\n      const transformed = transformOut(v);\n      return props.multiple ? transformed : transformed[0] ?? null;\n    });\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : typeof props.counterValue === 'number' ? props.counterValue : model.value.length;\n    });\n    const form = useForm();\n    const selectedValues = computed(() => model.value.map(selection => selection.value));\n    const isFocused = shallowRef(false);\n    const label = computed(() => menu.value ? props.closeText : props.openText);\n    let keyboardLookupPrefix = '';\n    let keyboardLookupLastTime;\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter(item => !model.value.some(s => s === item));\n      }\n      return items.value;\n    });\n    const menuDisabled = computed(() => props.hideNoData && !displayItems.value.length || props.readonly || form?.isReadonly.value);\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...(props.menuProps?.activatorProps || {}),\n          'aria-haspopup': 'listbox' // Set aria-haspopup to 'listbox'\n        }\n      };\n    });\n    const listRef = ref();\n    const {\n      onListScroll,\n      onListKeydown\n    } = useScrolling(listRef, vTextFieldRef);\n    function onClear(e) {\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n    }\n    function onMousedownControl() {\n      if (menuDisabled.value) return;\n      menu.value = !menu.value;\n    }\n    function onKeydown(e) {\n      if (!e.key || props.readonly || form?.isReadonly.value) return;\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\n        e.preventDefault();\n      }\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\n        menu.value = true;\n      }\n      if (['Escape', 'Tab'].includes(e.key)) {\n        menu.value = false;\n      }\n      if (e.key === 'Home') {\n        listRef.value?.focus('first');\n      } else if (e.key === 'End') {\n        listRef.value?.focus('last');\n      }\n\n      // html select hotkeys\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000; // milliseconds\n\n      function checkPrintable(e) {\n        const isPrintableChar = e.key.length === 1;\n        const noModifier = !e.ctrlKey && !e.metaKey && !e.altKey;\n        return isPrintableChar && noModifier;\n      }\n      if (props.multiple || !checkPrintable(e)) return;\n      const now = performance.now();\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = '';\n      }\n      keyboardLookupPrefix += e.key.toLowerCase();\n      keyboardLookupLastTime = now;\n      const item = items.value.find(item => item.title.toLowerCase().startsWith(keyboardLookupPrefix));\n      if (item !== undefined) {\n        model.value = [item];\n      }\n    }\n\n    /** @param set - null means toggle */\n    function select(item) {\n      let set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (item.props.disabled) return;\n      if (props.multiple) {\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value));\n        const add = set == null ? !~index : set;\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value];\n          value.splice(index, 1);\n          model.value = value;\n        } else if (add) {\n          model.value = [...model.value, item];\n        }\n      } else {\n        const add = set !== false;\n        model.value = add ? [item] : [];\n        nextTick(() => {\n          menu.value = false;\n        });\n      }\n    }\n    function onBlur(e) {\n      if (!listRef.value?.$el.contains(e.relatedTarget)) {\n        menu.value = false;\n      }\n    }\n    function onAfterLeave() {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus();\n      }\n    }\n    function onFocusin(e) {\n      isFocused.value = true;\n    }\n    function onModelUpdate(v) {\n      if (v == null) model.value = [];else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\n        const item = items.value.find(item => item.title === v);\n        if (item) {\n          select(item);\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = '';\n      }\n    }\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex(item => model.value.some(s => props.valueComparator(s.value, item.value)));\n        IN_BROWSER && window.requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index);\n        });\n      }\n    });\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value) return;\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true;\n      }\n    });\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip);\n      const hasList = !!(!props.hideNoData || displayItems.value.length || slots['prepend-item'] || slots['append-item'] || slots['no-data']);\n      const isDirty = model.value.length > 0;\n      const textFieldProps = VTextField.filterProps(props);\n      const placeholder = isDirty || !isFocused.value && props.label && !props.persistentPlaceholder ? undefined : props.placeholder;\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": model.value.map(v => v.props.value).join(', '),\n        \"onUpdate:modelValue\": onModelUpdate,\n        \"focused\": isFocused.value,\n        \"onUpdate:focused\": $event => isFocused.value = $event,\n        \"validationValue\": model.externalValue,\n        \"counterValue\": counterValue.value,\n        \"dirty\": isDirty,\n        \"class\": ['v-select', {\n          'v-select--active-menu': menu.value,\n          'v-select--chips': !!props.chips,\n          [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\n          'v-select--selected': model.value.length,\n          'v-select--selection-slot': !!slots.selection\n        }, props.class],\n        \"style\": props.style,\n        \"inputmode\": \"none\",\n        \"placeholder\": placeholder,\n        \"onClick:clear\": onClear,\n        \"onMousedown:control\": onMousedownControl,\n        \"onBlur\": onBlur,\n        \"onKeydown\": onKeydown,\n        \"aria-label\": t(label.value),\n        \"title\": t(label.value)\n      }), {\n        ...slots,\n        default: () => _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n          \"ref\": vMenuRef,\n          \"modelValue\": menu.value,\n          \"onUpdate:modelValue\": $event => menu.value = $event,\n          \"activator\": \"parent\",\n          \"contentClass\": \"v-select__content\",\n          \"disabled\": menuDisabled.value,\n          \"eager\": props.eager,\n          \"maxHeight\": 310,\n          \"openOnClick\": false,\n          \"closeOnContentClick\": false,\n          \"transition\": props.transition,\n          \"onAfterLeave\": onAfterLeave\n        }, computedMenuProps.value), {\n          default: () => [hasList && _createVNode(VList, _mergeProps({\n            \"ref\": listRef,\n            \"selected\": selectedValues.value,\n            \"selectStrategy\": props.multiple ? 'independent' : 'single-independent',\n            \"onMousedown\": e => e.preventDefault(),\n            \"onKeydown\": onListKeydown,\n            \"onFocusin\": onFocusin,\n            \"onScrollPassive\": onListScroll,\n            \"tabindex\": \"-1\",\n            \"aria-live\": \"polite\",\n            \"color\": props.itemColor ?? props.color\n          }, props.listProps), {\n            default: () => [slots['prepend-item']?.(), !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? _createVNode(VListItem, {\n              \"title\": t(props.noDataText)\n            }, null)), _createVNode(VVirtualScroll, {\n              \"ref\": vVirtualScrollRef,\n              \"renderless\": true,\n              \"items\": displayItems.value\n            }, {\n              default: _ref2 => {\n                let {\n                  item,\n                  index,\n                  itemRef\n                } = _ref2;\n                const itemProps = mergeProps(item.props, {\n                  ref: itemRef,\n                  key: index,\n                  onClick: () => select(item, null)\n                });\n                return slots.item?.({\n                  item,\n                  index,\n                  props: itemProps\n                }) ?? _createVNode(VListItem, _mergeProps(itemProps, {\n                  \"role\": \"option\"\n                }), {\n                  prepend: _ref3 => {\n                    let {\n                      isSelected\n                    } = _ref3;\n                    return _createVNode(_Fragment, null, [props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                      \"key\": item.value,\n                      \"modelValue\": isSelected,\n                      \"ripple\": false,\n                      \"tabindex\": \"-1\"\n                    }, null) : undefined, item.props.prependAvatar && _createVNode(VAvatar, {\n                      \"image\": item.props.prependAvatar\n                    }, null), item.props.prependIcon && _createVNode(VIcon, {\n                      \"icon\": item.props.prependIcon\n                    }, null)]);\n                  }\n                });\n              }\n            }), slots['append-item']?.()]\n          })]\n        }), model.value.map((item, index) => {\n          function onChipClose(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            select(item, false);\n          }\n          const slotProps = {\n            'onClick:close': onChipClose,\n            onMousedown(e) {\n              e.preventDefault();\n              e.stopPropagation();\n            },\n            modelValue: true,\n            'onUpdate:modelValue': undefined\n          };\n          const hasSlot = hasChips ? !!slots.chip : !!slots.selection;\n          const slotContent = hasSlot ? ensureValidVNode(hasChips ? slots.chip({\n            item,\n            index,\n            props: slotProps\n          }) : slots.selection({\n            item,\n            index\n          })) : undefined;\n          if (hasSlot && !slotContent) return undefined;\n          return _createVNode(\"div\", {\n            \"key\": item.value,\n            \"class\": \"v-select__selection\"\n          }, [hasChips ? !slots.chip ? _createVNode(VChip, _mergeProps({\n            \"key\": \"chip\",\n            \"closable\": props.closableChips,\n            \"size\": \"small\",\n            \"text\": item.title,\n            \"disabled\": item.props.disabled\n          }, slotProps), null) : _createVNode(VDefaultsProvider, {\n            \"key\": \"chip-defaults\",\n            \"defaults\": {\n              VChip: {\n                closable: props.closableChips,\n                size: 'small',\n                text: item.title\n              }\n            }\n          }, {\n            default: () => [slotContent]\n          }) : slotContent ?? _createVNode(\"span\", {\n            \"class\": \"v-select__selection-text\"\n          }, [item.title, props.multiple && index < model.value.length - 1 && _createVNode(\"span\", {\n            \"class\": \"v-select__selection-comma\"\n          }, [_createTextVNode(\",\")])])]);\n        })]),\n        'append-inner': function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createVNode(_Fragment, null, [slots['append-inner']?.(...args), props.menuIcon ? _createVNode(VIcon, {\n            \"class\": \"v-select__menu-icon\",\n            \"icon\": props.menuIcon\n          }, null) : undefined]);\n        }\n      });\n    });\n    return forwardRefs({\n      isFocused,\n      menu,\n      select\n    }, vTextFieldRef);\n  }\n});\n//# sourceMappingURL=VSelect.mjs.map",
      "start": 1731941048038,
      "end": 1731941048243,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941048243,
      "end": 1731941048243,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941048243,
      "end": 1731941048243,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941048243,
      "end": 1731941048243,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941048243,
      "end": 1731941048243,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941048243,
      "end": 1731941048243,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941048243,
      "end": 1731941048243,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941048243,
      "end": 1731941048243,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1731941048243,
      "end": 1731941048243,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941048243,
      "end": 1731941048243,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941048243,
      "end": 1731941048243,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941048244,
      "end": 1731941048244,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941048244,
      "end": 1731941048244,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941048244,
      "end": 1731941048244,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941048244,
      "end": 1731941048244,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941048244,
      "end": 1731941048244,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941048244,
      "end": 1731941048244,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941048244,
      "end": 1731941048244,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941048244,
      "end": 1731941048244,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941048244,
      "end": 1731941048244,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941048244,
      "end": 1731941048244,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941048244,
      "end": 1731941048248,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \"vue\";\nimport \"./VSelect.css\";\nimport { VDialogTransition } from \"../transitions/index.mjs\";\nimport { VAvatar } from \"../VAvatar/index.mjs\";\nimport { VCheckboxBtn } from \"../VCheckbox/index.mjs\";\nimport { VChip } from \"../VChip/index.mjs\";\nimport { VDefaultsProvider } from \"../VDefaultsProvider/index.mjs\";\nimport { VIcon } from \"../VIcon/index.mjs\";\nimport { VList, VListItem } from \"../VList/index.mjs\";\nimport { VMenu } from \"../VMenu/index.mjs\";\nimport { makeVTextFieldProps, VTextField } from \"../VTextField/VTextField.mjs\";\nimport { VVirtualScroll } from \"../VVirtualScroll/index.mjs\";\nimport { useScrolling } from \"./useScrolling.mjs\";\nimport { useForm } from \"../../composables/form.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { makeItemsProps, useItems } from \"../../composables/list-items.mjs\";\nimport { useLocale } from \"../../composables/locale.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport { makeTransitionProps } from \"../../composables/transition.mjs\";\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from \"vue\";\nimport { ensureValidVNode, genericComponent, IN_BROWSER, matchesSelector, omit, propsFactory, useRender, wrapInArray } from \"../../util/index.mjs\";\nexport const makeSelectProps = propsFactory({\n  chips: Boolean,\n  closableChips: Boolean,\n  closeText: {\n    type: String,\n    default: \"$vuetify.close\"\n  },\n  openText: {\n    type: String,\n    default: \"$vuetify.open\"\n  },\n  eager: Boolean,\n  hideNoData: Boolean,\n  hideSelected: Boolean,\n  listProps: {\n    type: Object\n  },\n  menu: Boolean,\n  menuIcon: {\n    type: IconValue,\n    default: \"$dropdown\"\n  },\n  menuProps: {\n    type: Object\n  },\n  multiple: Boolean,\n  noDataText: {\n    type: String,\n    default: \"$vuetify.noDataText\"\n  },\n  openOnClear: Boolean,\n  itemColor: String,\n  ...makeItemsProps({\n    itemChildren: false\n  })\n}, \"Select\");\nexport const makeVSelectProps = propsFactory({\n  ...makeSelectProps(),\n  ...omit(makeVTextFieldProps({\n    modelValue: null,\n    role: \"combobox\"\n  }), [\"validationValue\", \"dirty\", \"appendInnerIcon\"]),\n  ...makeTransitionProps({\n    transition: {\n      component: VDialogTransition\n    }\n  })\n}, \"VSelect\");\nexport const VSelect = genericComponent()({\n  name: \"VSelect\",\n  props: makeVSelectProps(),\n  emits: {\n    \"update:focused\": (focused) => true,\n    \"update:modelValue\": (value) => true,\n    \"update:menu\": (ue) => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const {\n      t\n    } = useLocale();\n    const vTextFieldRef = ref();\n    const vMenuRef = ref();\n    const vVirtualScrollRef = ref();\n    const _menu = useProxiedModel(props, \"menu\");\n    const menu = computed({\n      get: () => _menu.value,\n      set: (v) => {\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren)\n          return;\n        _menu.value = v;\n      }\n    });\n    const {\n      items,\n      transformIn,\n      transformOut\n    } = useItems(props);\n    const model = useProxiedModel(props, \"modelValue\", [], (v) => transformIn(v === null ? [null] : wrapInArray(v)), (v) => {\n      const transformed = transformOut(v);\n      return props.multiple ? transformed : transformed[0] ?? null;\n    });\n    const counterValue = computed(() => {\n      return typeof props.counterValue === \"function\" ? props.counterValue(model.value) : typeof props.counterValue === \"number\" ? props.counterValue : model.value.length;\n    });\n    const form = useForm();\n    const selectedValues = computed(() => model.value.map((selection) => selection.value));\n    const isFocused = shallowRef(false);\n    const label = computed(() => menu.value ? props.closeText : props.openText);\n    let keyboardLookupPrefix = \"\";\n    let keyboardLookupLastTime;\n    const displayItems = computed(() => {\n      if (props.hideSelected) {\n        return items.value.filter((item) => !model.value.some((s) => s === item));\n      }\n      return items.value;\n    });\n    const menuDisabled = computed(() => props.hideNoData && !displayItems.value.length || props.readonly || form?.isReadonly.value);\n    const computedMenuProps = computed(() => {\n      return {\n        ...props.menuProps,\n        activatorProps: {\n          ...props.menuProps?.activatorProps || {},\n          \"aria-haspopup\": \"listbox\"\n          // Set aria-haspopup to 'listbox'\n        }\n      };\n    });\n    const listRef = ref();\n    const {\n      onListScroll,\n      onListKeydown\n    } = useScrolling(listRef, vTextFieldRef);\n    function onClear(e) {\n      if (props.openOnClear) {\n        menu.value = true;\n      }\n    }\n    function onMousedownControl() {\n      if (menuDisabled.value)\n        return;\n      menu.value = !menu.value;\n    }\n    function onKeydown(e) {\n      if (!e.key || props.readonly || form?.isReadonly.value)\n        return;\n      if ([\"Enter\", \" \", \"ArrowDown\", \"ArrowUp\", \"Home\", \"End\"].includes(e.key)) {\n        e.preventDefault();\n      }\n      if ([\"Enter\", \"ArrowDown\", \" \"].includes(e.key)) {\n        menu.value = true;\n      }\n      if ([\"Escape\", \"Tab\"].includes(e.key)) {\n        menu.value = false;\n      }\n      if (e.key === \"Home\") {\n        listRef.value?.focus(\"first\");\n      } else if (e.key === \"End\") {\n        listRef.value?.focus(\"last\");\n      }\n      const KEYBOARD_LOOKUP_THRESHOLD = 1e3;\n      function checkPrintable(e2) {\n        const isPrintableChar = e2.key.length === 1;\n        const noModifier = !e2.ctrlKey && !e2.metaKey && !e2.altKey;\n        return isPrintableChar && noModifier;\n      }\n      if (props.multiple || !checkPrintable(e))\n        return;\n      const now = performance.now();\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\n        keyboardLookupPrefix = \"\";\n      }\n      keyboardLookupPrefix += e.key.toLowerCase();\n      keyboardLookupLastTime = now;\n      const item = items.value.find((item2) => item2.title.toLowerCase().startsWith(keyboardLookupPrefix));\n      if (item !== void 0) {\n        model.value = [item];\n      }\n    }\n    function select(item) {\n      let set = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;\n      if (item.props.disabled)\n        return;\n      if (props.multiple) {\n        const index = model.value.findIndex((selection) => props.valueComparator(selection.value, item.value));\n        const add = set == null ? !~index : set;\n        if (~index) {\n          const value = add ? [...model.value, item] : [...model.value];\n          value.splice(index, 1);\n          model.value = value;\n        } else if (add) {\n          model.value = [...model.value, item];\n        }\n      } else {\n        const add = set !== false;\n        model.value = add ? [item] : [];\n        nextTick(() => {\n          menu.value = false;\n        });\n      }\n    }\n    function onBlur(e) {\n      if (!listRef.value?.$el.contains(e.relatedTarget)) {\n        menu.value = false;\n      }\n    }\n    function onAfterLeave() {\n      if (isFocused.value) {\n        vTextFieldRef.value?.focus();\n      }\n    }\n    function onFocusin(e) {\n      isFocused.value = true;\n    }\n    function onModelUpdate(v) {\n      if (v == null)\n        model.value = [];\n      else if (matchesSelector(vTextFieldRef.value, \":autofill\") || matchesSelector(vTextFieldRef.value, \":-webkit-autofill\")) {\n        const item = items.value.find((item2) => item2.title === v);\n        if (item) {\n          select(item);\n        }\n      } else if (vTextFieldRef.value) {\n        vTextFieldRef.value.value = \"\";\n      }\n    }\n    watch(menu, () => {\n      if (!props.hideSelected && menu.value && model.value.length) {\n        const index = displayItems.value.findIndex((item) => model.value.some((s) => props.valueComparator(s.value, item.value)));\n        IN_BROWSER && (void 0).requestAnimationFrame(() => {\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index);\n        });\n      }\n    });\n    watch(() => props.items, (newVal, oldVal) => {\n      if (menu.value)\n        return;\n      if (isFocused.value && !oldVal.length && newVal.length) {\n        menu.value = true;\n      }\n    });\n    useRender(() => {\n      const hasChips = !!(props.chips || slots.chip);\n      const hasList = !!(!props.hideNoData || displayItems.value.length || slots[\"prepend-item\"] || slots[\"append-item\"] || slots[\"no-data\"]);\n      const isDirty = model.value.length > 0;\n      const textFieldProps = VTextField.filterProps(props);\n      const placeholder = isDirty || !isFocused.value && props.label && !props.persistentPlaceholder ? void 0 : props.placeholder;\n      return _createVNode(VTextField, _mergeProps({\n        \"ref\": vTextFieldRef\n      }, textFieldProps, {\n        \"modelValue\": model.value.map((v) => v.props.value).join(\", \"),\n        \"onUpdate:modelValue\": onModelUpdate,\n        \"focused\": isFocused.value,\n        \"onUpdate:focused\": ($event) => isFocused.value = $event,\n        \"validationValue\": model.externalValue,\n        \"counterValue\": counterValue.value,\n        \"dirty\": isDirty,\n        \"class\": [\"v-select\", {\n          \"v-select--active-menu\": menu.value,\n          \"v-select--chips\": !!props.chips,\n          [`v-select--${props.multiple ? \"multiple\" : \"single\"}`]: true,\n          \"v-select--selected\": model.value.length,\n          \"v-select--selection-slot\": !!slots.selection\n        }, props.class],\n        \"style\": props.style,\n        \"inputmode\": \"none\",\n        \"placeholder\": placeholder,\n        \"onClick:clear\": onClear,\n        \"onMousedown:control\": onMousedownControl,\n        \"onBlur\": onBlur,\n        \"onKeydown\": onKeydown,\n        \"aria-label\": t(label.value),\n        \"title\": t(label.value)\n      }), {\n        ...slots,\n        default: () => _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\n          \"ref\": vMenuRef,\n          \"modelValue\": menu.value,\n          \"onUpdate:modelValue\": ($event) => menu.value = $event,\n          \"activator\": \"parent\",\n          \"contentClass\": \"v-select__content\",\n          \"disabled\": menuDisabled.value,\n          \"eager\": props.eager,\n          \"maxHeight\": 310,\n          \"openOnClick\": false,\n          \"closeOnContentClick\": false,\n          \"transition\": props.transition,\n          \"onAfterLeave\": onAfterLeave\n        }, computedMenuProps.value), {\n          default: () => [hasList && _createVNode(VList, _mergeProps({\n            \"ref\": listRef,\n            \"selected\": selectedValues.value,\n            \"selectStrategy\": props.multiple ? \"independent\" : \"single-independent\",\n            \"onMousedown\": (e) => e.preventDefault(),\n            \"onKeydown\": onListKeydown,\n            \"onFocusin\": onFocusin,\n            \"onScrollPassive\": onListScroll,\n            \"tabindex\": \"-1\",\n            \"aria-live\": \"polite\",\n            \"color\": props.itemColor ?? props.color\n          }, props.listProps), {\n            default: () => [slots[\"prepend-item\"]?.(), !displayItems.value.length && !props.hideNoData && (slots[\"no-data\"]?.() ?? _createVNode(VListItem, {\n              \"title\": t(props.noDataText)\n            }, null)), _createVNode(VVirtualScroll, {\n              \"ref\": vVirtualScrollRef,\n              \"renderless\": true,\n              \"items\": displayItems.value\n            }, {\n              default: (_ref2) => {\n                let {\n                  item,\n                  index,\n                  itemRef\n                } = _ref2;\n                const itemProps = mergeProps(item.props, {\n                  ref: itemRef,\n                  key: index,\n                  onClick: () => select(item, null)\n                });\n                return slots.item?.({\n                  item,\n                  index,\n                  props: itemProps\n                }) ?? _createVNode(VListItem, _mergeProps(itemProps, {\n                  \"role\": \"option\"\n                }), {\n                  prepend: (_ref3) => {\n                    let {\n                      isSelected\n                    } = _ref3;\n                    return _createVNode(_Fragment, null, [props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\n                      \"key\": item.value,\n                      \"modelValue\": isSelected,\n                      \"ripple\": false,\n                      \"tabindex\": \"-1\"\n                    }, null) : void 0, item.props.prependAvatar && _createVNode(VAvatar, {\n                      \"image\": item.props.prependAvatar\n                    }, null), item.props.prependIcon && _createVNode(VIcon, {\n                      \"icon\": item.props.prependIcon\n                    }, null)]);\n                  }\n                });\n              }\n            }), slots[\"append-item\"]?.()]\n          })]\n        }), model.value.map((item, index) => {\n          function onChipClose(e) {\n            e.stopPropagation();\n            e.preventDefault();\n            select(item, false);\n          }\n          const slotProps = {\n            \"onClick:close\": onChipClose,\n            onMousedown(e) {\n              e.preventDefault();\n              e.stopPropagation();\n            },\n            modelValue: true,\n            \"onUpdate:modelValue\": void 0\n          };\n          const hasSlot = hasChips ? !!slots.chip : !!slots.selection;\n          const slotContent = hasSlot ? ensureValidVNode(hasChips ? slots.chip({\n            item,\n            index,\n            props: slotProps\n          }) : slots.selection({\n            item,\n            index\n          })) : void 0;\n          if (hasSlot && !slotContent)\n            return void 0;\n          return _createVNode(\"div\", {\n            \"key\": item.value,\n            \"class\": \"v-select__selection\"\n          }, [hasChips ? !slots.chip ? _createVNode(VChip, _mergeProps({\n            \"key\": \"chip\",\n            \"closable\": props.closableChips,\n            \"size\": \"small\",\n            \"text\": item.title,\n            \"disabled\": item.props.disabled\n          }, slotProps), null) : _createVNode(VDefaultsProvider, {\n            \"key\": \"chip-defaults\",\n            \"defaults\": {\n              VChip: {\n                closable: props.closableChips,\n                size: \"small\",\n                text: item.title\n              }\n            }\n          }, {\n            default: () => [slotContent]\n          }) : slotContent ?? _createVNode(\"span\", {\n            \"class\": \"v-select__selection-text\"\n          }, [item.title, props.multiple && index < model.value.length - 1 && _createVNode(\"span\", {\n            \"class\": \"v-select__selection-comma\"\n          }, [_createTextVNode(\",\")])])]);\n        })]),\n        \"append-inner\": function() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          return _createVNode(_Fragment, null, [slots[\"append-inner\"]?.(...args), props.menuIcon ? _createVNode(VIcon, {\n            \"class\": \"v-select__menu-icon\",\n            \"icon\": props.menuIcon\n          }, null) : void 0]);\n        }\n      });\n    });\n    return forwardRefs({\n      isFocused,\n      menu,\n      select\n    }, vTextFieldRef);\n  }\n});\n",
      "start": 1731941048248,
      "end": 1731941048475,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VSelect/VSelect.mjs\"],\n  \"sourcesContent\": [\"import { createTextVNode as _createTextVNode, mergeProps as _mergeProps, createVNode as _createVNode, Fragment as _Fragment } from \\\"vue\\\";\\n// Styles\\nimport \\\"./VSelect.css\\\";\\n\\n// Components\\nimport { VDialogTransition } from \\\"../transitions/index.mjs\\\";\\nimport { VAvatar } from \\\"../VAvatar/index.mjs\\\";\\nimport { VCheckboxBtn } from \\\"../VCheckbox/index.mjs\\\";\\nimport { VChip } from \\\"../VChip/index.mjs\\\";\\nimport { VDefaultsProvider } from \\\"../VDefaultsProvider/index.mjs\\\";\\nimport { VIcon } from \\\"../VIcon/index.mjs\\\";\\nimport { VList, VListItem } from \\\"../VList/index.mjs\\\";\\nimport { VMenu } from \\\"../VMenu/index.mjs\\\";\\nimport { makeVTextFieldProps, VTextField } from \\\"../VTextField/VTextField.mjs\\\";\\nimport { VVirtualScroll } from \\\"../VVirtualScroll/index.mjs\\\"; // Composables\\nimport { useScrolling } from \\\"./useScrolling.mjs\\\";\\nimport { useForm } from \\\"../../composables/form.mjs\\\";\\nimport { forwardRefs } from \\\"../../composables/forwardRefs.mjs\\\";\\nimport { IconValue } from \\\"../../composables/icons.mjs\\\";\\nimport { makeItemsProps, useItems } from \\\"../../composables/list-items.mjs\\\";\\nimport { useLocale } from \\\"../../composables/locale.mjs\\\";\\nimport { useProxiedModel } from \\\"../../composables/proxiedModel.mjs\\\";\\nimport { makeTransitionProps } from \\\"../../composables/transition.mjs\\\"; // Utilities\\nimport { computed, mergeProps, nextTick, ref, shallowRef, watch } from 'vue';\\nimport { ensureValidVNode, genericComponent, IN_BROWSER, matchesSelector, omit, propsFactory, useRender, wrapInArray } from \\\"../../util/index.mjs\\\"; // Types\\nexport const makeSelectProps = propsFactory({\\n  chips: Boolean,\\n  closableChips: Boolean,\\n  closeText: {\\n    type: String,\\n    default: '$vuetify.close'\\n  },\\n  openText: {\\n    type: String,\\n    default: '$vuetify.open'\\n  },\\n  eager: Boolean,\\n  hideNoData: Boolean,\\n  hideSelected: Boolean,\\n  listProps: {\\n    type: Object\\n  },\\n  menu: Boolean,\\n  menuIcon: {\\n    type: IconValue,\\n    default: '$dropdown'\\n  },\\n  menuProps: {\\n    type: Object\\n  },\\n  multiple: Boolean,\\n  noDataText: {\\n    type: String,\\n    default: '$vuetify.noDataText'\\n  },\\n  openOnClear: Boolean,\\n  itemColor: String,\\n  ...makeItemsProps({\\n    itemChildren: false\\n  })\\n}, 'Select');\\nexport const makeVSelectProps = propsFactory({\\n  ...makeSelectProps(),\\n  ...omit(makeVTextFieldProps({\\n    modelValue: null,\\n    role: 'combobox'\\n  }), ['validationValue', 'dirty', 'appendInnerIcon']),\\n  ...makeTransitionProps({\\n    transition: {\\n      component: VDialogTransition\\n    }\\n  })\\n}, 'VSelect');\\nexport const VSelect = genericComponent()({\\n  name: 'VSelect',\\n  props: makeVSelectProps(),\\n  emits: {\\n    'update:focused': focused => true,\\n    'update:modelValue': value => true,\\n    'update:menu': ue => true\\n  },\\n  setup(props, _ref) {\\n    let {\\n      slots\\n    } = _ref;\\n    const {\\n      t\\n    } = useLocale();\\n    const vTextFieldRef = ref();\\n    const vMenuRef = ref();\\n    const vVirtualScrollRef = ref();\\n    const _menu = useProxiedModel(props, 'menu');\\n    const menu = computed({\\n      get: () => _menu.value,\\n      set: v => {\\n        if (_menu.value && !v && vMenuRef.value?.Î¨openChildren) return;\\n        _menu.value = v;\\n      }\\n    });\\n    const {\\n      items,\\n      transformIn,\\n      transformOut\\n    } = useItems(props);\\n    const model = useProxiedModel(props, 'modelValue', [], v => transformIn(v === null ? [null] : wrapInArray(v)), v => {\\n      const transformed = transformOut(v);\\n      return props.multiple ? transformed : transformed[0] ?? null;\\n    });\\n    const counterValue = computed(() => {\\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : typeof props.counterValue === 'number' ? props.counterValue : model.value.length;\\n    });\\n    const form = useForm();\\n    const selectedValues = computed(() => model.value.map(selection => selection.value));\\n    const isFocused = shallowRef(false);\\n    const label = computed(() => menu.value ? props.closeText : props.openText);\\n    let keyboardLookupPrefix = '';\\n    let keyboardLookupLastTime;\\n    const displayItems = computed(() => {\\n      if (props.hideSelected) {\\n        return items.value.filter(item => !model.value.some(s => s === item));\\n      }\\n      return items.value;\\n    });\\n    const menuDisabled = computed(() => props.hideNoData && !displayItems.value.length || props.readonly || form?.isReadonly.value);\\n    const computedMenuProps = computed(() => {\\n      return {\\n        ...props.menuProps,\\n        activatorProps: {\\n          ...(props.menuProps?.activatorProps || {}),\\n          'aria-haspopup': 'listbox' // Set aria-haspopup to 'listbox'\\n        }\\n      };\\n    });\\n    const listRef = ref();\\n    const {\\n      onListScroll,\\n      onListKeydown\\n    } = useScrolling(listRef, vTextFieldRef);\\n    function onClear(e) {\\n      if (props.openOnClear) {\\n        menu.value = true;\\n      }\\n    }\\n    function onMousedownControl() {\\n      if (menuDisabled.value) return;\\n      menu.value = !menu.value;\\n    }\\n    function onKeydown(e) {\\n      if (!e.key || props.readonly || form?.isReadonly.value) return;\\n      if (['Enter', ' ', 'ArrowDown', 'ArrowUp', 'Home', 'End'].includes(e.key)) {\\n        e.preventDefault();\\n      }\\n      if (['Enter', 'ArrowDown', ' '].includes(e.key)) {\\n        menu.value = true;\\n      }\\n      if (['Escape', 'Tab'].includes(e.key)) {\\n        menu.value = false;\\n      }\\n      if (e.key === 'Home') {\\n        listRef.value?.focus('first');\\n      } else if (e.key === 'End') {\\n        listRef.value?.focus('last');\\n      }\\n\\n      // html select hotkeys\\n      const KEYBOARD_LOOKUP_THRESHOLD = 1000; // milliseconds\\n\\n      function checkPrintable(e) {\\n        const isPrintableChar = e.key.length === 1;\\n        const noModifier = !e.ctrlKey && !e.metaKey && !e.altKey;\\n        return isPrintableChar && noModifier;\\n      }\\n      if (props.multiple || !checkPrintable(e)) return;\\n      const now = performance.now();\\n      if (now - keyboardLookupLastTime > KEYBOARD_LOOKUP_THRESHOLD) {\\n        keyboardLookupPrefix = '';\\n      }\\n      keyboardLookupPrefix += e.key.toLowerCase();\\n      keyboardLookupLastTime = now;\\n      const item = items.value.find(item => item.title.toLowerCase().startsWith(keyboardLookupPrefix));\\n      if (item !== undefined) {\\n        model.value = [item];\\n      }\\n    }\\n\\n    /** @param set - null means toggle */\\n    function select(item) {\\n      let set = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\\n      if (item.props.disabled) return;\\n      if (props.multiple) {\\n        const index = model.value.findIndex(selection => props.valueComparator(selection.value, item.value));\\n        const add = set == null ? !~index : set;\\n        if (~index) {\\n          const value = add ? [...model.value, item] : [...model.value];\\n          value.splice(index, 1);\\n          model.value = value;\\n        } else if (add) {\\n          model.value = [...model.value, item];\\n        }\\n      } else {\\n        const add = set !== false;\\n        model.value = add ? [item] : [];\\n        nextTick(() => {\\n          menu.value = false;\\n        });\\n      }\\n    }\\n    function onBlur(e) {\\n      if (!listRef.value?.$el.contains(e.relatedTarget)) {\\n        menu.value = false;\\n      }\\n    }\\n    function onAfterLeave() {\\n      if (isFocused.value) {\\n        vTextFieldRef.value?.focus();\\n      }\\n    }\\n    function onFocusin(e) {\\n      isFocused.value = true;\\n    }\\n    function onModelUpdate(v) {\\n      if (v == null) model.value = [];else if (matchesSelector(vTextFieldRef.value, ':autofill') || matchesSelector(vTextFieldRef.value, ':-webkit-autofill')) {\\n        const item = items.value.find(item => item.title === v);\\n        if (item) {\\n          select(item);\\n        }\\n      } else if (vTextFieldRef.value) {\\n        vTextFieldRef.value.value = '';\\n      }\\n    }\\n    watch(menu, () => {\\n      if (!props.hideSelected && menu.value && model.value.length) {\\n        const index = displayItems.value.findIndex(item => model.value.some(s => props.valueComparator(s.value, item.value)));\\n        IN_BROWSER && window.requestAnimationFrame(() => {\\n          index >= 0 && vVirtualScrollRef.value?.scrollToIndex(index);\\n        });\\n      }\\n    });\\n    watch(() => props.items, (newVal, oldVal) => {\\n      if (menu.value) return;\\n      if (isFocused.value && !oldVal.length && newVal.length) {\\n        menu.value = true;\\n      }\\n    });\\n    useRender(() => {\\n      const hasChips = !!(props.chips || slots.chip);\\n      const hasList = !!(!props.hideNoData || displayItems.value.length || slots['prepend-item'] || slots['append-item'] || slots['no-data']);\\n      const isDirty = model.value.length > 0;\\n      const textFieldProps = VTextField.filterProps(props);\\n      const placeholder = isDirty || !isFocused.value && props.label && !props.persistentPlaceholder ? undefined : props.placeholder;\\n      return _createVNode(VTextField, _mergeProps({\\n        \\\"ref\\\": vTextFieldRef\\n      }, textFieldProps, {\\n        \\\"modelValue\\\": model.value.map(v => v.props.value).join(', '),\\n        \\\"onUpdate:modelValue\\\": onModelUpdate,\\n        \\\"focused\\\": isFocused.value,\\n        \\\"onUpdate:focused\\\": $event => isFocused.value = $event,\\n        \\\"validationValue\\\": model.externalValue,\\n        \\\"counterValue\\\": counterValue.value,\\n        \\\"dirty\\\": isDirty,\\n        \\\"class\\\": ['v-select', {\\n          'v-select--active-menu': menu.value,\\n          'v-select--chips': !!props.chips,\\n          [`v-select--${props.multiple ? 'multiple' : 'single'}`]: true,\\n          'v-select--selected': model.value.length,\\n          'v-select--selection-slot': !!slots.selection\\n        }, props.class],\\n        \\\"style\\\": props.style,\\n        \\\"inputmode\\\": \\\"none\\\",\\n        \\\"placeholder\\\": placeholder,\\n        \\\"onClick:clear\\\": onClear,\\n        \\\"onMousedown:control\\\": onMousedownControl,\\n        \\\"onBlur\\\": onBlur,\\n        \\\"onKeydown\\\": onKeydown,\\n        \\\"aria-label\\\": t(label.value),\\n        \\\"title\\\": t(label.value)\\n      }), {\\n        ...slots,\\n        default: () => _createVNode(_Fragment, null, [_createVNode(VMenu, _mergeProps({\\n          \\\"ref\\\": vMenuRef,\\n          \\\"modelValue\\\": menu.value,\\n          \\\"onUpdate:modelValue\\\": $event => menu.value = $event,\\n          \\\"activator\\\": \\\"parent\\\",\\n          \\\"contentClass\\\": \\\"v-select__content\\\",\\n          \\\"disabled\\\": menuDisabled.value,\\n          \\\"eager\\\": props.eager,\\n          \\\"maxHeight\\\": 310,\\n          \\\"openOnClick\\\": false,\\n          \\\"closeOnContentClick\\\": false,\\n          \\\"transition\\\": props.transition,\\n          \\\"onAfterLeave\\\": onAfterLeave\\n        }, computedMenuProps.value), {\\n          default: () => [hasList && _createVNode(VList, _mergeProps({\\n            \\\"ref\\\": listRef,\\n            \\\"selected\\\": selectedValues.value,\\n            \\\"selectStrategy\\\": props.multiple ? 'independent' : 'single-independent',\\n            \\\"onMousedown\\\": e => e.preventDefault(),\\n            \\\"onKeydown\\\": onListKeydown,\\n            \\\"onFocusin\\\": onFocusin,\\n            \\\"onScrollPassive\\\": onListScroll,\\n            \\\"tabindex\\\": \\\"-1\\\",\\n            \\\"aria-live\\\": \\\"polite\\\",\\n            \\\"color\\\": props.itemColor ?? props.color\\n          }, props.listProps), {\\n            default: () => [slots['prepend-item']?.(), !displayItems.value.length && !props.hideNoData && (slots['no-data']?.() ?? _createVNode(VListItem, {\\n              \\\"title\\\": t(props.noDataText)\\n            }, null)), _createVNode(VVirtualScroll, {\\n              \\\"ref\\\": vVirtualScrollRef,\\n              \\\"renderless\\\": true,\\n              \\\"items\\\": displayItems.value\\n            }, {\\n              default: _ref2 => {\\n                let {\\n                  item,\\n                  index,\\n                  itemRef\\n                } = _ref2;\\n                const itemProps = mergeProps(item.props, {\\n                  ref: itemRef,\\n                  key: index,\\n                  onClick: () => select(item, null)\\n                });\\n                return slots.item?.({\\n                  item,\\n                  index,\\n                  props: itemProps\\n                }) ?? _createVNode(VListItem, _mergeProps(itemProps, {\\n                  \\\"role\\\": \\\"option\\\"\\n                }), {\\n                  prepend: _ref3 => {\\n                    let {\\n                      isSelected\\n                    } = _ref3;\\n                    return _createVNode(_Fragment, null, [props.multiple && !props.hideSelected ? _createVNode(VCheckboxBtn, {\\n                      \\\"key\\\": item.value,\\n                      \\\"modelValue\\\": isSelected,\\n                      \\\"ripple\\\": false,\\n                      \\\"tabindex\\\": \\\"-1\\\"\\n                    }, null) : undefined, item.props.prependAvatar && _createVNode(VAvatar, {\\n                      \\\"image\\\": item.props.prependAvatar\\n                    }, null), item.props.prependIcon && _createVNode(VIcon, {\\n                      \\\"icon\\\": item.props.prependIcon\\n                    }, null)]);\\n                  }\\n                });\\n              }\\n            }), slots['append-item']?.()]\\n          })]\\n        }), model.value.map((item, index) => {\\n          function onChipClose(e) {\\n            e.stopPropagation();\\n            e.preventDefault();\\n            select(item, false);\\n          }\\n          const slotProps = {\\n            'onClick:close': onChipClose,\\n            onMousedown(e) {\\n              e.preventDefault();\\n              e.stopPropagation();\\n            },\\n            modelValue: true,\\n            'onUpdate:modelValue': undefined\\n          };\\n          const hasSlot = hasChips ? !!slots.chip : !!slots.selection;\\n          const slotContent = hasSlot ? ensureValidVNode(hasChips ? slots.chip({\\n            item,\\n            index,\\n            props: slotProps\\n          }) : slots.selection({\\n            item,\\n            index\\n          })) : undefined;\\n          if (hasSlot && !slotContent) return undefined;\\n          return _createVNode(\\\"div\\\", {\\n            \\\"key\\\": item.value,\\n            \\\"class\\\": \\\"v-select__selection\\\"\\n          }, [hasChips ? !slots.chip ? _createVNode(VChip, _mergeProps({\\n            \\\"key\\\": \\\"chip\\\",\\n            \\\"closable\\\": props.closableChips,\\n            \\\"size\\\": \\\"small\\\",\\n            \\\"text\\\": item.title,\\n            \\\"disabled\\\": item.props.disabled\\n          }, slotProps), null) : _createVNode(VDefaultsProvider, {\\n            \\\"key\\\": \\\"chip-defaults\\\",\\n            \\\"defaults\\\": {\\n              VChip: {\\n                closable: props.closableChips,\\n                size: 'small',\\n                text: item.title\\n              }\\n            }\\n          }, {\\n            default: () => [slotContent]\\n          }) : slotContent ?? _createVNode(\\\"span\\\", {\\n            \\\"class\\\": \\\"v-select__selection-text\\\"\\n          }, [item.title, props.multiple && index < model.value.length - 1 && _createVNode(\\\"span\\\", {\\n            \\\"class\\\": \\\"v-select__selection-comma\\\"\\n          }, [_createTextVNode(\\\",\\\")])])]);\\n        })]),\\n        'append-inner': function () {\\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\\n            args[_key] = arguments[_key];\\n          }\\n          return _createVNode(_Fragment, null, [slots['append-inner']?.(...args), props.menuIcon ? _createVNode(VIcon, {\\n            \\\"class\\\": \\\"v-select__menu-icon\\\",\\n            \\\"icon\\\": props.menuIcon\\n          }, null) : undefined]);\\n        }\\n      });\\n    });\\n    return forwardRefs({\\n      isFocused,\\n      menu,\\n      select\\n    }, vTextFieldRef);\\n  }\\n});\\n//# sourceMappingURL=VSelect.mjs.map\"],\n  \"mappings\": \"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\",\n  \"names\": [\"e\", \"item\"]\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941048476,
      "end": 1731941048476,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941048476,
      "end": 1731941048477,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941048476,
      "end": 1731941048477,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941048477,
      "end": 1731941048477,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941048477,
      "end": 1731941048477,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941048477,
      "end": 1731941048477,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941048477,
      "end": 1731941048477,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1731941048477,
      "end": 1731941048477,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941048477,
      "end": 1731941048477,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941048477,
      "end": 1731941048480,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941048480,
      "end": 1731941048480,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941048480,
      "end": 1731941048480,
      "order": "normal"
    }
  ]
}
