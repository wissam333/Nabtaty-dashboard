{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VOverlay/useActivator.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Components\nimport { VMenuSymbol } from \"../VMenu/shared.mjs\"; // Composables\nimport { makeDelayProps, useDelay } from \"../../composables/delay.mjs\"; // Utilities\nimport { computed, effectScope, inject, mergeProps, nextTick, onScopeDispose, ref, watch, watchEffect } from 'vue';\nimport { bindProps, getCurrentInstance, IN_BROWSER, matchesSelector, propsFactory, refElement, unbindProps } from \"../../util/index.mjs\"; // Types\nexport const makeActivatorProps = propsFactory({\n  target: [String, Object],\n  activator: [String, Object],\n  activatorProps: {\n    type: Object,\n    default: () => ({})\n  },\n  openOnClick: {\n    type: Boolean,\n    default: undefined\n  },\n  openOnHover: Boolean,\n  openOnFocus: {\n    type: Boolean,\n    default: undefined\n  },\n  closeOnContentClick: Boolean,\n  ...makeDelayProps()\n}, 'VOverlay-activator');\nexport function useActivator(props, _ref) {\n  let {\n    isActive,\n    isTop\n  } = _ref;\n  const vm = getCurrentInstance('useActivator');\n  const activatorEl = ref();\n  let isHovered = false;\n  let isFocused = false;\n  let firstEnter = true;\n  const openOnFocus = computed(() => props.openOnFocus || props.openOnFocus == null && props.openOnHover);\n  const openOnClick = computed(() => props.openOnClick || props.openOnClick == null && !props.openOnHover && !openOnFocus.value);\n  const {\n    runOpenDelay,\n    runCloseDelay\n  } = useDelay(props, value => {\n    if (value === (props.openOnHover && isHovered || openOnFocus.value && isFocused) && !(props.openOnHover && isActive.value && !isTop.value)) {\n      if (isActive.value !== value) {\n        firstEnter = true;\n      }\n      isActive.value = value;\n    }\n  });\n  const cursorTarget = ref();\n  const availableEvents = {\n    onClick: e => {\n      e.stopPropagation();\n      activatorEl.value = e.currentTarget || e.target;\n      if (!isActive.value) {\n        cursorTarget.value = [e.clientX, e.clientY];\n      }\n      isActive.value = !isActive.value;\n    },\n    onMouseenter: e => {\n      if (e.sourceCapabilities?.firesTouchEvents) return;\n      isHovered = true;\n      activatorEl.value = e.currentTarget || e.target;\n      runOpenDelay();\n    },\n    onMouseleave: e => {\n      isHovered = false;\n      runCloseDelay();\n    },\n    onFocus: e => {\n      if (matchesSelector(e.target, ':focus-visible') === false) return;\n      isFocused = true;\n      e.stopPropagation();\n      activatorEl.value = e.currentTarget || e.target;\n      runOpenDelay();\n    },\n    onBlur: e => {\n      isFocused = false;\n      e.stopPropagation();\n      runCloseDelay();\n    }\n  };\n  const activatorEvents = computed(() => {\n    const events = {};\n    if (openOnClick.value) {\n      events.onClick = availableEvents.onClick;\n    }\n    if (props.openOnHover) {\n      events.onMouseenter = availableEvents.onMouseenter;\n      events.onMouseleave = availableEvents.onMouseleave;\n    }\n    if (openOnFocus.value) {\n      events.onFocus = availableEvents.onFocus;\n      events.onBlur = availableEvents.onBlur;\n    }\n    return events;\n  });\n  const contentEvents = computed(() => {\n    const events = {};\n    if (props.openOnHover) {\n      events.onMouseenter = () => {\n        isHovered = true;\n        runOpenDelay();\n      };\n      events.onMouseleave = () => {\n        isHovered = false;\n        runCloseDelay();\n      };\n    }\n    if (openOnFocus.value) {\n      events.onFocusin = () => {\n        isFocused = true;\n        runOpenDelay();\n      };\n      events.onFocusout = () => {\n        isFocused = false;\n        runCloseDelay();\n      };\n    }\n    if (props.closeOnContentClick) {\n      const menu = inject(VMenuSymbol, null);\n      events.onClick = () => {\n        isActive.value = false;\n        menu?.closeParents();\n      };\n    }\n    return events;\n  });\n  const scrimEvents = computed(() => {\n    const events = {};\n    if (props.openOnHover) {\n      events.onMouseenter = () => {\n        if (firstEnter) {\n          isHovered = true;\n          firstEnter = false;\n          runOpenDelay();\n        }\n      };\n      events.onMouseleave = () => {\n        isHovered = false;\n        runCloseDelay();\n      };\n    }\n    return events;\n  });\n  watch(isTop, val => {\n    if (val && (props.openOnHover && !isHovered && (!openOnFocus.value || !isFocused) || openOnFocus.value && !isFocused && (!props.openOnHover || !isHovered))) {\n      isActive.value = false;\n    }\n  });\n  watch(isActive, val => {\n    if (!val) {\n      setTimeout(() => {\n        cursorTarget.value = undefined;\n      });\n    }\n  }, {\n    flush: 'post'\n  });\n  const activatorRef = ref();\n  watchEffect(() => {\n    if (!activatorRef.value) return;\n    nextTick(() => {\n      activatorEl.value = refElement(activatorRef.value);\n    });\n  });\n  const targetRef = ref();\n  const target = computed(() => {\n    if (props.target === 'cursor' && cursorTarget.value) return cursorTarget.value;\n    if (targetRef.value) return refElement(targetRef.value);\n    return getTarget(props.target, vm) || activatorEl.value;\n  });\n  const targetEl = computed(() => {\n    return Array.isArray(target.value) ? undefined : target.value;\n  });\n  let scope;\n  watch(() => !!props.activator, val => {\n    if (val && IN_BROWSER) {\n      scope = effectScope();\n      scope.run(() => {\n        _useActivator(props, vm, {\n          activatorEl,\n          activatorEvents\n        });\n      });\n    } else if (scope) {\n      scope.stop();\n    }\n  }, {\n    flush: 'post',\n    immediate: true\n  });\n  onScopeDispose(() => {\n    scope?.stop();\n  });\n  return {\n    activatorEl,\n    activatorRef,\n    target,\n    targetEl,\n    targetRef,\n    activatorEvents,\n    contentEvents,\n    scrimEvents\n  };\n}\nfunction _useActivator(props, vm, _ref2) {\n  let {\n    activatorEl,\n    activatorEvents\n  } = _ref2;\n  watch(() => props.activator, (val, oldVal) => {\n    if (oldVal && val !== oldVal) {\n      const activator = getActivator(oldVal);\n      activator && unbindActivatorProps(activator);\n    }\n    if (val) {\n      nextTick(() => bindActivatorProps());\n    }\n  }, {\n    immediate: true\n  });\n  watch(() => props.activatorProps, () => {\n    bindActivatorProps();\n  });\n  onScopeDispose(() => {\n    unbindActivatorProps();\n  });\n  function bindActivatorProps() {\n    let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getActivator();\n    let _props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.activatorProps;\n    if (!el) return;\n    bindProps(el, mergeProps(activatorEvents.value, _props));\n  }\n  function unbindActivatorProps() {\n    let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getActivator();\n    let _props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.activatorProps;\n    if (!el) return;\n    unbindProps(el, mergeProps(activatorEvents.value, _props));\n  }\n  function getActivator() {\n    let selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : props.activator;\n    const activator = getTarget(selector, vm);\n\n    // The activator should only be a valid element (Ignore comments and text nodes)\n    activatorEl.value = activator?.nodeType === Node.ELEMENT_NODE ? activator : undefined;\n    return activatorEl.value;\n  }\n}\nfunction getTarget(selector, vm) {\n  if (!selector) return;\n  let target;\n  if (selector === 'parent') {\n    let el = vm?.proxy?.$el?.parentNode;\n    while (el?.hasAttribute('data-no-activator')) {\n      el = el.parentNode;\n    }\n    target = el;\n  } else if (typeof selector === 'string') {\n    // Selector\n    target = document.querySelector(selector);\n  } else if ('$el' in selector) {\n    // Component (ref)\n    target = selector.$el;\n  } else {\n    // HTMLElement | Element | [x, y]\n    target = selector;\n  }\n  return target;\n}\n//# sourceMappingURL=useActivator.mjs.map",
      "start": 1731941051064,
      "end": 1731941051285,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941051285,
      "end": 1731941051285,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941051285,
      "end": 1731941051285,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941051285,
      "end": 1731941051285,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941051285,
      "end": 1731941051285,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941051285,
      "end": 1731941051285,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941051285,
      "end": 1731941051285,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941051285,
      "end": 1731941051285,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1731941051286,
      "end": 1731941051286,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941051286,
      "end": 1731941051286,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941051286,
      "end": 1731941051286,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941051286,
      "end": 1731941051286,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941051286,
      "end": 1731941051286,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941051286,
      "end": 1731941051286,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941051286,
      "end": 1731941051286,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941051286,
      "end": 1731941051286,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941051286,
      "end": 1731941051286,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941051286,
      "end": 1731941051286,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941051286,
      "end": 1731941051286,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941051286,
      "end": 1731941051286,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941051286,
      "end": 1731941051286,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941051286,
      "end": 1731941051287,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { VMenuSymbol } from \"../VMenu/shared.mjs\";\nimport { makeDelayProps, useDelay } from \"../../composables/delay.mjs\";\nimport { computed, effectScope, inject, mergeProps, nextTick, onScopeDispose, ref, watch, watchEffect } from \"vue\";\nimport { bindProps, getCurrentInstance, IN_BROWSER, matchesSelector, propsFactory, refElement, unbindProps } from \"../../util/index.mjs\";\nexport const makeActivatorProps = propsFactory({\n  target: [String, Object],\n  activator: [String, Object],\n  activatorProps: {\n    type: Object,\n    default: () => ({})\n  },\n  openOnClick: {\n    type: Boolean,\n    default: void 0\n  },\n  openOnHover: Boolean,\n  openOnFocus: {\n    type: Boolean,\n    default: void 0\n  },\n  closeOnContentClick: Boolean,\n  ...makeDelayProps()\n}, \"VOverlay-activator\");\nexport function useActivator(props, _ref) {\n  let {\n    isActive,\n    isTop\n  } = _ref;\n  const vm = getCurrentInstance(\"useActivator\");\n  const activatorEl = ref();\n  let isHovered = false;\n  let isFocused = false;\n  let firstEnter = true;\n  const openOnFocus = computed(() => props.openOnFocus || props.openOnFocus == null && props.openOnHover);\n  const openOnClick = computed(() => props.openOnClick || props.openOnClick == null && !props.openOnHover && !openOnFocus.value);\n  const {\n    runOpenDelay,\n    runCloseDelay\n  } = useDelay(props, (value) => {\n    if (value === (props.openOnHover && isHovered || openOnFocus.value && isFocused) && !(props.openOnHover && isActive.value && !isTop.value)) {\n      if (isActive.value !== value) {\n        firstEnter = true;\n      }\n      isActive.value = value;\n    }\n  });\n  const cursorTarget = ref();\n  const availableEvents = {\n    onClick: (e) => {\n      e.stopPropagation();\n      activatorEl.value = e.currentTarget || e.target;\n      if (!isActive.value) {\n        cursorTarget.value = [e.clientX, e.clientY];\n      }\n      isActive.value = !isActive.value;\n    },\n    onMouseenter: (e) => {\n      if (e.sourceCapabilities?.firesTouchEvents)\n        return;\n      isHovered = true;\n      activatorEl.value = e.currentTarget || e.target;\n      runOpenDelay();\n    },\n    onMouseleave: (e) => {\n      isHovered = false;\n      runCloseDelay();\n    },\n    onFocus: (e) => {\n      if (matchesSelector(e.target, \":focus-visible\") === false)\n        return;\n      isFocused = true;\n      e.stopPropagation();\n      activatorEl.value = e.currentTarget || e.target;\n      runOpenDelay();\n    },\n    onBlur: (e) => {\n      isFocused = false;\n      e.stopPropagation();\n      runCloseDelay();\n    }\n  };\n  const activatorEvents = computed(() => {\n    const events = {};\n    if (openOnClick.value) {\n      events.onClick = availableEvents.onClick;\n    }\n    if (props.openOnHover) {\n      events.onMouseenter = availableEvents.onMouseenter;\n      events.onMouseleave = availableEvents.onMouseleave;\n    }\n    if (openOnFocus.value) {\n      events.onFocus = availableEvents.onFocus;\n      events.onBlur = availableEvents.onBlur;\n    }\n    return events;\n  });\n  const contentEvents = computed(() => {\n    const events = {};\n    if (props.openOnHover) {\n      events.onMouseenter = () => {\n        isHovered = true;\n        runOpenDelay();\n      };\n      events.onMouseleave = () => {\n        isHovered = false;\n        runCloseDelay();\n      };\n    }\n    if (openOnFocus.value) {\n      events.onFocusin = () => {\n        isFocused = true;\n        runOpenDelay();\n      };\n      events.onFocusout = () => {\n        isFocused = false;\n        runCloseDelay();\n      };\n    }\n    if (props.closeOnContentClick) {\n      const menu = inject(VMenuSymbol, null);\n      events.onClick = () => {\n        isActive.value = false;\n        menu?.closeParents();\n      };\n    }\n    return events;\n  });\n  const scrimEvents = computed(() => {\n    const events = {};\n    if (props.openOnHover) {\n      events.onMouseenter = () => {\n        if (firstEnter) {\n          isHovered = true;\n          firstEnter = false;\n          runOpenDelay();\n        }\n      };\n      events.onMouseleave = () => {\n        isHovered = false;\n        runCloseDelay();\n      };\n    }\n    return events;\n  });\n  watch(isTop, (val) => {\n    if (val && (props.openOnHover && !isHovered && (!openOnFocus.value || !isFocused) || openOnFocus.value && !isFocused && (!props.openOnHover || !isHovered))) {\n      isActive.value = false;\n    }\n  });\n  watch(isActive, (val) => {\n    if (!val) {\n      setTimeout(() => {\n        cursorTarget.value = void 0;\n      });\n    }\n  }, {\n    flush: \"post\"\n  });\n  const activatorRef = ref();\n  watchEffect(() => {\n    if (!activatorRef.value)\n      return;\n    nextTick(() => {\n      activatorEl.value = refElement(activatorRef.value);\n    });\n  });\n  const targetRef = ref();\n  const target = computed(() => {\n    if (props.target === \"cursor\" && cursorTarget.value)\n      return cursorTarget.value;\n    if (targetRef.value)\n      return refElement(targetRef.value);\n    return getTarget(props.target, vm) || activatorEl.value;\n  });\n  const targetEl = computed(() => {\n    return Array.isArray(target.value) ? void 0 : target.value;\n  });\n  let scope;\n  watch(() => !!props.activator, (val) => {\n    if (val && IN_BROWSER) {\n      scope = effectScope();\n      scope.run(() => {\n        _useActivator(props, vm, {\n          activatorEl,\n          activatorEvents\n        });\n      });\n    } else if (scope) {\n      scope.stop();\n    }\n  }, {\n    flush: \"post\",\n    immediate: true\n  });\n  onScopeDispose(() => {\n    scope?.stop();\n  });\n  return {\n    activatorEl,\n    activatorRef,\n    target,\n    targetEl,\n    targetRef,\n    activatorEvents,\n    contentEvents,\n    scrimEvents\n  };\n}\nfunction _useActivator(props, vm, _ref2) {\n  let {\n    activatorEl,\n    activatorEvents\n  } = _ref2;\n  watch(() => props.activator, (val, oldVal) => {\n    if (oldVal && val !== oldVal) {\n      const activator = getActivator(oldVal);\n      activator && unbindActivatorProps(activator);\n    }\n    if (val) {\n      nextTick(() => bindActivatorProps());\n    }\n  }, {\n    immediate: true\n  });\n  watch(() => props.activatorProps, () => {\n    bindActivatorProps();\n  });\n  onScopeDispose(() => {\n    unbindActivatorProps();\n  });\n  function bindActivatorProps() {\n    let el = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : getActivator();\n    let _props = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : props.activatorProps;\n    if (!el)\n      return;\n    bindProps(el, mergeProps(activatorEvents.value, _props));\n  }\n  function unbindActivatorProps() {\n    let el = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : getActivator();\n    let _props = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : props.activatorProps;\n    if (!el)\n      return;\n    unbindProps(el, mergeProps(activatorEvents.value, _props));\n  }\n  function getActivator() {\n    let selector = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : props.activator;\n    const activator = getTarget(selector, vm);\n    activatorEl.value = activator?.nodeType === Node.ELEMENT_NODE ? activator : void 0;\n    return activatorEl.value;\n  }\n}\nfunction getTarget(selector, vm) {\n  if (!selector)\n    return;\n  let target;\n  if (selector === \"parent\") {\n    let el = vm?.proxy?.$el?.parentNode;\n    while (el?.hasAttribute(\"data-no-activator\")) {\n      el = el.parentNode;\n    }\n    target = el;\n  } else if (typeof selector === \"string\") {\n    target = (void 0).querySelector(selector);\n  } else if (\"$el\" in selector) {\n    target = selector.$el;\n  } else {\n    target = selector;\n  }\n  return target;\n}\n",
      "start": 1731941051287,
      "end": 1731941051384,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VOverlay/useActivator.mjs\"],\n  \"sourcesContent\": [\"// Components\\nimport { VMenuSymbol } from \\\"../VMenu/shared.mjs\\\"; // Composables\\nimport { makeDelayProps, useDelay } from \\\"../../composables/delay.mjs\\\"; // Utilities\\nimport { computed, effectScope, inject, mergeProps, nextTick, onScopeDispose, ref, watch, watchEffect } from 'vue';\\nimport { bindProps, getCurrentInstance, IN_BROWSER, matchesSelector, propsFactory, refElement, unbindProps } from \\\"../../util/index.mjs\\\"; // Types\\nexport const makeActivatorProps = propsFactory({\\n  target: [String, Object],\\n  activator: [String, Object],\\n  activatorProps: {\\n    type: Object,\\n    default: () => ({})\\n  },\\n  openOnClick: {\\n    type: Boolean,\\n    default: undefined\\n  },\\n  openOnHover: Boolean,\\n  openOnFocus: {\\n    type: Boolean,\\n    default: undefined\\n  },\\n  closeOnContentClick: Boolean,\\n  ...makeDelayProps()\\n}, 'VOverlay-activator');\\nexport function useActivator(props, _ref) {\\n  let {\\n    isActive,\\n    isTop\\n  } = _ref;\\n  const vm = getCurrentInstance('useActivator');\\n  const activatorEl = ref();\\n  let isHovered = false;\\n  let isFocused = false;\\n  let firstEnter = true;\\n  const openOnFocus = computed(() => props.openOnFocus || props.openOnFocus == null && props.openOnHover);\\n  const openOnClick = computed(() => props.openOnClick || props.openOnClick == null && !props.openOnHover && !openOnFocus.value);\\n  const {\\n    runOpenDelay,\\n    runCloseDelay\\n  } = useDelay(props, value => {\\n    if (value === (props.openOnHover && isHovered || openOnFocus.value && isFocused) && !(props.openOnHover && isActive.value && !isTop.value)) {\\n      if (isActive.value !== value) {\\n        firstEnter = true;\\n      }\\n      isActive.value = value;\\n    }\\n  });\\n  const cursorTarget = ref();\\n  const availableEvents = {\\n    onClick: e => {\\n      e.stopPropagation();\\n      activatorEl.value = e.currentTarget || e.target;\\n      if (!isActive.value) {\\n        cursorTarget.value = [e.clientX, e.clientY];\\n      }\\n      isActive.value = !isActive.value;\\n    },\\n    onMouseenter: e => {\\n      if (e.sourceCapabilities?.firesTouchEvents) return;\\n      isHovered = true;\\n      activatorEl.value = e.currentTarget || e.target;\\n      runOpenDelay();\\n    },\\n    onMouseleave: e => {\\n      isHovered = false;\\n      runCloseDelay();\\n    },\\n    onFocus: e => {\\n      if (matchesSelector(e.target, ':focus-visible') === false) return;\\n      isFocused = true;\\n      e.stopPropagation();\\n      activatorEl.value = e.currentTarget || e.target;\\n      runOpenDelay();\\n    },\\n    onBlur: e => {\\n      isFocused = false;\\n      e.stopPropagation();\\n      runCloseDelay();\\n    }\\n  };\\n  const activatorEvents = computed(() => {\\n    const events = {};\\n    if (openOnClick.value) {\\n      events.onClick = availableEvents.onClick;\\n    }\\n    if (props.openOnHover) {\\n      events.onMouseenter = availableEvents.onMouseenter;\\n      events.onMouseleave = availableEvents.onMouseleave;\\n    }\\n    if (openOnFocus.value) {\\n      events.onFocus = availableEvents.onFocus;\\n      events.onBlur = availableEvents.onBlur;\\n    }\\n    return events;\\n  });\\n  const contentEvents = computed(() => {\\n    const events = {};\\n    if (props.openOnHover) {\\n      events.onMouseenter = () => {\\n        isHovered = true;\\n        runOpenDelay();\\n      };\\n      events.onMouseleave = () => {\\n        isHovered = false;\\n        runCloseDelay();\\n      };\\n    }\\n    if (openOnFocus.value) {\\n      events.onFocusin = () => {\\n        isFocused = true;\\n        runOpenDelay();\\n      };\\n      events.onFocusout = () => {\\n        isFocused = false;\\n        runCloseDelay();\\n      };\\n    }\\n    if (props.closeOnContentClick) {\\n      const menu = inject(VMenuSymbol, null);\\n      events.onClick = () => {\\n        isActive.value = false;\\n        menu?.closeParents();\\n      };\\n    }\\n    return events;\\n  });\\n  const scrimEvents = computed(() => {\\n    const events = {};\\n    if (props.openOnHover) {\\n      events.onMouseenter = () => {\\n        if (firstEnter) {\\n          isHovered = true;\\n          firstEnter = false;\\n          runOpenDelay();\\n        }\\n      };\\n      events.onMouseleave = () => {\\n        isHovered = false;\\n        runCloseDelay();\\n      };\\n    }\\n    return events;\\n  });\\n  watch(isTop, val => {\\n    if (val && (props.openOnHover && !isHovered && (!openOnFocus.value || !isFocused) || openOnFocus.value && !isFocused && (!props.openOnHover || !isHovered))) {\\n      isActive.value = false;\\n    }\\n  });\\n  watch(isActive, val => {\\n    if (!val) {\\n      setTimeout(() => {\\n        cursorTarget.value = undefined;\\n      });\\n    }\\n  }, {\\n    flush: 'post'\\n  });\\n  const activatorRef = ref();\\n  watchEffect(() => {\\n    if (!activatorRef.value) return;\\n    nextTick(() => {\\n      activatorEl.value = refElement(activatorRef.value);\\n    });\\n  });\\n  const targetRef = ref();\\n  const target = computed(() => {\\n    if (props.target === 'cursor' && cursorTarget.value) return cursorTarget.value;\\n    if (targetRef.value) return refElement(targetRef.value);\\n    return getTarget(props.target, vm) || activatorEl.value;\\n  });\\n  const targetEl = computed(() => {\\n    return Array.isArray(target.value) ? undefined : target.value;\\n  });\\n  let scope;\\n  watch(() => !!props.activator, val => {\\n    if (val && IN_BROWSER) {\\n      scope = effectScope();\\n      scope.run(() => {\\n        _useActivator(props, vm, {\\n          activatorEl,\\n          activatorEvents\\n        });\\n      });\\n    } else if (scope) {\\n      scope.stop();\\n    }\\n  }, {\\n    flush: 'post',\\n    immediate: true\\n  });\\n  onScopeDispose(() => {\\n    scope?.stop();\\n  });\\n  return {\\n    activatorEl,\\n    activatorRef,\\n    target,\\n    targetEl,\\n    targetRef,\\n    activatorEvents,\\n    contentEvents,\\n    scrimEvents\\n  };\\n}\\nfunction _useActivator(props, vm, _ref2) {\\n  let {\\n    activatorEl,\\n    activatorEvents\\n  } = _ref2;\\n  watch(() => props.activator, (val, oldVal) => {\\n    if (oldVal && val !== oldVal) {\\n      const activator = getActivator(oldVal);\\n      activator && unbindActivatorProps(activator);\\n    }\\n    if (val) {\\n      nextTick(() => bindActivatorProps());\\n    }\\n  }, {\\n    immediate: true\\n  });\\n  watch(() => props.activatorProps, () => {\\n    bindActivatorProps();\\n  });\\n  onScopeDispose(() => {\\n    unbindActivatorProps();\\n  });\\n  function bindActivatorProps() {\\n    let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getActivator();\\n    let _props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.activatorProps;\\n    if (!el) return;\\n    bindProps(el, mergeProps(activatorEvents.value, _props));\\n  }\\n  function unbindActivatorProps() {\\n    let el = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getActivator();\\n    let _props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : props.activatorProps;\\n    if (!el) return;\\n    unbindProps(el, mergeProps(activatorEvents.value, _props));\\n  }\\n  function getActivator() {\\n    let selector = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : props.activator;\\n    const activator = getTarget(selector, vm);\\n\\n    // The activator should only be a valid element (Ignore comments and text nodes)\\n    activatorEl.value = activator?.nodeType === Node.ELEMENT_NODE ? activator : undefined;\\n    return activatorEl.value;\\n  }\\n}\\nfunction getTarget(selector, vm) {\\n  if (!selector) return;\\n  let target;\\n  if (selector === 'parent') {\\n    let el = vm?.proxy?.$el?.parentNode;\\n    while (el?.hasAttribute('data-no-activator')) {\\n      el = el.parentNode;\\n    }\\n    target = el;\\n  } else if (typeof selector === 'string') {\\n    // Selector\\n    target = document.querySelector(selector);\\n  } else if ('$el' in selector) {\\n    // Component (ref)\\n    target = selector.$el;\\n  } else {\\n    // HTMLElement | Element | [x, y]\\n    target = selector;\\n  }\\n  return target;\\n}\\n//# sourceMappingURL=useActivator.mjs.map\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1731941051384,
      "end": 1731941051384,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941051384,
      "end": 1731941051384,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941051384,
      "end": 1731941051384,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941051384,
      "end": 1731941051384,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941051384,
      "end": 1731941051384,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941051384,
      "end": 1731941051384,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941051385,
      "end": 1731941051385,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941051385,
      "end": 1731941051385,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941051385,
      "end": 1731941051385,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941051385,
      "end": 1731941051385,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941051385,
      "end": 1731941051385,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941051385,
      "end": 1731941051385,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941051385,
      "end": 1731941051385,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941051385,
      "end": 1731941051385,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941051385,
      "end": 1731941051385,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941051385,
      "end": 1731941051385,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941051385,
      "end": 1731941051385,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941051386,
      "end": 1731941051386,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941051386,
      "end": 1731941051386,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941051386,
      "end": 1731941051386,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941051386,
      "end": 1731941051386,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941051386,
      "end": 1731941051386,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941051386,
      "end": 1731941051386,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1731941051386,
      "end": 1731941051386,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941051386,
      "end": 1731941051386,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941051387,
      "end": 1731941051387,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941051387,
      "end": 1731941051387,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941051387,
      "end": 1731941051387,
      "order": "normal"
    }
  ]
}
