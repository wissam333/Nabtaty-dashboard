{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/composables/theme.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "// Utilities\nimport { computed, inject, provide, ref, watch, watchEffect } from 'vue';\nimport { createRange, darken, getCurrentInstance, getForeground, getLuma, IN_BROWSER, lighten, mergeDeep, parseColor, propsFactory, RGBtoHex } from \"../util/index.mjs\"; // Types\nexport const ThemeSymbol = Symbol.for('vuetify:theme');\nexport const makeThemeProps = propsFactory({\n  theme: String\n}, 'theme');\nfunction genDefaults() {\n  return {\n    defaultTheme: 'light',\n    variations: {\n      colors: [],\n      lighten: 0,\n      darken: 0\n    },\n    themes: {\n      light: {\n        dark: false,\n        colors: {\n          background: '#FFFFFF',\n          surface: '#FFFFFF',\n          'surface-bright': '#FFFFFF',\n          'surface-light': '#EEEEEE',\n          'surface-variant': '#424242',\n          'on-surface-variant': '#EEEEEE',\n          primary: '#1867C0',\n          'primary-darken-1': '#1F5592',\n          secondary: '#48A9A6',\n          'secondary-darken-1': '#018786',\n          error: '#B00020',\n          info: '#2196F3',\n          success: '#4CAF50',\n          warning: '#FB8C00'\n        },\n        variables: {\n          'border-color': '#000000',\n          'border-opacity': 0.12,\n          'high-emphasis-opacity': 0.87,\n          'medium-emphasis-opacity': 0.60,\n          'disabled-opacity': 0.38,\n          'idle-opacity': 0.04,\n          'hover-opacity': 0.04,\n          'focus-opacity': 0.12,\n          'selected-opacity': 0.08,\n          'activated-opacity': 0.12,\n          'pressed-opacity': 0.12,\n          'dragged-opacity': 0.08,\n          'theme-kbd': '#212529',\n          'theme-on-kbd': '#FFFFFF',\n          'theme-code': '#F5F5F5',\n          'theme-on-code': '#000000'\n        }\n      },\n      dark: {\n        dark: true,\n        colors: {\n          background: '#121212',\n          surface: '#212121',\n          'surface-bright': '#ccbfd6',\n          'surface-light': '#424242',\n          'surface-variant': '#a3a3a3',\n          'on-surface-variant': '#424242',\n          primary: '#2196F3',\n          'primary-darken-1': '#277CC1',\n          secondary: '#54B6B2',\n          'secondary-darken-1': '#48A9A6',\n          error: '#CF6679',\n          info: '#2196F3',\n          success: '#4CAF50',\n          warning: '#FB8C00'\n        },\n        variables: {\n          'border-color': '#FFFFFF',\n          'border-opacity': 0.12,\n          'high-emphasis-opacity': 1,\n          'medium-emphasis-opacity': 0.70,\n          'disabled-opacity': 0.50,\n          'idle-opacity': 0.10,\n          'hover-opacity': 0.04,\n          'focus-opacity': 0.12,\n          'selected-opacity': 0.08,\n          'activated-opacity': 0.12,\n          'pressed-opacity': 0.16,\n          'dragged-opacity': 0.08,\n          'theme-kbd': '#212529',\n          'theme-on-kbd': '#FFFFFF',\n          'theme-code': '#343434',\n          'theme-on-code': '#CCCCCC'\n        }\n      }\n    }\n  };\n}\nfunction parseThemeOptions() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : genDefaults();\n  const defaults = genDefaults();\n  if (!options) return {\n    ...defaults,\n    isDisabled: true\n  };\n  const themes = {};\n  for (const [key, theme] of Object.entries(options.themes ?? {})) {\n    const defaultTheme = theme.dark || key === 'dark' ? defaults.themes?.dark : defaults.themes?.light;\n    themes[key] = mergeDeep(defaultTheme, theme);\n  }\n  return mergeDeep(defaults, {\n    ...options,\n    themes\n  });\n}\n\n// Composables\nexport function createTheme(options) {\n  const parsedOptions = parseThemeOptions(options);\n  const name = ref(parsedOptions.defaultTheme);\n  const themes = ref(parsedOptions.themes);\n  const computedThemes = computed(() => {\n    const acc = {};\n    for (const [name, original] of Object.entries(themes.value)) {\n      const theme = acc[name] = {\n        ...original,\n        colors: {\n          ...original.colors\n        }\n      };\n      if (parsedOptions.variations) {\n        for (const name of parsedOptions.variations.colors) {\n          const color = theme.colors[name];\n          if (!color) continue;\n          for (const variation of ['lighten', 'darken']) {\n            const fn = variation === 'lighten' ? lighten : darken;\n            for (const amount of createRange(parsedOptions.variations[variation], 1)) {\n              theme.colors[`${name}-${variation}-${amount}`] = RGBtoHex(fn(parseColor(color), amount));\n            }\n          }\n        }\n      }\n      for (const color of Object.keys(theme.colors)) {\n        if (/^on-[a-z]/.test(color) || theme.colors[`on-${color}`]) continue;\n        const onColor = `on-${color}`;\n        const colorVal = parseColor(theme.colors[color]);\n        theme.colors[onColor] = getForeground(colorVal);\n      }\n    }\n    return acc;\n  });\n  const current = computed(() => computedThemes.value[name.value]);\n  const styles = computed(() => {\n    const lines = [];\n    if (current.value.dark) {\n      createCssClass(lines, ':root', ['color-scheme: dark']);\n    }\n    createCssClass(lines, ':root', genCssVariables(current.value));\n    for (const [themeName, theme] of Object.entries(computedThemes.value)) {\n      createCssClass(lines, `.v-theme--${themeName}`, [`color-scheme: ${theme.dark ? 'dark' : 'normal'}`, ...genCssVariables(theme)]);\n    }\n    const bgLines = [];\n    const fgLines = [];\n    const colors = new Set(Object.values(computedThemes.value).flatMap(theme => Object.keys(theme.colors)));\n    for (const key of colors) {\n      if (/^on-[a-z]/.test(key)) {\n        createCssClass(fgLines, `.${key}`, [`color: rgb(var(--v-theme-${key})) !important`]);\n      } else {\n        createCssClass(bgLines, `.bg-${key}`, [`--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`, `background-color: rgb(var(--v-theme-${key})) !important`, `color: rgb(var(--v-theme-on-${key})) !important`]);\n        createCssClass(fgLines, `.text-${key}`, [`color: rgb(var(--v-theme-${key})) !important`]);\n        createCssClass(fgLines, `.border-${key}`, [`--v-border-color: var(--v-theme-${key})`]);\n      }\n    }\n    lines.push(...bgLines, ...fgLines);\n    return lines.map((str, i) => i === 0 ? str : `    ${str}`).join('');\n  });\n  function getHead() {\n    return {\n      style: [{\n        children: styles.value,\n        id: 'vuetify-theme-stylesheet',\n        nonce: parsedOptions.cspNonce || false\n      }]\n    };\n  }\n  function install(app) {\n    if (parsedOptions.isDisabled) return;\n    const head = app._context.provides.usehead;\n    if (head) {\n      if (head.push) {\n        const entry = head.push(getHead);\n        if (IN_BROWSER) {\n          watch(styles, () => {\n            entry.patch(getHead);\n          });\n        }\n      } else {\n        if (IN_BROWSER) {\n          head.addHeadObjs(computed(getHead));\n          watchEffect(() => head.updateDOM());\n        } else {\n          head.addHeadObjs(getHead());\n        }\n      }\n    } else {\n      let styleEl = IN_BROWSER ? document.getElementById('vuetify-theme-stylesheet') : null;\n      if (IN_BROWSER) {\n        watch(styles, updateStyles, {\n          immediate: true\n        });\n      } else {\n        updateStyles();\n      }\n      function updateStyles() {\n        if (typeof document !== 'undefined' && !styleEl) {\n          const el = document.createElement('style');\n          el.type = 'text/css';\n          el.id = 'vuetify-theme-stylesheet';\n          if (parsedOptions.cspNonce) el.setAttribute('nonce', parsedOptions.cspNonce);\n          styleEl = el;\n          document.head.appendChild(styleEl);\n        }\n        if (styleEl) styleEl.innerHTML = styles.value;\n      }\n    }\n  }\n  const themeClasses = computed(() => parsedOptions.isDisabled ? undefined : `v-theme--${name.value}`);\n  return {\n    install,\n    isDisabled: parsedOptions.isDisabled,\n    name,\n    themes,\n    current,\n    computedThemes,\n    themeClasses,\n    styles,\n    global: {\n      name,\n      current\n    }\n  };\n}\nexport function provideTheme(props) {\n  getCurrentInstance('provideTheme');\n  const theme = inject(ThemeSymbol, null);\n  if (!theme) throw new Error('Could not find Vuetify theme injection');\n  const name = computed(() => {\n    return props.theme ?? theme.name.value;\n  });\n  const current = computed(() => theme.themes.value[name.value]);\n  const themeClasses = computed(() => theme.isDisabled ? undefined : `v-theme--${name.value}`);\n  const newTheme = {\n    ...theme,\n    name,\n    current,\n    themeClasses\n  };\n  provide(ThemeSymbol, newTheme);\n  return newTheme;\n}\nexport function useTheme() {\n  getCurrentInstance('useTheme');\n  const theme = inject(ThemeSymbol, null);\n  if (!theme) throw new Error('Could not find Vuetify theme injection');\n  return theme;\n}\nfunction createCssClass(lines, selector, content) {\n  lines.push(`${selector} {\\n`, ...content.map(line => `  ${line};\\n`), '}\\n');\n}\nfunction genCssVariables(theme) {\n  const lightOverlay = theme.dark ? 2 : 1;\n  const darkOverlay = theme.dark ? 1 : 2;\n  const variables = [];\n  for (const [key, value] of Object.entries(theme.colors)) {\n    const rgb = parseColor(value);\n    variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`);\n    if (!key.startsWith('on-')) {\n      variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`);\n    }\n  }\n  for (const [key, value] of Object.entries(theme.variables)) {\n    const color = typeof value === 'string' && value.startsWith('#') ? parseColor(value) : undefined;\n    const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : undefined;\n    variables.push(`--v-${key}: ${rgb ?? value}`);\n  }\n  return variables;\n}\n//# sourceMappingURL=theme.mjs.map",
      "start": 1731941044532,
      "end": 1731941044775,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941044775,
      "end": 1731941044775,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941044775,
      "end": 1731941044775,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941044775,
      "end": 1731941044775,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941044775,
      "end": 1731941044775,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941044775,
      "end": 1731941044775,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941044775,
      "end": 1731941044775,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941044775,
      "end": 1731941044775,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1731941044775,
      "end": 1731941044775,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941044775,
      "end": 1731941044775,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941044775,
      "end": 1731941044775,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941044775,
      "end": 1731941044775,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941044775,
      "end": 1731941044775,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941044775,
      "end": 1731941044775,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941044775,
      "end": 1731941044775,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941044775,
      "end": 1731941044776,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941044775,
      "end": 1731941044776,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941044776,
      "end": 1731941044776,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941044776,
      "end": 1731941044776,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941044776,
      "end": 1731941044776,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941044776,
      "end": 1731941044776,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941044776,
      "end": 1731941044778,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { computed, inject, provide, ref, watch, watchEffect } from \"vue\";\nimport { createRange, darken, getCurrentInstance, getForeground, getLuma, IN_BROWSER, lighten, mergeDeep, parseColor, propsFactory, RGBtoHex } from \"../util/index.mjs\";\nexport const ThemeSymbol = Symbol.for(\"vuetify:theme\");\nexport const makeThemeProps = propsFactory({\n  theme: String\n}, \"theme\");\nfunction genDefaults() {\n  return {\n    defaultTheme: \"light\",\n    variations: {\n      colors: [],\n      lighten: 0,\n      darken: 0\n    },\n    themes: {\n      light: {\n        dark: false,\n        colors: {\n          background: \"#FFFFFF\",\n          surface: \"#FFFFFF\",\n          \"surface-bright\": \"#FFFFFF\",\n          \"surface-light\": \"#EEEEEE\",\n          \"surface-variant\": \"#424242\",\n          \"on-surface-variant\": \"#EEEEEE\",\n          primary: \"#1867C0\",\n          \"primary-darken-1\": \"#1F5592\",\n          secondary: \"#48A9A6\",\n          \"secondary-darken-1\": \"#018786\",\n          error: \"#B00020\",\n          info: \"#2196F3\",\n          success: \"#4CAF50\",\n          warning: \"#FB8C00\"\n        },\n        variables: {\n          \"border-color\": \"#000000\",\n          \"border-opacity\": 0.12,\n          \"high-emphasis-opacity\": 0.87,\n          \"medium-emphasis-opacity\": 0.6,\n          \"disabled-opacity\": 0.38,\n          \"idle-opacity\": 0.04,\n          \"hover-opacity\": 0.04,\n          \"focus-opacity\": 0.12,\n          \"selected-opacity\": 0.08,\n          \"activated-opacity\": 0.12,\n          \"pressed-opacity\": 0.12,\n          \"dragged-opacity\": 0.08,\n          \"theme-kbd\": \"#212529\",\n          \"theme-on-kbd\": \"#FFFFFF\",\n          \"theme-code\": \"#F5F5F5\",\n          \"theme-on-code\": \"#000000\"\n        }\n      },\n      dark: {\n        dark: true,\n        colors: {\n          background: \"#121212\",\n          surface: \"#212121\",\n          \"surface-bright\": \"#ccbfd6\",\n          \"surface-light\": \"#424242\",\n          \"surface-variant\": \"#a3a3a3\",\n          \"on-surface-variant\": \"#424242\",\n          primary: \"#2196F3\",\n          \"primary-darken-1\": \"#277CC1\",\n          secondary: \"#54B6B2\",\n          \"secondary-darken-1\": \"#48A9A6\",\n          error: \"#CF6679\",\n          info: \"#2196F3\",\n          success: \"#4CAF50\",\n          warning: \"#FB8C00\"\n        },\n        variables: {\n          \"border-color\": \"#FFFFFF\",\n          \"border-opacity\": 0.12,\n          \"high-emphasis-opacity\": 1,\n          \"medium-emphasis-opacity\": 0.7,\n          \"disabled-opacity\": 0.5,\n          \"idle-opacity\": 0.1,\n          \"hover-opacity\": 0.04,\n          \"focus-opacity\": 0.12,\n          \"selected-opacity\": 0.08,\n          \"activated-opacity\": 0.12,\n          \"pressed-opacity\": 0.16,\n          \"dragged-opacity\": 0.08,\n          \"theme-kbd\": \"#212529\",\n          \"theme-on-kbd\": \"#FFFFFF\",\n          \"theme-code\": \"#343434\",\n          \"theme-on-code\": \"#CCCCCC\"\n        }\n      }\n    }\n  };\n}\nfunction parseThemeOptions() {\n  let options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : genDefaults();\n  const defaults = genDefaults();\n  if (!options)\n    return {\n      ...defaults,\n      isDisabled: true\n    };\n  const themes = {};\n  for (const [key, theme] of Object.entries(options.themes ?? {})) {\n    const defaultTheme = theme.dark || key === \"dark\" ? defaults.themes?.dark : defaults.themes?.light;\n    themes[key] = mergeDeep(defaultTheme, theme);\n  }\n  return mergeDeep(defaults, {\n    ...options,\n    themes\n  });\n}\nexport function createTheme(options) {\n  const parsedOptions = parseThemeOptions(options);\n  const name = ref(parsedOptions.defaultTheme);\n  const themes = ref(parsedOptions.themes);\n  const computedThemes = computed(() => {\n    const acc = {};\n    for (const [name2, original] of Object.entries(themes.value)) {\n      const theme = acc[name2] = {\n        ...original,\n        colors: {\n          ...original.colors\n        }\n      };\n      if (parsedOptions.variations) {\n        for (const name3 of parsedOptions.variations.colors) {\n          const color = theme.colors[name3];\n          if (!color)\n            continue;\n          for (const variation of [\"lighten\", \"darken\"]) {\n            const fn = variation === \"lighten\" ? lighten : darken;\n            for (const amount of createRange(parsedOptions.variations[variation], 1)) {\n              theme.colors[`${name3}-${variation}-${amount}`] = RGBtoHex(fn(parseColor(color), amount));\n            }\n          }\n        }\n      }\n      for (const color of Object.keys(theme.colors)) {\n        if (/^on-[a-z]/.test(color) || theme.colors[`on-${color}`])\n          continue;\n        const onColor = `on-${color}`;\n        const colorVal = parseColor(theme.colors[color]);\n        theme.colors[onColor] = getForeground(colorVal);\n      }\n    }\n    return acc;\n  });\n  const current = computed(() => computedThemes.value[name.value]);\n  const styles = computed(() => {\n    const lines = [];\n    if (current.value.dark) {\n      createCssClass(lines, \":root\", [\"color-scheme: dark\"]);\n    }\n    createCssClass(lines, \":root\", genCssVariables(current.value));\n    for (const [themeName, theme] of Object.entries(computedThemes.value)) {\n      createCssClass(lines, `.v-theme--${themeName}`, [`color-scheme: ${theme.dark ? \"dark\" : \"normal\"}`, ...genCssVariables(theme)]);\n    }\n    const bgLines = [];\n    const fgLines = [];\n    const colors = new Set(Object.values(computedThemes.value).flatMap((theme) => Object.keys(theme.colors)));\n    for (const key of colors) {\n      if (/^on-[a-z]/.test(key)) {\n        createCssClass(fgLines, `.${key}`, [`color: rgb(var(--v-theme-${key})) !important`]);\n      } else {\n        createCssClass(bgLines, `.bg-${key}`, [`--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`, `background-color: rgb(var(--v-theme-${key})) !important`, `color: rgb(var(--v-theme-on-${key})) !important`]);\n        createCssClass(fgLines, `.text-${key}`, [`color: rgb(var(--v-theme-${key})) !important`]);\n        createCssClass(fgLines, `.border-${key}`, [`--v-border-color: var(--v-theme-${key})`]);\n      }\n    }\n    lines.push(...bgLines, ...fgLines);\n    return lines.map((str, i) => i === 0 ? str : `    ${str}`).join(\"\");\n  });\n  function getHead() {\n    return {\n      style: [{\n        children: styles.value,\n        id: \"vuetify-theme-stylesheet\",\n        nonce: parsedOptions.cspNonce || false\n      }]\n    };\n  }\n  function install(app) {\n    if (parsedOptions.isDisabled)\n      return;\n    const head = app._context.provides.usehead;\n    if (head) {\n      if (head.push) {\n        const entry = head.push(getHead);\n        if (IN_BROWSER) {\n          watch(styles, () => {\n            entry.patch(getHead);\n          });\n        }\n      } else {\n        if (IN_BROWSER) {\n          head.addHeadObjs(computed(getHead));\n          watchEffect(() => head.updateDOM());\n        } else {\n          head.addHeadObjs(getHead());\n        }\n      }\n    } else {\n      let updateStyles = function() {\n        if (false) {\n          const el = (void 0).createElement(\"style\");\n          el.type = \"text/css\";\n          el.id = \"vuetify-theme-stylesheet\";\n          if (parsedOptions.cspNonce)\n            el.setAttribute(\"nonce\", parsedOptions.cspNonce);\n          styleEl = el;\n          (void 0).head.appendChild(styleEl);\n        }\n        if (styleEl)\n          styleEl.innerHTML = styles.value;\n      };\n      let styleEl = IN_BROWSER ? (void 0).getElementById(\"vuetify-theme-stylesheet\") : null;\n      if (IN_BROWSER) {\n        watch(styles, updateStyles, {\n          immediate: true\n        });\n      } else {\n        updateStyles();\n      }\n    }\n  }\n  const themeClasses = computed(() => parsedOptions.isDisabled ? void 0 : `v-theme--${name.value}`);\n  return {\n    install,\n    isDisabled: parsedOptions.isDisabled,\n    name,\n    themes,\n    current,\n    computedThemes,\n    themeClasses,\n    styles,\n    global: {\n      name,\n      current\n    }\n  };\n}\nexport function provideTheme(props) {\n  getCurrentInstance(\"provideTheme\");\n  const theme = inject(ThemeSymbol, null);\n  if (!theme)\n    throw new Error(\"Could not find Vuetify theme injection\");\n  const name = computed(() => {\n    return props.theme ?? theme.name.value;\n  });\n  const current = computed(() => theme.themes.value[name.value]);\n  const themeClasses = computed(() => theme.isDisabled ? void 0 : `v-theme--${name.value}`);\n  const newTheme = {\n    ...theme,\n    name,\n    current,\n    themeClasses\n  };\n  provide(ThemeSymbol, newTheme);\n  return newTheme;\n}\nexport function useTheme() {\n  getCurrentInstance(\"useTheme\");\n  const theme = inject(ThemeSymbol, null);\n  if (!theme)\n    throw new Error(\"Could not find Vuetify theme injection\");\n  return theme;\n}\nfunction createCssClass(lines, selector, content) {\n  lines.push(`${selector} {\n`, ...content.map((line) => `  ${line};\n`), \"}\\n\");\n}\nfunction genCssVariables(theme) {\n  const lightOverlay = theme.dark ? 2 : 1;\n  const darkOverlay = theme.dark ? 1 : 2;\n  const variables = [];\n  for (const [key, value] of Object.entries(theme.colors)) {\n    const rgb = parseColor(value);\n    variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`);\n    if (!key.startsWith(\"on-\")) {\n      variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`);\n    }\n  }\n  for (const [key, value] of Object.entries(theme.variables)) {\n    const color = typeof value === \"string\" && value.startsWith(\"#\") ? parseColor(value) : void 0;\n    const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : void 0;\n    variables.push(`--v-${key}: ${rgb ?? value}`);\n  }\n  return variables;\n}\n",
      "start": 1731941044778,
      "end": 1731941045244,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/composables/theme.mjs\"],\n  \"sourcesContent\": [\"// Utilities\\nimport { computed, inject, provide, ref, watch, watchEffect } from 'vue';\\nimport { createRange, darken, getCurrentInstance, getForeground, getLuma, IN_BROWSER, lighten, mergeDeep, parseColor, propsFactory, RGBtoHex } from \\\"../util/index.mjs\\\"; // Types\\nexport const ThemeSymbol = Symbol.for('vuetify:theme');\\nexport const makeThemeProps = propsFactory({\\n  theme: String\\n}, 'theme');\\nfunction genDefaults() {\\n  return {\\n    defaultTheme: 'light',\\n    variations: {\\n      colors: [],\\n      lighten: 0,\\n      darken: 0\\n    },\\n    themes: {\\n      light: {\\n        dark: false,\\n        colors: {\\n          background: '#FFFFFF',\\n          surface: '#FFFFFF',\\n          'surface-bright': '#FFFFFF',\\n          'surface-light': '#EEEEEE',\\n          'surface-variant': '#424242',\\n          'on-surface-variant': '#EEEEEE',\\n          primary: '#1867C0',\\n          'primary-darken-1': '#1F5592',\\n          secondary: '#48A9A6',\\n          'secondary-darken-1': '#018786',\\n          error: '#B00020',\\n          info: '#2196F3',\\n          success: '#4CAF50',\\n          warning: '#FB8C00'\\n        },\\n        variables: {\\n          'border-color': '#000000',\\n          'border-opacity': 0.12,\\n          'high-emphasis-opacity': 0.87,\\n          'medium-emphasis-opacity': 0.60,\\n          'disabled-opacity': 0.38,\\n          'idle-opacity': 0.04,\\n          'hover-opacity': 0.04,\\n          'focus-opacity': 0.12,\\n          'selected-opacity': 0.08,\\n          'activated-opacity': 0.12,\\n          'pressed-opacity': 0.12,\\n          'dragged-opacity': 0.08,\\n          'theme-kbd': '#212529',\\n          'theme-on-kbd': '#FFFFFF',\\n          'theme-code': '#F5F5F5',\\n          'theme-on-code': '#000000'\\n        }\\n      },\\n      dark: {\\n        dark: true,\\n        colors: {\\n          background: '#121212',\\n          surface: '#212121',\\n          'surface-bright': '#ccbfd6',\\n          'surface-light': '#424242',\\n          'surface-variant': '#a3a3a3',\\n          'on-surface-variant': '#424242',\\n          primary: '#2196F3',\\n          'primary-darken-1': '#277CC1',\\n          secondary: '#54B6B2',\\n          'secondary-darken-1': '#48A9A6',\\n          error: '#CF6679',\\n          info: '#2196F3',\\n          success: '#4CAF50',\\n          warning: '#FB8C00'\\n        },\\n        variables: {\\n          'border-color': '#FFFFFF',\\n          'border-opacity': 0.12,\\n          'high-emphasis-opacity': 1,\\n          'medium-emphasis-opacity': 0.70,\\n          'disabled-opacity': 0.50,\\n          'idle-opacity': 0.10,\\n          'hover-opacity': 0.04,\\n          'focus-opacity': 0.12,\\n          'selected-opacity': 0.08,\\n          'activated-opacity': 0.12,\\n          'pressed-opacity': 0.16,\\n          'dragged-opacity': 0.08,\\n          'theme-kbd': '#212529',\\n          'theme-on-kbd': '#FFFFFF',\\n          'theme-code': '#343434',\\n          'theme-on-code': '#CCCCCC'\\n        }\\n      }\\n    }\\n  };\\n}\\nfunction parseThemeOptions() {\\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : genDefaults();\\n  const defaults = genDefaults();\\n  if (!options) return {\\n    ...defaults,\\n    isDisabled: true\\n  };\\n  const themes = {};\\n  for (const [key, theme] of Object.entries(options.themes ?? {})) {\\n    const defaultTheme = theme.dark || key === 'dark' ? defaults.themes?.dark : defaults.themes?.light;\\n    themes[key] = mergeDeep(defaultTheme, theme);\\n  }\\n  return mergeDeep(defaults, {\\n    ...options,\\n    themes\\n  });\\n}\\n\\n// Composables\\nexport function createTheme(options) {\\n  const parsedOptions = parseThemeOptions(options);\\n  const name = ref(parsedOptions.defaultTheme);\\n  const themes = ref(parsedOptions.themes);\\n  const computedThemes = computed(() => {\\n    const acc = {};\\n    for (const [name, original] of Object.entries(themes.value)) {\\n      const theme = acc[name] = {\\n        ...original,\\n        colors: {\\n          ...original.colors\\n        }\\n      };\\n      if (parsedOptions.variations) {\\n        for (const name of parsedOptions.variations.colors) {\\n          const color = theme.colors[name];\\n          if (!color) continue;\\n          for (const variation of ['lighten', 'darken']) {\\n            const fn = variation === 'lighten' ? lighten : darken;\\n            for (const amount of createRange(parsedOptions.variations[variation], 1)) {\\n              theme.colors[`${name}-${variation}-${amount}`] = RGBtoHex(fn(parseColor(color), amount));\\n            }\\n          }\\n        }\\n      }\\n      for (const color of Object.keys(theme.colors)) {\\n        if (/^on-[a-z]/.test(color) || theme.colors[`on-${color}`]) continue;\\n        const onColor = `on-${color}`;\\n        const colorVal = parseColor(theme.colors[color]);\\n        theme.colors[onColor] = getForeground(colorVal);\\n      }\\n    }\\n    return acc;\\n  });\\n  const current = computed(() => computedThemes.value[name.value]);\\n  const styles = computed(() => {\\n    const lines = [];\\n    if (current.value.dark) {\\n      createCssClass(lines, ':root', ['color-scheme: dark']);\\n    }\\n    createCssClass(lines, ':root', genCssVariables(current.value));\\n    for (const [themeName, theme] of Object.entries(computedThemes.value)) {\\n      createCssClass(lines, `.v-theme--${themeName}`, [`color-scheme: ${theme.dark ? 'dark' : 'normal'}`, ...genCssVariables(theme)]);\\n    }\\n    const bgLines = [];\\n    const fgLines = [];\\n    const colors = new Set(Object.values(computedThemes.value).flatMap(theme => Object.keys(theme.colors)));\\n    for (const key of colors) {\\n      if (/^on-[a-z]/.test(key)) {\\n        createCssClass(fgLines, `.${key}`, [`color: rgb(var(--v-theme-${key})) !important`]);\\n      } else {\\n        createCssClass(bgLines, `.bg-${key}`, [`--v-theme-overlay-multiplier: var(--v-theme-${key}-overlay-multiplier)`, `background-color: rgb(var(--v-theme-${key})) !important`, `color: rgb(var(--v-theme-on-${key})) !important`]);\\n        createCssClass(fgLines, `.text-${key}`, [`color: rgb(var(--v-theme-${key})) !important`]);\\n        createCssClass(fgLines, `.border-${key}`, [`--v-border-color: var(--v-theme-${key})`]);\\n      }\\n    }\\n    lines.push(...bgLines, ...fgLines);\\n    return lines.map((str, i) => i === 0 ? str : `    ${str}`).join('');\\n  });\\n  function getHead() {\\n    return {\\n      style: [{\\n        children: styles.value,\\n        id: 'vuetify-theme-stylesheet',\\n        nonce: parsedOptions.cspNonce || false\\n      }]\\n    };\\n  }\\n  function install(app) {\\n    if (parsedOptions.isDisabled) return;\\n    const head = app._context.provides.usehead;\\n    if (head) {\\n      if (head.push) {\\n        const entry = head.push(getHead);\\n        if (IN_BROWSER) {\\n          watch(styles, () => {\\n            entry.patch(getHead);\\n          });\\n        }\\n      } else {\\n        if (IN_BROWSER) {\\n          head.addHeadObjs(computed(getHead));\\n          watchEffect(() => head.updateDOM());\\n        } else {\\n          head.addHeadObjs(getHead());\\n        }\\n      }\\n    } else {\\n      let styleEl = IN_BROWSER ? document.getElementById('vuetify-theme-stylesheet') : null;\\n      if (IN_BROWSER) {\\n        watch(styles, updateStyles, {\\n          immediate: true\\n        });\\n      } else {\\n        updateStyles();\\n      }\\n      function updateStyles() {\\n        if (typeof document !== 'undefined' && !styleEl) {\\n          const el = document.createElement('style');\\n          el.type = 'text/css';\\n          el.id = 'vuetify-theme-stylesheet';\\n          if (parsedOptions.cspNonce) el.setAttribute('nonce', parsedOptions.cspNonce);\\n          styleEl = el;\\n          document.head.appendChild(styleEl);\\n        }\\n        if (styleEl) styleEl.innerHTML = styles.value;\\n      }\\n    }\\n  }\\n  const themeClasses = computed(() => parsedOptions.isDisabled ? undefined : `v-theme--${name.value}`);\\n  return {\\n    install,\\n    isDisabled: parsedOptions.isDisabled,\\n    name,\\n    themes,\\n    current,\\n    computedThemes,\\n    themeClasses,\\n    styles,\\n    global: {\\n      name,\\n      current\\n    }\\n  };\\n}\\nexport function provideTheme(props) {\\n  getCurrentInstance('provideTheme');\\n  const theme = inject(ThemeSymbol, null);\\n  if (!theme) throw new Error('Could not find Vuetify theme injection');\\n  const name = computed(() => {\\n    return props.theme ?? theme.name.value;\\n  });\\n  const current = computed(() => theme.themes.value[name.value]);\\n  const themeClasses = computed(() => theme.isDisabled ? undefined : `v-theme--${name.value}`);\\n  const newTheme = {\\n    ...theme,\\n    name,\\n    current,\\n    themeClasses\\n  };\\n  provide(ThemeSymbol, newTheme);\\n  return newTheme;\\n}\\nexport function useTheme() {\\n  getCurrentInstance('useTheme');\\n  const theme = inject(ThemeSymbol, null);\\n  if (!theme) throw new Error('Could not find Vuetify theme injection');\\n  return theme;\\n}\\nfunction createCssClass(lines, selector, content) {\\n  lines.push(`${selector} {\\\\n`, ...content.map(line => `  ${line};\\\\n`), '}\\\\n');\\n}\\nfunction genCssVariables(theme) {\\n  const lightOverlay = theme.dark ? 2 : 1;\\n  const darkOverlay = theme.dark ? 1 : 2;\\n  const variables = [];\\n  for (const [key, value] of Object.entries(theme.colors)) {\\n    const rgb = parseColor(value);\\n    variables.push(`--v-theme-${key}: ${rgb.r},${rgb.g},${rgb.b}`);\\n    if (!key.startsWith('on-')) {\\n      variables.push(`--v-theme-${key}-overlay-multiplier: ${getLuma(value) > 0.18 ? lightOverlay : darkOverlay}`);\\n    }\\n  }\\n  for (const [key, value] of Object.entries(theme.variables)) {\\n    const color = typeof value === 'string' && value.startsWith('#') ? parseColor(value) : undefined;\\n    const rgb = color ? `${color.r}, ${color.g}, ${color.b}` : undefined;\\n    variables.push(`--v-${key}: ${rgb ?? value}`);\\n  }\\n  return variables;\\n}\\n//# sourceMappingURL=theme.mjs.map\"],\n  \"mappings\": \"AACA,SAAS,UAAU,QAAQ,SAAS,KAAK,OAAO,mBAAmB;AACnE,SAAS,aAAa,QAAQ,oBAAoB,eAAe,SAAS,YAAY,SAAS,WAAW,YAAY,cAAc,gBAAgB;AAC7I,aAAM,cAAc,OAAO,IAAI,eAAe;AAC9C,aAAM,iBAAiB,aAAa;AAAA,EACzC,OAAO;AACT,GAAG,OAAO;AACV,SAAS,cAAc;AACrB,SAAO;AAAA,IACL,cAAc;AAAA,IACd,YAAY;AAAA,MACV,QAAQ,CAAC;AAAA,MACT,SAAS;AAAA,MACT,QAAQ;AAAA,IACV;AAAA,IACA,QAAQ;AAAA,MACN,OAAO;AAAA,QACL,MAAM;AAAA,QACN,QAAQ;AAAA,UACN,YAAY;AAAA,UACZ,SAAS;AAAA,UACT,kBAAkB;AAAA,UAClB,iBAAiB;AAAA,UACjB,mBAAmB;AAAA,UACnB,sBAAsB;AAAA,UACtB,SAAS;AAAA,UACT,oBAAoB;AAAA,UACpB,WAAW;AAAA,UACX,sBAAsB;AAAA,UACtB,OAAO;AAAA,UACP,MAAM;AAAA,UACN,SAAS;AAAA,UACT,SAAS;AAAA,QACX;AAAA,QACA,WAAW;AAAA,UACT,gBAAgB;AAAA,UAChB,kBAAkB;AAAA,UAClB,yBAAyB;AAAA,UACzB,2BAA2B;AAAA,UAC3B,oBAAoB;AAAA,UACpB,gBAAgB;AAAA,UAChB,iBAAiB;AAAA,UACjB,iBAAiB;AAAA,UACjB,oBAAoB;AAAA,UACpB,qBAAqB;AAAA,UACrB,mBAAmB;AAAA,UACnB,mBAAmB;AAAA,UACnB,aAAa;AAAA,UACb,gBAAgB;AAAA,UAChB,cAAc;AAAA,UACd,iBAAiB;AAAA,QACnB;AAAA,MACF;AAAA,MACA,MAAM;AAAA,QACJ,MAAM;AAAA,QACN,QAAQ;AAAA,UACN,YAAY;AAAA,UACZ,SAAS;AAAA,UACT,kBAAkB;AAAA,UAClB,iBAAiB;AAAA,UACjB,mBAAmB;AAAA,UACnB,sBAAsB;AAAA,UACtB,SAAS;AAAA,UACT,oBAAoB;AAAA,UACpB,WAAW;AAAA,UACX,sBAAsB;AAAA,UACtB,OAAO;AAAA,UACP,MAAM;AAAA,UACN,SAAS;AAAA,UACT,SAAS;AAAA,QACX;AAAA,QACA,WAAW;AAAA,UACT,gBAAgB;AAAA,UAChB,kBAAkB;AAAA,UAClB,yBAAyB;AAAA,UACzB,2BAA2B;AAAA,UAC3B,oBAAoB;AAAA,UACpB,gBAAgB;AAAA,UAChB,iBAAiB;AAAA,UACjB,iBAAiB;AAAA,UACjB,oBAAoB;AAAA,UACpB,qBAAqB;AAAA,UACrB,mBAAmB;AAAA,UACnB,mBAAmB;AAAA,UACnB,aAAa;AAAA,UACb,gBAAgB;AAAA,UAChB,cAAc;AAAA,UACd,iBAAiB;AAAA,QACnB;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF;AACA,SAAS,oBAAoB;AAC3B,MAAI,UAAU,UAAU,SAAS,KAAK,UAAU,CAAC,MAAM,SAAY,UAAU,CAAC,IAAI,YAAY;AAC9F,QAAM,WAAW,YAAY;AAC7B,MAAI,CAAC;AAAS,WAAO;AAAA,MACnB,GAAG;AAAA,MACH,YAAY;AAAA,IACd;AACA,QAAM,SAAS,CAAC;AAChB,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,QAAQ,UAAU,CAAC,CAAC,GAAG;AAC/D,UAAM,eAAe,MAAM,QAAQ,QAAQ,SAAS,SAAS,QAAQ,OAAO,SAAS,QAAQ;AAC7F,WAAO,GAAG,IAAI,UAAU,cAAc,KAAK;AAAA,EAC7C;AACA,SAAO,UAAU,UAAU;AAAA,IACzB,GAAG;AAAA,IACH;AAAA,EACF,CAAC;AACH;AAGO,gBAAS,YAAY,SAAS;AACnC,QAAM,gBAAgB,kBAAkB,OAAO;AAC/C,QAAM,OAAO,IAAI,cAAc,YAAY;AAC3C,QAAM,SAAS,IAAI,cAAc,MAAM;AACvC,QAAM,iBAAiB,SAAS,MAAM;AACpC,UAAM,MAAM,CAAC;AACb,eAAW,CAACA,OAAM,QAAQ,KAAK,OAAO,QAAQ,OAAO,KAAK,GAAG;AAC3D,YAAM,QAAQ,IAAIA,KAAI,IAAI;AAAA,QACxB,GAAG;AAAA,QACH,QAAQ;AAAA,UACN,GAAG,SAAS;AAAA,QACd;AAAA,MACF;AACA,UAAI,cAAc,YAAY;AAC5B,mBAAWA,SAAQ,cAAc,WAAW,QAAQ;AAClD,gBAAM,QAAQ,MAAM,OAAOA,KAAI;AAC/B,cAAI,CAAC;AAAO;AACZ,qBAAW,aAAa,CAAC,WAAW,QAAQ,GAAG;AAC7C,kBAAM,KAAK,cAAc,YAAY,UAAU;AAC/C,uBAAW,UAAU,YAAY,cAAc,WAAW,SAAS,GAAG,CAAC,GAAG;AACxE,oBAAM,OAAO,GAAGA,KAAI,IAAI,SAAS,IAAI,MAAM,EAAE,IAAI,SAAS,GAAG,WAAW,KAAK,GAAG,MAAM,CAAC;AAAA,YACzF;AAAA,UACF;AAAA,QACF;AAAA,MACF;AACA,iBAAW,SAAS,OAAO,KAAK,MAAM,MAAM,GAAG;AAC7C,YAAI,YAAY,KAAK,KAAK,KAAK,MAAM,OAAO,MAAM,KAAK,EAAE;AAAG;AAC5D,cAAM,UAAU,MAAM,KAAK;AAC3B,cAAM,WAAW,WAAW,MAAM,OAAO,KAAK,CAAC;AAC/C,cAAM,OAAO,OAAO,IAAI,cAAc,QAAQ;AAAA,MAChD;AAAA,IACF;AACA,WAAO;AAAA,EACT,CAAC;AACD,QAAM,UAAU,SAAS,MAAM,eAAe,MAAM,KAAK,KAAK,CAAC;AAC/D,QAAM,SAAS,SAAS,MAAM;AAC5B,UAAM,QAAQ,CAAC;AACf,QAAI,QAAQ,MAAM,MAAM;AACtB,qBAAe,OAAO,SAAS,CAAC,oBAAoB,CAAC;AAAA,IACvD;AACA,mBAAe,OAAO,SAAS,gBAAgB,QAAQ,KAAK,CAAC;AAC7D,eAAW,CAAC,WAAW,KAAK,KAAK,OAAO,QAAQ,eAAe,KAAK,GAAG;AACrE,qBAAe,OAAO,aAAa,SAAS,IAAI,CAAC,iBAAiB,MAAM,OAAO,SAAS,QAAQ,IAAI,GAAG,gBAAgB,KAAK,CAAC,CAAC;AAAA,IAChI;AACA,UAAM,UAAU,CAAC;AACjB,UAAM,UAAU,CAAC;AACjB,UAAM,SAAS,IAAI,IAAI,OAAO,OAAO,eAAe,KAAK,EAAE,QAAQ,WAAS,OAAO,KAAK,MAAM,MAAM,CAAC,CAAC;AACtG,eAAW,OAAO,QAAQ;AACxB,UAAI,YAAY,KAAK,GAAG,GAAG;AACzB,uBAAe,SAAS,IAAI,GAAG,IAAI,CAAC,4BAA4B,GAAG,eAAe,CAAC;AAAA,MACrF,OAAO;AACL,uBAAe,SAAS,OAAO,GAAG,IAAI,CAAC,+CAA+C,GAAG,wBAAwB,uCAAuC,GAAG,iBAAiB,+BAA+B,GAAG,eAAe,CAAC;AAC9N,uBAAe,SAAS,SAAS,GAAG,IAAI,CAAC,4BAA4B,GAAG,eAAe,CAAC;AACxF,uBAAe,SAAS,WAAW,GAAG,IAAI,CAAC,mCAAmC,GAAG,GAAG,CAAC;AAAA,MACvF;AAAA,IACF;AACA,UAAM,KAAK,GAAG,SAAS,GAAG,OAAO;AACjC,WAAO,MAAM,IAAI,CAAC,KAAK,MAAM,MAAM,IAAI,MAAM,OAAO,GAAG,EAAE,EAAE,KAAK,EAAE;AAAA,EACpE,CAAC;AACD,WAAS,UAAU;AACjB,WAAO;AAAA,MACL,OAAO,CAAC;AAAA,QACN,UAAU,OAAO;AAAA,QACjB,IAAI;AAAA,QACJ,OAAO,cAAc,YAAY;AAAA,MACnC,CAAC;AAAA,IACH;AAAA,EACF;AACA,WAAS,QAAQ,KAAK;AACpB,QAAI,cAAc;AAAY;AAC9B,UAAM,OAAO,IAAI,SAAS,SAAS;AACnC,QAAI,MAAM;AACR,UAAI,KAAK,MAAM;AACb,cAAM,QAAQ,KAAK,KAAK,OAAO;AAC/B,YAAI,YAAY;AACd,gBAAM,QAAQ,MAAM;AAClB,kBAAM,MAAM,OAAO;AAAA,UACrB,CAAC;AAAA,QACH;AAAA,MACF,OAAO;AACL,YAAI,YAAY;AACd,eAAK,YAAY,SAAS,OAAO,CAAC;AAClC,sBAAY,MAAM,KAAK,UAAU,CAAC;AAAA,QACpC,OAAO;AACL,eAAK,YAAY,QAAQ,CAAC;AAAA,QAC5B;AAAA,MACF;AAAA,IACF,OAAO;AASL,UAAS,eAAT,WAAwB;AACtB,YAAI,OAA6C;AAC/C,gBAAM,KAAK,SAAS,cAAc,OAAO;AACzC,aAAG,OAAO;AACV,aAAG,KAAK;AACR,cAAI,cAAc;AAAU,eAAG,aAAa,SAAS,cAAc,QAAQ;AAC3E,oBAAU;AACV,mBAAS,KAAK,YAAY,OAAO;AAAA,QACnC;AACA,YAAI;AAAS,kBAAQ,YAAY,OAAO;AAAA,MAC1C;AAlBA,UAAI,UAAU,aAAa,SAAS,eAAe,0BAA0B,IAAI;AACjF,UAAI,YAAY;AACd,cAAM,QAAQ,cAAc;AAAA,UAC1B,WAAW;AAAA,QACb,CAAC;AAAA,MACH,OAAO;AACL,qBAAa;AAAA,MACf;AAAA,IAYF;AAAA,EACF;AACA,QAAM,eAAe,SAAS,MAAM,cAAc,aAAa,SAAY,YAAY,KAAK,KAAK,EAAE;AACnG,SAAO;AAAA,IACL;AAAA,IACA,YAAY,cAAc;AAAA,IAC1B;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,MACN;AAAA,MACA;AAAA,IACF;AAAA,EACF;AACF;AACO,gBAAS,aAAa,OAAO;AAClC,qBAAmB,cAAc;AACjC,QAAM,QAAQ,OAAO,aAAa,IAAI;AACtC,MAAI,CAAC;AAAO,UAAM,IAAI,MAAM,wCAAwC;AACpE,QAAM,OAAO,SAAS,MAAM;AAC1B,WAAO,MAAM,SAAS,MAAM,KAAK;AAAA,EACnC,CAAC;AACD,QAAM,UAAU,SAAS,MAAM,MAAM,OAAO,MAAM,KAAK,KAAK,CAAC;AAC7D,QAAM,eAAe,SAAS,MAAM,MAAM,aAAa,SAAY,YAAY,KAAK,KAAK,EAAE;AAC3F,QAAM,WAAW;AAAA,IACf,GAAG;AAAA,IACH;AAAA,IACA;AAAA,IACA;AAAA,EACF;AACA,UAAQ,aAAa,QAAQ;AAC7B,SAAO;AACT;AACO,gBAAS,WAAW;AACzB,qBAAmB,UAAU;AAC7B,QAAM,QAAQ,OAAO,aAAa,IAAI;AACtC,MAAI,CAAC;AAAO,UAAM,IAAI,MAAM,wCAAwC;AACpE,SAAO;AACT;AACA,SAAS,eAAe,OAAO,UAAU,SAAS;AAChD,QAAM,KAAK,GAAG,QAAQ;AAAA,GAAQ,GAAG,QAAQ,IAAI,UAAQ,KAAK,IAAI;AAAA,CAAK,GAAG,KAAK;AAC7E;AACA,SAAS,gBAAgB,OAAO;AAC9B,QAAM,eAAe,MAAM,OAAO,IAAI;AACtC,QAAM,cAAc,MAAM,OAAO,IAAI;AACrC,QAAM,YAAY,CAAC;AACnB,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,MAAM,GAAG;AACvD,UAAM,MAAM,WAAW,KAAK;AAC5B,cAAU,KAAK,aAAa,GAAG,KAAK,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,IAAI,CAAC,EAAE;AAC7D,QAAI,CAAC,IAAI,WAAW,KAAK,GAAG;AAC1B,gBAAU,KAAK,aAAa,GAAG,wBAAwB,QAAQ,KAAK,IAAI,OAAO,eAAe,WAAW,EAAE;AAAA,IAC7G;AAAA,EACF;AACA,aAAW,CAAC,KAAK,KAAK,KAAK,OAAO,QAAQ,MAAM,SAAS,GAAG;AAC1D,UAAM,QAAQ,OAAO,UAAU,YAAY,MAAM,WAAW,GAAG,IAAI,WAAW,KAAK,IAAI;AACvF,UAAM,MAAM,QAAQ,GAAG,MAAM,CAAC,KAAK,MAAM,CAAC,KAAK,MAAM,CAAC,KAAK;AAC3D,cAAU,KAAK,OAAO,GAAG,KAAK,OAAO,KAAK,EAAE;AAAA,EAC9C;AACA,SAAO;AACT;\",\n  \"names\": [\"name\"]\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1731941045245,
      "end": 1731941045245,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941045246,
      "end": 1731941045246,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941045246,
      "end": 1731941045246,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941045246,
      "end": 1731941045246,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941045246,
      "end": 1731941045246,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941045246,
      "end": 1731941045246,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941045248,
      "end": 1731941045248,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941045248,
      "end": 1731941045249,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941045248,
      "end": 1731941045249,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941045249,
      "end": 1731941045249,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941045249,
      "end": 1731941045249,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941045249,
      "end": 1731941045249,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941045249,
      "end": 1731941045249,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941045249,
      "end": 1731941045250,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941045249,
      "end": 1731941045250,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941045251,
      "end": 1731941045251,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941045251,
      "end": 1731941045251,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941045251,
      "end": 1731941045251,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941045251,
      "end": 1731941045251,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941045252,
      "end": 1731941045252,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941045252,
      "end": 1731941045252,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941045253,
      "end": 1731941045253,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941045253,
      "end": 1731941045253,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1731941045253,
      "end": 1731941045253,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941045253,
      "end": 1731941045253,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941045253,
      "end": 1731941045326,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941045326,
      "end": 1731941045327,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941045327,
      "end": 1731941045327,
      "order": "normal"
    }
  ]
}
