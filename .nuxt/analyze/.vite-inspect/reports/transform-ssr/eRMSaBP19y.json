{
  "resolvedId": "D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VTextField/VTextField.mjs",
  "transforms": [
    {
      "name": "vite:load-fallback",
      "result": "import { Fragment as _Fragment, withDirectives as _withDirectives, createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Styles\nimport \"./VTextField.css\";\n\n// Components\nimport { VCounter } from \"../VCounter/VCounter.mjs\";\nimport { filterFieldProps, makeVFieldProps, VField } from \"../VField/VField.mjs\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.mjs\"; // Composables\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Directives\nimport Intersect from \"../../directives/intersect/index.mjs\"; // Utilities\nimport { cloneVNode, computed, nextTick, ref } from 'vue';\nimport { callEvent, filterInputAttrs, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nconst activeTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month'];\nexport const makeVTextFieldProps = propsFactory({\n  autofocus: Boolean,\n  counter: [Boolean, Number, String],\n  counterValue: [Number, Function],\n  prefix: String,\n  placeholder: String,\n  persistentPlaceholder: Boolean,\n  persistentCounter: Boolean,\n  suffix: String,\n  role: String,\n  type: {\n    type: String,\n    default: 'text'\n  },\n  modelModifiers: Object,\n  ...makeVInputProps(),\n  ...makeVFieldProps()\n}, 'VTextField');\nexport const VTextField = genericComponent()({\n  name: 'VTextField',\n  directives: {\n    Intersect\n  },\n  inheritAttrs: false,\n  props: makeVTextFieldProps(),\n  emits: {\n    'click:control': e => true,\n    'mousedown:control': e => true,\n    'update:focused': focused => true,\n    'update:modelValue': val => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const model = useProxiedModel(props, 'modelValue');\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const counterValue = computed(() => {\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : typeof props.counterValue === 'number' ? props.counterValue : (model.value ?? '').toString().length;\n    });\n    const max = computed(() => {\n      if (attrs.maxlength) return attrs.maxlength;\n      if (!props.counter || typeof props.counter !== 'number' && typeof props.counter !== 'string') return undefined;\n      return props.counter;\n    });\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant));\n    function onIntersect(isIntersecting, entries) {\n      if (!props.autofocus || !isIntersecting) return;\n      entries[0].target?.focus?.();\n    }\n    const vInputRef = ref();\n    const vFieldRef = ref();\n    const inputRef = ref();\n    const isActive = computed(() => activeTypes.includes(props.type) || props.persistentPlaceholder || isFocused.value || props.active);\n    function onFocus() {\n      if (inputRef.value !== document.activeElement) {\n        inputRef.value?.focus();\n      }\n      if (!isFocused.value) focus();\n    }\n    function onControlMousedown(e) {\n      emit('mousedown:control', e);\n      if (e.target === inputRef.value) return;\n      onFocus();\n      e.preventDefault();\n    }\n    function onControlClick(e) {\n      onFocus();\n      emit('click:control', e);\n    }\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(() => {\n        model.value = null;\n        callEvent(props['onClick:clear'], e);\n      });\n    }\n    function onInput(e) {\n      const el = e.target;\n      model.value = el.value;\n      if (props.modelModifiers?.trim && ['text', 'search', 'password', 'tel', 'url'].includes(props.type)) {\n        const caretPosition = [el.selectionStart, el.selectionEnd];\n        nextTick(() => {\n          el.selectionStart = caretPosition[0];\n          el.selectionEnd = caretPosition[1];\n        });\n      }\n    }\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter !== false && props.counter != null);\n      const hasDetails = !!(hasCounter || slots.details);\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      const {\n        modelValue: _,\n        ...inputProps\n      } = VInput.filterProps(props);\n      const fieldProps = filterFieldProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": $event => model.value = $event,\n        \"class\": ['v-text-field', {\n          'v-text-field--prefixed': props.prefix,\n          'v-text-field--suffixed': props.suffix,\n          'v-input--plain-underlined': isPlainOrUnderlined.value\n        }, props.class],\n        \"style\": props.style\n      }, rootAttrs, inputProps, {\n        \"centerAffix\": !isPlainOrUnderlined.value,\n        \"focused\": isFocused.value\n      }), {\n        ...slots,\n        default: _ref2 => {\n          let {\n            id,\n            isDisabled,\n            isDirty,\n            isReadonly,\n            isValid\n          } = _ref2;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"onMousedown\": onControlMousedown,\n            \"onClick\": onControlClick,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props['onClick:prependInner'],\n            \"onClick:appendInner\": props['onClick:appendInner'],\n            \"role\": props.role\n          }, fieldProps, {\n            \"id\": id.value,\n            \"active\": isActive.value || isDirty.value,\n            \"dirty\": isDirty.value || props.dirty,\n            \"disabled\": isDisabled.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), {\n            ...slots,\n            default: _ref3 => {\n              let {\n                props: {\n                  class: fieldClass,\n                  ...slotProps\n                }\n              } = _ref3;\n              const inputNode = _withDirectives(_createVNode(\"input\", _mergeProps({\n                \"ref\": inputRef,\n                \"value\": model.value,\n                \"onInput\": onInput,\n                \"autofocus\": props.autofocus,\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"name\": props.name,\n                \"placeholder\": props.placeholder,\n                \"size\": 1,\n                \"type\": props.type,\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), [[_resolveDirective(\"intersect\"), {\n                handler: onIntersect\n              }, null, {\n                once: true\n              }]]);\n              return _createVNode(_Fragment, null, [props.prefix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__prefix\"\n              }, [_createVNode(\"span\", {\n                \"class\": \"v-text-field__prefix__text\"\n              }, [props.prefix])]), slots.default ? _createVNode(\"div\", {\n                \"class\": fieldClass,\n                \"data-no-activator\": \"\"\n              }, [slots.default(), inputNode]) : cloneVNode(inputNode, {\n                class: fieldClass\n              }), props.suffix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__suffix\"\n              }, [_createVNode(\"span\", {\n                \"class\": \"v-text-field__suffix__text\"\n              }, [props.suffix])])]);\n            }\n          });\n        },\n        details: hasDetails ? slotProps => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n          \"active\": props.persistentCounter || isFocused.value,\n          \"value\": counterValue.value,\n          \"max\": max.value\n        }, slots.counter)])]) : undefined\n      });\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef);\n  }\n});\n//# sourceMappingURL=VTextField.mjs.map",
      "start": 1731941048254,
      "end": 1731941048553,
      "sourcemaps": null
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941048553,
      "end": 1731941048553,
      "order": "pre"
    },
    {
      "name": "nuxt:layer-aliasing",
      "start": 1731941048553,
      "end": 1731941048553,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941048553,
      "end": 1731941048553,
      "order": "pre"
    },
    {
      "name": "nuxt:server-devonly:transform",
      "start": 1731941048553,
      "end": 1731941048553,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941048553,
      "end": 1731941048553,
      "order": "pre"
    },
    {
      "name": "unplugin-vue-i18n",
      "start": 1731941048553,
      "end": 1731941048553,
      "order": "pre"
    },
    {
      "name": "nuxt:client-fallback-auto-id",
      "start": 1731941048553,
      "end": 1731941048553,
      "order": "pre"
    },
    {
      "name": "server-only-component-transform",
      "start": 1731941048553,
      "end": 1731941048553,
      "order": "pre"
    },
    {
      "name": "vite:css",
      "start": 1731941048553,
      "end": 1731941048553,
      "order": "normal"
    },
    {
      "name": "vite:esbuild",
      "start": 1731941048553,
      "end": 1731941048553,
      "order": "normal"
    },
    {
      "name": "vite:json",
      "start": 1731941048553,
      "end": 1731941048553,
      "order": "normal"
    },
    {
      "name": "vite:worker",
      "start": 1731941048553,
      "end": 1731941048553,
      "order": "normal"
    },
    {
      "name": "vite:vue",
      "start": 1731941048553,
      "end": 1731941048553,
      "order": "normal"
    },
    {
      "name": "vite:vue-jsx",
      "start": 1731941048553,
      "end": 1731941048553,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941048553,
      "end": 1731941048554,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941048553,
      "end": 1731941048554,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941048554,
      "end": 1731941048554,
      "order": "normal"
    },
    {
      "name": "nuxt:remove-plugin-metadata",
      "start": 1731941048554,
      "end": 1731941048554,
      "order": "normal"
    },
    {
      "name": "nuxt:components:imports",
      "start": 1731941048554,
      "end": 1731941048554,
      "order": "normal"
    },
    {
      "name": "replace",
      "start": 1731941048554,
      "end": 1731941048554,
      "order": "normal"
    },
    {
      "name": "ssr-styles",
      "start": 1731941048554,
      "end": 1731941048556,
      "order": "normal"
    },
    {
      "name": "vite:define",
      "result": "import { Fragment as _Fragment, withDirectives as _withDirectives, createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\nimport \"./VTextField.css\";\nimport { VCounter } from \"../VCounter/VCounter.mjs\";\nimport { filterFieldProps, makeVFieldProps, VField } from \"../VField/VField.mjs\";\nimport { makeVInputProps, VInput } from \"../VInput/VInput.mjs\";\nimport { useFocus } from \"../../composables/focus.mjs\";\nimport { forwardRefs } from \"../../composables/forwardRefs.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\";\nimport Intersect from \"../../directives/intersect/index.mjs\";\nimport { cloneVNode, computed, nextTick, ref } from \"vue\";\nimport { callEvent, filterInputAttrs, genericComponent, propsFactory, useRender } from \"../../util/index.mjs\";\nconst activeTypes = [\"color\", \"file\", \"time\", \"date\", \"datetime-local\", \"week\", \"month\"];\nexport const makeVTextFieldProps = propsFactory({\n  autofocus: Boolean,\n  counter: [Boolean, Number, String],\n  counterValue: [Number, Function],\n  prefix: String,\n  placeholder: String,\n  persistentPlaceholder: Boolean,\n  persistentCounter: Boolean,\n  suffix: String,\n  role: String,\n  type: {\n    type: String,\n    default: \"text\"\n  },\n  modelModifiers: Object,\n  ...makeVInputProps(),\n  ...makeVFieldProps()\n}, \"VTextField\");\nexport const VTextField = genericComponent()({\n  name: \"VTextField\",\n  directives: {\n    Intersect\n  },\n  inheritAttrs: false,\n  props: makeVTextFieldProps(),\n  emits: {\n    \"click:control\": (e) => true,\n    \"mousedown:control\": (e) => true,\n    \"update:focused\": (focused) => true,\n    \"update:modelValue\": (val) => true\n  },\n  setup(props, _ref) {\n    let {\n      attrs,\n      emit,\n      slots\n    } = _ref;\n    const model = useProxiedModel(props, \"modelValue\");\n    const {\n      isFocused,\n      focus,\n      blur\n    } = useFocus(props);\n    const counterValue = computed(() => {\n      return typeof props.counterValue === \"function\" ? props.counterValue(model.value) : typeof props.counterValue === \"number\" ? props.counterValue : (model.value ?? \"\").toString().length;\n    });\n    const max = computed(() => {\n      if (attrs.maxlength)\n        return attrs.maxlength;\n      if (!props.counter || typeof props.counter !== \"number\" && typeof props.counter !== \"string\")\n        return void 0;\n      return props.counter;\n    });\n    const isPlainOrUnderlined = computed(() => [\"plain\", \"underlined\"].includes(props.variant));\n    function onIntersect(isIntersecting, entries) {\n      if (!props.autofocus || !isIntersecting)\n        return;\n      entries[0].target?.focus?.();\n    }\n    const vInputRef = ref();\n    const vFieldRef = ref();\n    const inputRef = ref();\n    const isActive = computed(() => activeTypes.includes(props.type) || props.persistentPlaceholder || isFocused.value || props.active);\n    function onFocus() {\n      if (inputRef.value !== (void 0).activeElement) {\n        inputRef.value?.focus();\n      }\n      if (!isFocused.value)\n        focus();\n    }\n    function onControlMousedown(e) {\n      emit(\"mousedown:control\", e);\n      if (e.target === inputRef.value)\n        return;\n      onFocus();\n      e.preventDefault();\n    }\n    function onControlClick(e) {\n      onFocus();\n      emit(\"click:control\", e);\n    }\n    function onClear(e) {\n      e.stopPropagation();\n      onFocus();\n      nextTick(() => {\n        model.value = null;\n        callEvent(props[\"onClick:clear\"], e);\n      });\n    }\n    function onInput(e) {\n      const el = e.target;\n      model.value = el.value;\n      if (props.modelModifiers?.trim && [\"text\", \"search\", \"password\", \"tel\", \"url\"].includes(props.type)) {\n        const caretPosition = [el.selectionStart, el.selectionEnd];\n        nextTick(() => {\n          el.selectionStart = caretPosition[0];\n          el.selectionEnd = caretPosition[1];\n        });\n      }\n    }\n    useRender(() => {\n      const hasCounter = !!(slots.counter || props.counter !== false && props.counter != null);\n      const hasDetails = !!(hasCounter || slots.details);\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\n      const {\n        modelValue: _,\n        ...inputProps\n      } = VInput.filterProps(props);\n      const fieldProps = filterFieldProps(props);\n      return _createVNode(VInput, _mergeProps({\n        \"ref\": vInputRef,\n        \"modelValue\": model.value,\n        \"onUpdate:modelValue\": ($event) => model.value = $event,\n        \"class\": [\"v-text-field\", {\n          \"v-text-field--prefixed\": props.prefix,\n          \"v-text-field--suffixed\": props.suffix,\n          \"v-input--plain-underlined\": isPlainOrUnderlined.value\n        }, props.class],\n        \"style\": props.style\n      }, rootAttrs, inputProps, {\n        \"centerAffix\": !isPlainOrUnderlined.value,\n        \"focused\": isFocused.value\n      }), {\n        ...slots,\n        default: (_ref2) => {\n          let {\n            id,\n            isDisabled,\n            isDirty,\n            isReadonly,\n            isValid\n          } = _ref2;\n          return _createVNode(VField, _mergeProps({\n            \"ref\": vFieldRef,\n            \"onMousedown\": onControlMousedown,\n            \"onClick\": onControlClick,\n            \"onClick:clear\": onClear,\n            \"onClick:prependInner\": props[\"onClick:prependInner\"],\n            \"onClick:appendInner\": props[\"onClick:appendInner\"],\n            \"role\": props.role\n          }, fieldProps, {\n            \"id\": id.value,\n            \"active\": isActive.value || isDirty.value,\n            \"dirty\": isDirty.value || props.dirty,\n            \"disabled\": isDisabled.value,\n            \"focused\": isFocused.value,\n            \"error\": isValid.value === false\n          }), {\n            ...slots,\n            default: (_ref3) => {\n              let {\n                props: {\n                  class: fieldClass,\n                  ...slotProps\n                }\n              } = _ref3;\n              const inputNode = _withDirectives(_createVNode(\"input\", _mergeProps({\n                \"ref\": inputRef,\n                \"value\": model.value,\n                \"onInput\": onInput,\n                \"autofocus\": props.autofocus,\n                \"readonly\": isReadonly.value,\n                \"disabled\": isDisabled.value,\n                \"name\": props.name,\n                \"placeholder\": props.placeholder,\n                \"size\": 1,\n                \"type\": props.type,\n                \"onFocus\": onFocus,\n                \"onBlur\": blur\n              }, slotProps, inputAttrs), null), [[_resolveDirective(\"intersect\"), {\n                handler: onIntersect\n              }, null, {\n                once: true\n              }]]);\n              return _createVNode(_Fragment, null, [props.prefix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__prefix\"\n              }, [_createVNode(\"span\", {\n                \"class\": \"v-text-field__prefix__text\"\n              }, [props.prefix])]), slots.default ? _createVNode(\"div\", {\n                \"class\": fieldClass,\n                \"data-no-activator\": \"\"\n              }, [slots.default(), inputNode]) : cloneVNode(inputNode, {\n                class: fieldClass\n              }), props.suffix && _createVNode(\"span\", {\n                \"class\": \"v-text-field__suffix\"\n              }, [_createVNode(\"span\", {\n                \"class\": \"v-text-field__suffix__text\"\n              }, [props.suffix])])]);\n            }\n          });\n        },\n        details: hasDetails ? (slotProps) => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\"span\", null, null), _createVNode(VCounter, {\n          \"active\": props.persistentCounter || isFocused.value,\n          \"value\": counterValue.value,\n          \"max\": max.value\n        }, slots.counter)])]) : void 0\n      });\n    });\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef);\n  }\n});\n",
      "start": 1731941048556,
      "end": 1731941048690,
      "order": "normal",
      "sourcemaps": "{\n  \"version\": 3,\n  \"sources\": [\"D:/Projects/Nabtaty-dashboard-de3bd56d6663c71275c3f076b188500fce6955c7/node_modules/vuetify/lib/components/VTextField/VTextField.mjs\"],\n  \"sourcesContent\": [\"import { Fragment as _Fragment, withDirectives as _withDirectives, createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \\\"vue\\\";\\n// Styles\\nimport \\\"./VTextField.css\\\";\\n\\n// Components\\nimport { VCounter } from \\\"../VCounter/VCounter.mjs\\\";\\nimport { filterFieldProps, makeVFieldProps, VField } from \\\"../VField/VField.mjs\\\";\\nimport { makeVInputProps, VInput } from \\\"../VInput/VInput.mjs\\\"; // Composables\\nimport { useFocus } from \\\"../../composables/focus.mjs\\\";\\nimport { forwardRefs } from \\\"../../composables/forwardRefs.mjs\\\";\\nimport { useProxiedModel } from \\\"../../composables/proxiedModel.mjs\\\"; // Directives\\nimport Intersect from \\\"../../directives/intersect/index.mjs\\\"; // Utilities\\nimport { cloneVNode, computed, nextTick, ref } from 'vue';\\nimport { callEvent, filterInputAttrs, genericComponent, propsFactory, useRender } from \\\"../../util/index.mjs\\\"; // Types\\nconst activeTypes = ['color', 'file', 'time', 'date', 'datetime-local', 'week', 'month'];\\nexport const makeVTextFieldProps = propsFactory({\\n  autofocus: Boolean,\\n  counter: [Boolean, Number, String],\\n  counterValue: [Number, Function],\\n  prefix: String,\\n  placeholder: String,\\n  persistentPlaceholder: Boolean,\\n  persistentCounter: Boolean,\\n  suffix: String,\\n  role: String,\\n  type: {\\n    type: String,\\n    default: 'text'\\n  },\\n  modelModifiers: Object,\\n  ...makeVInputProps(),\\n  ...makeVFieldProps()\\n}, 'VTextField');\\nexport const VTextField = genericComponent()({\\n  name: 'VTextField',\\n  directives: {\\n    Intersect\\n  },\\n  inheritAttrs: false,\\n  props: makeVTextFieldProps(),\\n  emits: {\\n    'click:control': e => true,\\n    'mousedown:control': e => true,\\n    'update:focused': focused => true,\\n    'update:modelValue': val => true\\n  },\\n  setup(props, _ref) {\\n    let {\\n      attrs,\\n      emit,\\n      slots\\n    } = _ref;\\n    const model = useProxiedModel(props, 'modelValue');\\n    const {\\n      isFocused,\\n      focus,\\n      blur\\n    } = useFocus(props);\\n    const counterValue = computed(() => {\\n      return typeof props.counterValue === 'function' ? props.counterValue(model.value) : typeof props.counterValue === 'number' ? props.counterValue : (model.value ?? '').toString().length;\\n    });\\n    const max = computed(() => {\\n      if (attrs.maxlength) return attrs.maxlength;\\n      if (!props.counter || typeof props.counter !== 'number' && typeof props.counter !== 'string') return undefined;\\n      return props.counter;\\n    });\\n    const isPlainOrUnderlined = computed(() => ['plain', 'underlined'].includes(props.variant));\\n    function onIntersect(isIntersecting, entries) {\\n      if (!props.autofocus || !isIntersecting) return;\\n      entries[0].target?.focus?.();\\n    }\\n    const vInputRef = ref();\\n    const vFieldRef = ref();\\n    const inputRef = ref();\\n    const isActive = computed(() => activeTypes.includes(props.type) || props.persistentPlaceholder || isFocused.value || props.active);\\n    function onFocus() {\\n      if (inputRef.value !== document.activeElement) {\\n        inputRef.value?.focus();\\n      }\\n      if (!isFocused.value) focus();\\n    }\\n    function onControlMousedown(e) {\\n      emit('mousedown:control', e);\\n      if (e.target === inputRef.value) return;\\n      onFocus();\\n      e.preventDefault();\\n    }\\n    function onControlClick(e) {\\n      onFocus();\\n      emit('click:control', e);\\n    }\\n    function onClear(e) {\\n      e.stopPropagation();\\n      onFocus();\\n      nextTick(() => {\\n        model.value = null;\\n        callEvent(props['onClick:clear'], e);\\n      });\\n    }\\n    function onInput(e) {\\n      const el = e.target;\\n      model.value = el.value;\\n      if (props.modelModifiers?.trim && ['text', 'search', 'password', 'tel', 'url'].includes(props.type)) {\\n        const caretPosition = [el.selectionStart, el.selectionEnd];\\n        nextTick(() => {\\n          el.selectionStart = caretPosition[0];\\n          el.selectionEnd = caretPosition[1];\\n        });\\n      }\\n    }\\n    useRender(() => {\\n      const hasCounter = !!(slots.counter || props.counter !== false && props.counter != null);\\n      const hasDetails = !!(hasCounter || slots.details);\\n      const [rootAttrs, inputAttrs] = filterInputAttrs(attrs);\\n      const {\\n        modelValue: _,\\n        ...inputProps\\n      } = VInput.filterProps(props);\\n      const fieldProps = filterFieldProps(props);\\n      return _createVNode(VInput, _mergeProps({\\n        \\\"ref\\\": vInputRef,\\n        \\\"modelValue\\\": model.value,\\n        \\\"onUpdate:modelValue\\\": $event => model.value = $event,\\n        \\\"class\\\": ['v-text-field', {\\n          'v-text-field--prefixed': props.prefix,\\n          'v-text-field--suffixed': props.suffix,\\n          'v-input--plain-underlined': isPlainOrUnderlined.value\\n        }, props.class],\\n        \\\"style\\\": props.style\\n      }, rootAttrs, inputProps, {\\n        \\\"centerAffix\\\": !isPlainOrUnderlined.value,\\n        \\\"focused\\\": isFocused.value\\n      }), {\\n        ...slots,\\n        default: _ref2 => {\\n          let {\\n            id,\\n            isDisabled,\\n            isDirty,\\n            isReadonly,\\n            isValid\\n          } = _ref2;\\n          return _createVNode(VField, _mergeProps({\\n            \\\"ref\\\": vFieldRef,\\n            \\\"onMousedown\\\": onControlMousedown,\\n            \\\"onClick\\\": onControlClick,\\n            \\\"onClick:clear\\\": onClear,\\n            \\\"onClick:prependInner\\\": props['onClick:prependInner'],\\n            \\\"onClick:appendInner\\\": props['onClick:appendInner'],\\n            \\\"role\\\": props.role\\n          }, fieldProps, {\\n            \\\"id\\\": id.value,\\n            \\\"active\\\": isActive.value || isDirty.value,\\n            \\\"dirty\\\": isDirty.value || props.dirty,\\n            \\\"disabled\\\": isDisabled.value,\\n            \\\"focused\\\": isFocused.value,\\n            \\\"error\\\": isValid.value === false\\n          }), {\\n            ...slots,\\n            default: _ref3 => {\\n              let {\\n                props: {\\n                  class: fieldClass,\\n                  ...slotProps\\n                }\\n              } = _ref3;\\n              const inputNode = _withDirectives(_createVNode(\\\"input\\\", _mergeProps({\\n                \\\"ref\\\": inputRef,\\n                \\\"value\\\": model.value,\\n                \\\"onInput\\\": onInput,\\n                \\\"autofocus\\\": props.autofocus,\\n                \\\"readonly\\\": isReadonly.value,\\n                \\\"disabled\\\": isDisabled.value,\\n                \\\"name\\\": props.name,\\n                \\\"placeholder\\\": props.placeholder,\\n                \\\"size\\\": 1,\\n                \\\"type\\\": props.type,\\n                \\\"onFocus\\\": onFocus,\\n                \\\"onBlur\\\": blur\\n              }, slotProps, inputAttrs), null), [[_resolveDirective(\\\"intersect\\\"), {\\n                handler: onIntersect\\n              }, null, {\\n                once: true\\n              }]]);\\n              return _createVNode(_Fragment, null, [props.prefix && _createVNode(\\\"span\\\", {\\n                \\\"class\\\": \\\"v-text-field__prefix\\\"\\n              }, [_createVNode(\\\"span\\\", {\\n                \\\"class\\\": \\\"v-text-field__prefix__text\\\"\\n              }, [props.prefix])]), slots.default ? _createVNode(\\\"div\\\", {\\n                \\\"class\\\": fieldClass,\\n                \\\"data-no-activator\\\": \\\"\\\"\\n              }, [slots.default(), inputNode]) : cloneVNode(inputNode, {\\n                class: fieldClass\\n              }), props.suffix && _createVNode(\\\"span\\\", {\\n                \\\"class\\\": \\\"v-text-field__suffix\\\"\\n              }, [_createVNode(\\\"span\\\", {\\n                \\\"class\\\": \\\"v-text-field__suffix__text\\\"\\n              }, [props.suffix])])]);\\n            }\\n          });\\n        },\\n        details: hasDetails ? slotProps => _createVNode(_Fragment, null, [slots.details?.(slotProps), hasCounter && _createVNode(_Fragment, null, [_createVNode(\\\"span\\\", null, null), _createVNode(VCounter, {\\n          \\\"active\\\": props.persistentCounter || isFocused.value,\\n          \\\"value\\\": counterValue.value,\\n          \\\"max\\\": max.value\\n        }, slots.counter)])]) : undefined\\n      });\\n    });\\n    return forwardRefs({}, vInputRef, vFieldRef, inputRef);\\n  }\\n});\\n//# sourceMappingURL=VTextField.mjs.map\"],\n  \"mappings\": \"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\",\n  \"names\": []\n}\n"
    },
    {
      "name": "vite:css-post",
      "start": 1731941048691,
      "end": 1731941048691,
      "order": "normal"
    },
    {
      "name": "vite:build-html",
      "start": 1731941048691,
      "end": 1731941048691,
      "order": "normal"
    },
    {
      "name": "vite:worker-import-meta-url",
      "start": 1731941048691,
      "end": 1731941048691,
      "order": "normal"
    },
    {
      "name": "vite:asset-import-meta-url",
      "start": 1731941048691,
      "end": 1731941048691,
      "order": "normal"
    },
    {
      "name": "commonjs",
      "start": 1731941048691,
      "end": 1731941048691,
      "order": "normal"
    },
    {
      "name": "vite:dynamic-import-vars",
      "start": 1731941048691,
      "end": 1731941048691,
      "order": "normal"
    },
    {
      "name": "vite:import-glob",
      "start": 1731941048691,
      "end": 1731941048691,
      "order": "normal"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941048691,
      "end": 1731941048692,
      "order": "post"
    },
    {
      "name": "nuxt:composable-keys",
      "start": 1731941048691,
      "end": 1731941048692,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941048692,
      "end": 1731941048692,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-macros-transform",
      "start": 1731941048692,
      "end": 1731941048692,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941048692,
      "end": 1731941048692,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-resource",
      "start": 1731941048692,
      "end": 1731941048692,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941048692,
      "end": 1731941048692,
      "order": "post"
    },
    {
      "name": "nuxtjs:i18n-meta-deprecation",
      "start": 1731941048692,
      "end": 1731941048692,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941048692,
      "end": 1731941048692,
      "order": "post"
    },
    {
      "name": "unplugin-vue-components",
      "start": 1731941048692,
      "end": 1731941048692,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941048693,
      "end": 1731941048693,
      "order": "post"
    },
    {
      "name": "nuxt:imports-transform",
      "start": 1731941048693,
      "end": 1731941048693,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941048693,
      "end": 1731941048693,
      "order": "post"
    },
    {
      "name": "unctx:transform",
      "start": 1731941048693,
      "end": 1731941048693,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941048693,
      "end": 1731941048693,
      "order": "post"
    },
    {
      "name": "nuxt:pages-macros-transform",
      "start": 1731941048693,
      "end": 1731941048693,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-template",
      "start": 1731941048693,
      "end": 1731941048693,
      "order": "post"
    },
    {
      "name": "nuxt:components-loader",
      "start": 1731941048694,
      "end": 1731941048694,
      "order": "post"
    },
    {
      "name": "nuxt:tree-shake-composables:transform",
      "start": 1731941048694,
      "end": 1731941048699,
      "order": "post"
    },
    {
      "name": "vite:build-import-analysis",
      "start": 1731941048699,
      "end": 1731941048699,
      "order": "normal"
    },
    {
      "name": "vite:reporter",
      "start": 1731941048699,
      "end": 1731941048699,
      "order": "normal"
    }
  ]
}
