{"version":3,"file":"icon-jIl0hTBH.js","sources":["../../../../node_modules/@vesp/nuxt-fontawesome/dist/runtime/utils.mjs","../../../../node_modules/@vesp/nuxt-fontawesome/dist/runtime/components/icon.vue"],"sourcesContent":["export function transformIsMeaningful(transform) {\n  const meaninglessTransform = {\n    size: 16,\n    x: 0,\n    y: 0,\n    rotate: 0,\n    flipX: false,\n    flipY: false\n  };\n  return transform.size !== meaninglessTransform.size || transform.x !== meaninglessTransform.x || transform.y !== meaninglessTransform.y || transform.rotate !== meaninglessTransform.rotate || transform.flipX || transform.flipY;\n}\n","<template>\n  <svg v-if=\"parsedIcon && symbol\" style=\"display: none\">\n    <symbol v-bind=\"properties\" v-html=\"htmlTag\" />\n  </svg>\n  <svg v-else-if=\"parsedIcon\" v-bind=\"properties\" v-html=\"htmlTag\" />\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  icon as faIcon,\n  parse as faParse,\n  config as faConfig,\n  type IconDefinition,\n  type IconLookup,\n  type Transform,\n} from '@fortawesome/fontawesome-svg-core'\nimport {computed} from 'vue'\nimport type {IconName} from '@fortawesome/fontawesome-common-types'\nimport {transformIsMeaningful} from '../utils'\n\nconst props = defineProps({\n  border: {\n    type: Boolean,\n    default: false,\n  },\n  fixedWidth: {\n    type: Boolean,\n    default: false,\n  },\n  flip: {\n    type: [Boolean, String],\n    default: false,\n    validator: (value: any) => [true, false, 'horizontal', 'vertical', 'both'].includes(value),\n  },\n  icon: {\n    type: [Object, Array, String],\n    required: true,\n  },\n  mask: {\n    type: [Object, Array, String],\n    default: null,\n  },\n  maskId: {\n    type: String,\n    default: undefined,\n  },\n  listItem: {\n    type: Boolean,\n    default: false,\n  },\n  pull: {\n    type: String,\n    default: undefined,\n    validator: (value: any) => ['right', 'left'].includes(value),\n  },\n  pulse: {\n    type: Boolean,\n    default: false,\n  },\n  rotation: {\n    type: [String, Number],\n    default: undefined,\n    validator: (value: any) => [90, 180, 270].includes(Number.parseInt(value, 10)),\n  },\n  swapOpacity: {\n    type: Boolean,\n    default: false,\n  },\n  size: {\n    type: String,\n    default: undefined,\n    validator: (value: any) =>\n      ['2xs', 'xs', 'sm', 'lg', 'xl', '2xl', '1x', '2x', '3x', '4x', '5x', '6x', '7x', '8x', '9x', '10x'].includes(\n        value,\n      ),\n  },\n  spin: {\n    type: Boolean,\n    default: false,\n  },\n  transform: {\n    type: [String, Object],\n    default: undefined,\n  },\n  symbol: {\n    type: [Boolean, String],\n    default: false,\n  },\n  title: {\n    type: String,\n    default: undefined,\n  },\n  titleId: {\n    type: String,\n    default: undefined,\n  },\n  inverse: {\n    type: Boolean,\n    default: false,\n  },\n  bounce: {\n    type: Boolean,\n    default: false,\n  },\n  shake: {\n    type: Boolean,\n    default: false,\n  },\n  beat: {\n    type: Boolean,\n    default: false,\n  },\n  fade: {\n    type: Boolean,\n    default: false,\n  },\n  beatFade: {\n    type: Boolean,\n    default: false,\n  },\n  spinPulse: {\n    type: Boolean,\n    default: false,\n  },\n  spinReverse: {\n    type: Boolean,\n    default: false,\n  },\n})\n\nconst icon = computed(() => normalizeIconArgs(props.icon))\nconst mask = computed(() => normalizeIconArgs(props.mask))\nconst transform = computed(() => {\n  if (props.transform) {\n    const transform = typeof props.transform !== 'object' ? faParse.transform(props.transform) : props.transform\n    if (transform && transformIsMeaningful(transform)) {\n      return transformForSvg(transform)\n    }\n  }\n  return undefined\n})\nconst parsedIcon = computed(() => {\n  return faIcon(icon.value as IconLookup, {\n    classes: classes.value,\n    title: props.title,\n    titleId: props.titleId,\n  })\n})\nconst parsedMask = computed(() => faIcon(mask.value as IconLookup))\nconst properties = computed(() => {\n  const properties: Record<string, any> = {\n    'aria-hidden': true,\n    'data-prefix': parsedIcon.value?.prefix,\n    'data-icon': parsedIcon.value?.iconName,\n    class: classes.value,\n    focusable: false,\n    role: 'img',\n    xmlns: 'http://www.w3.org/2000/svg',\n    viewBox: `0 0 ${parsedIcon.value?.icon[0]} ${parsedIcon.value?.icon[1]}`,\n  }\n  if (props.symbol) {\n    properties.id = [parsedIcon.value?.prefix, 'fa', parsedIcon.value?.iconName].join('-')\n  }\n  if (props.title) {\n    properties['aria-labelledby'] = uniqueId.value\n  }\n\n  return properties\n})\nconst htmlTag = computed(() => {\n  const svg = getSVG()\n  if (parsedMask.value) {\n    const id = props.maskId || parsedMask.value.iconName\n    return `<defs>\n      <clipPath id=\"clip-${id}\">\n        <path fill=\"currentColor\" d=\"${parsedMask.value.icon[4]}\"></path>\n      </clipPath>\n      <mask id=\"mask-${id}\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" maskUnits=\"userSpaceOnUse\" maskContentUnits=\"userSpaceOnUse\">\n        <rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" fill=\"white\"></rect>\n        ${svg}\n      </mask>\n    </defs>\n    <rect fill=\"currentColor\" clip-path=\"url(#clip-${id})\" mask=\"url(#mask-${id})\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\"></rect>`\n  }\n  return svg\n})\nconst classes = computed(() => {\n  const classes = {\n    'fa-spin': props.spin,\n    'fa-pulse': props.pulse,\n    'fa-fw': props.fixedWidth,\n    'fa-border': props.border,\n    'fa-li': props.listItem,\n    'fa-inverse': props.inverse,\n    'fa-flip': props.flip === true,\n    'fa-flip-horizontal': props.flip === 'horizontal' || props.flip === 'both',\n    'fa-flip-vertical': props.flip === 'vertical' || props.flip === 'both',\n    [`fa-${props.size}`]: props.size !== undefined,\n    [`fa-rotate-${props.rotation}`]: props.rotation !== undefined,\n    [`fa-pull-${props.pull}`]: props.pull !== undefined,\n    'fa-swap-opacity': props.swapOpacity,\n    'fa-bounce': props.bounce,\n    'fa-shake': props.shake,\n    'fa-beat': props.beat,\n    'fa-fade': props.fade,\n    'fa-beat-fade': props.beatFade,\n    'fa-spin-pulse': props.spinPulse,\n    'fa-spin-reverse': props.spinReverse,\n  }\n\n  const active = Object.keys(classes)\n    .map((key) => (classes[key] ? key : null))\n    .filter((key) => key)\n\n  return [faConfig.replacementClass, ...active] as string[]\n})\n\nconst uniqueId = computed(() => {\n  return faConfig.replacementClass + '-title-' + (props.titleId || nextUniqueId())\n})\n\nfunction normalizeIconArgs(icon: Record<string, any> | string | string[] | null) {\n  if (icon) {\n    if (typeof icon === 'string') {\n      const styles: Record<string, string> = {\n        solid: 'fas',\n        regular: 'far',\n        light: 'fal',\n        thin: 'fat',\n        duotone: 'fad',\n        brands: 'fab',\n      }\n      let prefix = styles[faConfig.styleDefault] || 'fas'\n      let iconName = icon.replace(/\\bfa-/g, '')\n      if (iconName.includes(' ')) {\n        const tmp: string[] = iconName.split(/\\s+/)\n        if (tmp[0] in styles) {\n          prefix = styles[tmp[0]]\n        }\n        iconName = tmp[1]\n      }\n\n      return {prefix, iconName}\n    }\n\n    if (Array.isArray(icon) && icon.length === 2) {\n      return {prefix: icon[0], iconName: icon[1]}\n    }\n\n    if (typeof icon === 'object' && 'prefix' in icon && 'iconName' in icon) {\n      return icon as IconDefinition\n    }\n  }\n\n  return undefined\n}\n\nfunction transformForSvg(transform: Transform) {\n  const containerWidth = 512\n  const iconWidth = parsedIcon.value?.icon[0] || 512\n  const x = transform.x || 0\n  const y = transform.y || 0\n  const size = transform.size || 0\n  const rotate = transform.rotate || 0\n  const flipX = transform.flipX || 0\n  const flipY = transform.flipY || 0\n\n  const outer = 'translate('.concat(String(containerWidth / 2), ' 256)')\n  const innerTranslate = 'translate('.concat(String(x * 32), ', ').concat(String(y * 32), ') ')\n  const innerScale = 'scale('\n    .concat(String((size / 16) * (flipX ? -1 : 1)), ', ')\n    .concat(String((size / 16) * (flipY ? -1 : 1)), ') ')\n  const innerRotate = 'rotate('.concat(String(rotate), ' 0 0)')\n  const inner = ''.concat(innerTranslate, ' ').concat(innerScale, ' ').concat(innerRotate)\n  const path = 'translate('.concat(String((iconWidth / 2) * -1), ' -256)')\n\n  return {outer, inner, path}\n}\n\nfunction nextUniqueId() {\n  const idPool = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'\n\n  let size = 12\n  let id = ''\n  while (size-- > 0) {\n    id += idPool[(Math.random() * 62) | 0]\n  }\n\n  return id\n}\n\nfunction getSVG() {\n  const fill = parsedMask.value ? 'black' : 'currentColor'\n  const svg = []\n\n  let path = parsedIcon.value.icon[4]\n  if (!Array.isArray(path)) {\n    path = [path]\n  }\n  path.forEach((i: string) => {\n    svg.push(\n      `<path fill=\"${fill}\"${transform.value ? ' transform=\"' + transform.value.path + '\"' : ''} d=\"${i}\"></path>`,\n    )\n  })\n\n  if (transform.value) {\n    svg.unshift(`<g transform=\"${transform.value.outer}\">`, `<g transform=\"${transform.value.inner}\">`)\n    svg.push('</g>', '</g>')\n  }\n  if (props.title) {\n    svg.unshift(`<title id=\"${uniqueId.value}\">${props.title}</title>`)\n  }\n\n  return svg.join('')\n}\n\nif (props.icon && !parsedIcon.value) {\n  console.info('Could not find main icon', icon.value)\n}\nif (props.mask && !parsedMask.value) {\n  console.info('Could not find mask icon', mask.value)\n}\n</script>\n"],"names":["icon","transform","faParse","faIcon","properties","classes","faConfig"],"mappings":"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","x_google_ignoreList":[0,1]}